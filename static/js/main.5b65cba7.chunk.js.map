{"version":3,"sources":["lib/threejs/Compartment.js","lib/threejs/ProgressBar.js","lib/threejs/FluxArrow.js","lib/threejs/SceneManager.js","lib/datGui/Interface.js","lib/datGui/Controller.js","lib/utilities/ActionUtilities.js","lib/MouseHandler.js","lib/KeyboardHandler.js","components/ThreeContainer.js","lib/threejs/threeEntryPoint.js","lib/utilities/FileUtilities.js","components/FileInput.js","lib/Model.js","lib/LocalStorage.js","components/Navigation.js","components/SavedPlot.js","components/StorageList.js","lib/DataContext.js","App.js","registerServiceWorker.js","index.js"],"names":["tinyColor","require","origRadius","Compartment","index","previousState","arguments","length","undefined","Object","classCallCheck","this","originalPosition","x","y","z","isState","dataIndex","labelText","baseColor","radius","shadowMargin","shadowPushBack","textPullForward","shadow","geometry","THREE","mesh","material","color","object","position","set","scale","adjustScale","withinCircle","bind","appendText","moveText","moveIndexText","setPosition","changeTextSize","changeIndexTextSize","transformColor","changeColor","lightenColor","darkenColor","showIndex","update","pos","Math","sqrt","newRadius","newScale","font","text","xpos","ypos","size","height","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelSegments","textMesh","rotation","PI","newX","newY","box","setFromObject","max","min","indexTextMesh","colorObject","r","g","b","toHexString","toString","percent","lighten","darken","barLength","ProgressBar","fontResource","yPos","stepLength","bar","progress","start","stop","progressLength","updateProgress","createText","createTitle","withinBar","getStep","setSteps","getBar","step","timeInfo","cX","cY","titleTextMesh","clickedPos","round","numOfSteps","initialCompartmentRadius","FluxArrow","arrowInfo","legacySaveIndex","arrowLength","dataPointRadius","arrowWidth","dir","calculateDir","normalize","calculateLength","calculatePos","updatePos","setLength","delete","distance","point2","point1","adjust","shiftAmount","shift","newColor","to","from","setDirection","len","scene","remove","origLength","SceneManager","canvas","dataContext","_this","zoomCamera","zoom","newZoom","camera","updateProjectionMatrix","screenDimensions","width","origin","loadFont","fontLoadingComplete","buildScene","renderer","buildRender","buildCamera","registerCallbacks","reloadScene","reloadCompartments","reloadArrows","buildProgressBar","changeAllRadius","updateArrows","addFluxArrow","removeFromScene","addCompartment","addArrow","renameCompartment","updateCompartmentIndexText","generateCompartments","showCompartmentIndexText","hideCompartmentIndexText","showFluxIndexText","hideFluxIndexText","updateProgressBar","colorPoints","moveCamera","canvasToThreePos","moveProgressBar","progressBar","add","compartment","arrow","newName","load","background","antialias","alpha","DPR","window","devicePixelRatio","setPixelRatio","setSize","gammaInput","gammaOutput","_ref","lookAt","c","onFluxLoad","onLoad","animationData","registerCallback","clearScene","traverse","child","push","i","_this2","hydratedArrows","legacyArrowIndex","arrows","forEach","oldArrow","restoreArrow","mousePos","asIs","rect","getBoundingClientRect","_this3","hydratedCompartments","compartments","oldPoint","point","restoreCompartment","savedData","legacyIndex","geometries","data","pointIndex1","arrowPoints","pointIndex2","arrowMode","deletedDataPoint","index1","index2","splice","showIndices","changePercent","halfQuantity","fluxData","halfFlux","alert","spaceBetween","eColumn","compartmentIndex","xPos","label","labels","render","Interface","controller","gui","dat","autoPlace","createHTMLElement","createMenu","updateDisplay","document","getElementById","appendChild","domElement","id","controls","name","buildAnimationFolder","addFolder","buildEditingFolder","buildInterpretationFolder","folder","onChange","stepDelayCallback","skipStepsCallback","editFolder","editModeCallback","labelModeCallback","showIndicesCallback","listen","onFinishChange","compIndexCallback","labelCallback","sizeCallback","valueMaxCallback","fluxMaxCallback","addColor","colorCallback","actionUtil","ms","Promise","resolve","setTimeout","Controller","sceneManager","createControls","callbacks","createCallbacks","cIndex","compIndex","bindControllerFunctions","valueMax","fluxMax","stepDelay","skipSteps","generateFluxArrows","seekHelp","singleStep","startStepping","pauseAnimation","resetAnimation","reset","addPoint","deletePoint","editMode","labelMode","isDataLoaded","applyStep","stepForward","deleteDataPoint","newValue","userSelectedDataPoint","show","revealIndices","dataLoaded","deletedPoint","paused","prompt","open","location","href","hasNextStep","sleep","fluxOriginLabels","fluxDestinationLabels","j","element","toLowerCase","trim","MouseHandler","mouseDown","mouseUp","mouseMove","bindLocalFunctions","setupEventListeners","handler","getMousePos","checkWithinRange","evt","dataPointToMove","newMousePos","addEventListener","clientX","left","clientY","top","mousePosUncorrected","selected","isUndefined","clickedStep","keyboardHandler","moveScene","up","zoomScene","direction","keyPress","event","preventDefault","console","log","code","ThreeContainer","props","possibleConstructorReturn","getPrototypeOf","call","container","createElement","scrollWidth","scrollHeight","createCanvas","stepInc","ensureDefaults","KeyboardHandler","menu","updatePanel","requestAnimationFrame","threeEntryPoint","threeRootElement","react_default","a","className","ref","Component","FileUtilities","xlsxFile","onComplete","reader","FileReader","readAsBinaryString","onload","csvSheetStrings","transformXLXSIntoCsvStrings","result","parseSingleCSV","file","readAsText","JSON","parse","binaryContents","XLSX","csvStrings","workbook","read","type","SheetNames","utils","sheet_to_csv","Sheets","csvString","ch","numOfRows","numOfColumns","charAt","Array","rows","split","FileInput","title","processUpload","assertThisInitialized","state","callback","onDone","accept","plot","isPlot","files","e","readPlots","target","readXLSX","fileUtil","processPlotsData","dataString","hasNoFiles","processXLSXIntoCSV","FormGroup_default","ControlLabel_default","htmlFor","style","cursor","FormControl_default","input","fileInput","display","NavItem","Model","LocalStorage","modelName","model","newModelTemplate","loadModelsFromDefaultContainer","models","saveToStore","catch","key","value","failureMsg","localforage","setItem","stringify","String","_context2","t0","getItem","substring","_context3","addition","modelId","hasOwnProperty","versions","newModelVersion","reducedList","fetchFromStore","dataArray","Navigation","IController","uploadPoints","uploadDataPoints","uploadFlux","uploadFluxData","toast","POSITION","TOP_LEFT","localStorage","blobData","Blob","textFile","URL","createObjectURL","downloadAnchorNode","setAttribute","body","click","injectCompartmentList","injectFluxList","confirm","writeToLocalStorage","reload","preventRedirect","Navbar_default","inverse","Header","Brand","Form_default","inline","FileInput_FileInput","onClick","uploadModels","downloadLocalStorage","lib","autoClose","SavedPlot","param","dataCapsule","StorageList","parent","entries","handleClick","addToLocal","removeFromLocal","loadSaves","createButtonEntry","createEntryName","createGrid","activeModelName","capsule","currentPlot","isActive","save","Button_default","applyName","SavedPlot_SavedPlot","s","resp","solictStorageName","addNewModelToLocal","forceUpdate","removeFromStorage","success","extension","updateStorage","loadFromStorage","ThreeController","setState","_this4","DataContext","plot_id","dataPoints","assign","callObservers","currentPlotDetails","loadPlot","loadCompartmentData","loadFluxData","xlsxData","isNaN","App","resetDataAnimation","fetchSaves","saves","currentContext","Grid_default","fluid","Row_default","components_Navigation","Col_default","sm","md","StorageList_StorageList","alt","src","ThreeContainer_ThreeContainer","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","error","ReactDOM","src_App","process","concat","fetch","response","status","headers","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5b65cba7.chunk.js","sourcesContent":["/* Imported From: https://itnext.io/how-to-use-plain-three-js-in-your-react-apps-417a79d926e0 */\r\nimport * as THREE from 'three'\r\n\r\nconst tinyColor = require('tinycolor2');\r\nconst origRadius = 40;\r\n\r\nclass Compartment {\r\n\r\n    originalPosition = {\r\n        x: 0,\r\n        y: 0,\r\n        z: 0\r\n    }\r\n\r\n    constructor(index, previousState = null) {\r\n\r\n        let isState = !!previousState;\r\n\r\n        this.dataIndex = index; // Holds the index the compartment will retrieve data from\r\n        this.labelText = \"\";\r\n        this.baseColor = isState ? previousState.baseColor : \"#aa00ff\";\r\n        this.radius = origRadius;\r\n        this.shadowMargin = 7;\r\n        this.shadowMargin = isState ? previousState.shadowMargin : 7;\r\n        this.shadowPushBack = 1;\r\n        this.textPullForward = -5;\r\n\r\n        this.shadow = {};\r\n        this.shadow.geometry = new THREE.CircleGeometry(this.radius + this.shadowMargin, 32);\r\n        this.shadow.mesh = new THREE.Mesh(this.shadow.geometry);\r\n        this.shadow.mesh.material =\r\n            new THREE.MeshBasicMaterial({\r\n                color: \"#cccccc\"\r\n            });\r\n\r\n        this.object = {};\r\n        this.object.geometry = new THREE.CircleGeometry(this.radius, 32);\r\n        this.object.mesh = new THREE.Mesh(this.object.geometry);\r\n        this.object.mesh.material =\r\n            new THREE.MeshBasicMaterial({\r\n                color: this.baseColor\r\n            });\r\n\r\n        this.object.mesh.position.set(0, 0, 0);\r\n        this.shadow.mesh.position.set(0, 0, this.shadowPushBack);\r\n\r\n        this.position = this.object.mesh.position;\r\n        this.shadow.position = this.shadow.mesh.position;\r\n\r\n        this.object.scale = this.object.mesh.scale;\r\n        this.shadow.scale = this.shadow.mesh.scale;\r\n\r\n\r\n        if (isState) {\r\n            this.adjustScale(previousState.radius);\r\n            this.object.mesh.position.set(previousState.position.x, previousState.position.y, previousState.position.z);\r\n            this.shadow.mesh.position.set(previousState.shadow.position.x, previousState.shadow.position.y, previousState.shadow.position.z);\r\n        }\r\n\r\n        this.originalPosition = {\r\n            x: this.object.mesh.position.x,\r\n            y: this.object.mesh.position.y,\r\n            z: this.object.mesh.position.z\r\n        } \r\n\r\n        this.withinCircle = this.withinCircle.bind(this);\r\n        this.adjustScale = this.adjustScale.bind(this);\r\n        this.appendText = this.appendText.bind(this);\r\n        this.moveText = this.moveText.bind(this);\r\n        this.moveIndexText = this.moveIndexText.bind(this);\r\n        this.setPosition = this.setPosition.bind(this);\r\n        this.changeTextSize = this.changeTextSize.bind(this);\r\n        this.changeIndexTextSize = this.changeIndexTextSize.bind(this);\r\n        this.transformColor = this.transformColor.bind(this);\r\n        this.changeColor = this.changeColor.bind(this);\r\n        this.lightenColor = this.lightenColor.bind(this);\r\n        this.darkenColor = this.darkenColor.bind(this);\r\n        this.showIndex = this.showIndex.bind(this);\r\n        this.update = this.update.bind(this);\r\n    }\r\n\r\n    update() {\r\n\r\n    }\r\n\r\n    withinCircle(x, y) {\r\n        let pos = this.object.mesh.position;\r\n        let distance = Math.sqrt((x - pos.x) * (x - pos.x) + (y - pos.y) * (y - pos.y));\r\n        let within = !(distance > this.radius);\r\n        return within;\r\n    }\r\n\r\n    adjustScale(newRadius) {\r\n        this.radius = newRadius;\r\n        let newScale = this.radius / origRadius;\r\n        this.object.scale.set(newScale, newScale, newScale);\r\n        this.shadow.scale.set(newScale, newScale, newScale);\r\n    }\r\n\r\n    appendText(font, text, xpos, ypos) {\r\n        this.labelText = text;\r\n        let geometry = new THREE.TextGeometry(text, {\r\n            font: font,\r\n            size: 13,\r\n            height: 5,\r\n            curveSegments: 12,\r\n            bevelEnabled: false,\r\n            bevelThickness: 1,\r\n            bevelSize: 2,\r\n            bevelSegments: 5\r\n        });\r\n        let material = new THREE.MeshBasicMaterial({\r\n            color: 0x000000\r\n        });\r\n        this.textMesh = new THREE.Mesh(geometry, material);\r\n        this.moveText(xpos, ypos);\r\n        this.textMesh.rotation.set(0, 0, Math.PI);\r\n        this.changeTextSize(this.radius);\r\n    }\r\n\r\n    moveText(newX, newY) {\r\n        var box = new THREE.Box3().setFromObject(this.textMesh); // To center text horizontally\r\n        this.textMesh.position.set(newX + .5 * (box.max.x - box.min.x), newY, this.textPullForward);\r\n    }\r\n\r\n    moveIndexText(newX, newY) {\r\n        var box = new THREE.Box3().setFromObject(this.indexTextMesh); // To center text horizontally\r\n        this.indexTextMesh.position.set(newX + .5 * (box.max.x - box.min.x), newY, this.textPullForward);\r\n    }\r\n\r\n    setPosition(x, y, z) {\r\n        this.position.set(x, y, z);\r\n        this.shadow.position.set(x, y, this.shadowPushBack);\r\n    }\r\n\r\n    changeTextSize(newScale) {\r\n        let scale = newScale / origRadius;\r\n        this.textMesh.scale.set(scale, scale, scale + this.textPullForward);\r\n    }\r\n\r\n    changeIndexTextSize(newScale) {\r\n        let scale = newScale / origRadius;\r\n        this.indexTextMesh.scale.set(scale, scale, scale + this.textPullForward);\r\n    }\r\n\r\n    transformColor(colorObject) {\r\n        return tinyColor({\r\n            r: colorObject[0],\r\n            g: colorObject[1],\r\n            b: colorObject[2]\r\n        }).toHexString();\r\n    }\r\n\r\n    changeColor(colorObject) {\r\n        this.baseColor = this.transformColor(colorObject);\r\n        this.object.mesh.material.color.set(this.baseColor.toString());\r\n    }\r\n\r\n    lightenColor(percent) {\r\n        this.object.mesh.material.color.set(tinyColor(this.baseColor).lighten(percent).toString());\r\n    }\r\n\r\n    darkenColor(percent) {\r\n        this.object.mesh.material.color.set(tinyColor(this.baseColor).darken(percent).toString());\r\n    }\r\n\r\n    showIndex(font) {\r\n        let geometry = new THREE.TextGeometry(this.dataIndex.toString(), {\r\n            font: font,\r\n            size: 10,\r\n            height: 5,\r\n            curveSegments: 12,\r\n            bevelEnabled: false,\r\n            bevelThickness: 1,\r\n            bevelSize: 2,\r\n            bevelSegments: 5\r\n        });\r\n        let material = new THREE.MeshBasicMaterial({\r\n            color: 0x808080\r\n        });\r\n        this.indexTextMesh = new THREE.Mesh(geometry, material);\r\n        this.moveIndexText(this.position.x, this.position.y + (3 / 4) * (this.radius));\r\n        this.indexTextMesh.rotation.set(0, 0, Math.PI);\r\n        this.changeIndexTextSize(this.radius);\r\n    }\r\n}\r\n\r\nexport default Compartment;","import * as THREE from 'three'\r\n        \r\nconst barLength = 500;\r\n\r\nclass ProgressBar {\r\n\r\n    constructor(fontResource, yPos) {\r\n        this.fontResource = fontResource;\r\n        this.stepLength = 0;\r\n        this.yPos = yPos;\r\n\r\n        this.bar = {};\r\n        this.progress = {};\r\n        this.start = {};\r\n        this.stop = {};\r\n\r\n        this.bar.geometry = new THREE.BoxGeometry(barLength, 20, 1);\r\n        this.bar.mesh = new THREE.Mesh(this.bar.geometry);\r\n        this.bar.mesh.material = new THREE.MeshBasicMaterial({\r\n            color: \"#afafaf\"\r\n        });\r\n\r\n        this.progressLength = 0;\r\n        this.progress.geometry = new THREE.BoxGeometry(this.progressLength, 20, 1);\r\n        this.progress.mesh = new THREE.Mesh(this.progress.geometry);\r\n        this.progress.mesh.material = new THREE.MeshBasicMaterial({\r\n            color: \"#666666\"\r\n        });\r\n        this.bar.mesh.position.set(0, this.yPos, 0);\r\n        this.progress.mesh.position.set((barLength - this.progressLength) / 2, this.yPos, 0); //TODO: Make height to bottom of screen + padding\r\n\r\n        this.updateProgress = this.updateProgress.bind(this);\r\n        this.createText = this.createText.bind(this);\r\n        this.createTitle = this.createTitle.bind(this);\r\n        this.moveText = this.moveText.bind(this);\r\n        this.withinBar = this.withinBar.bind(this);\r\n        this.getStep = this.getStep.bind(this);\r\n        this.setSteps = this.setSteps.bind(this);\r\n        this.getBar = this.getBar.bind(this);\r\n    }\r\n\r\n    updateProgress(step, timeInfo, cX, cY) {\r\n        if (this.stepLength * step <= barLength) {\r\n            this.progressLength = this.stepLength * step;\r\n            this.progress.mesh.geometry = new THREE.BoxGeometry(this.progressLength, 20, 1);\r\n            // this.progress.mesh.position.set(((barLength - this.progressLength) / 2) - cX, this.yPos + cY, 0); //TODO: Make height to bottom of screen + padding\r\n            this.progress.mesh.position.set(((barLength - this.progressLength) / 2) + cX, this.yPos + cY, 0); //TODO: Make height to bottom of screen + padding\r\n            this.createText(timeInfo, cX, cY);\r\n        }\r\n    }\r\n\r\n    createText(text, cX, cY) {\r\n        var geometry = new THREE.TextGeometry(text, {\r\n            font: this.fontResource,\r\n            size: 10,\r\n            height: 5,\r\n            curveSegments: 12,\r\n            bevelEnabled: false,\r\n            bevelThickness: 1,\r\n            bevelSize: 2,\r\n            bevelSegments: 5\r\n        });\r\n        let material = new THREE.MeshBasicMaterial({\r\n            color: 0x000000\r\n        });\r\n        this.textMesh = new THREE.Mesh(geometry, material);\r\n        this.textMesh.position.set(250 - this.progressLength + cX, this.yPos + 25 + cY, 0);\r\n        this.textMesh.rotation.set(0, 0, Math.PI);\r\n    }\r\n\r\n    createTitle() {\r\n        var geometry = new THREE.TextGeometry(\"Progress Bar:\", {\r\n            font: this.fontResource,\r\n            size: 10,\r\n            height: 5,\r\n            curveSegments: 12,\r\n            bevelEnabled: false,\r\n            bevelThickness: 1,\r\n            bevelSize: 2,\r\n            bevelSegments: 5\r\n        });\r\n        let material = new THREE.MeshBasicMaterial({\r\n            color: 0x000000\r\n        });\r\n        this.titleTextMesh = new THREE.Mesh(geometry, material);\r\n        this.titleTextMesh.position.set(350, this.yPos + 7, 0);\r\n        this.titleTextMesh.rotation.set(0, 0, Math.PI);\r\n    }\r\n\r\n    moveText(newX, newY) {\r\n        var box = new THREE.Box3().setFromObject(this.textMesh); //To center text horizontally\r\n        this.textMesh.position.set(newX + .5 * (box.max.x - box.min.x), newY, 0);\r\n    }\r\n\r\n    withinBar(x, y) {\r\n        var withinHeight = (y < this.yPos + 10) && (y > this.yPos - 10);\r\n        var withinWidth = (x < 250) && (x > -250);\r\n        return withinHeight && withinWidth;\r\n    }\r\n\r\n    getStep(x) {\r\n        var clickedPos = 250 - x;\r\n        var step = Math.round(clickedPos / this.stepLength);\r\n        return step;\r\n    }\r\n\r\n    setSteps(numOfSteps) {\r\n        this.stepLength = barLength / numOfSteps;\r\n    }\r\n\r\n    getBar() {\r\n        return this.progress.mesh\r\n    }\r\n}\r\n\r\nexport default ProgressBar;","import * as THREE from 'three'\r\n        \r\nconst initialCompartmentRadius = 40;\r\nconst tinyColor = require('tinycolor2');\r\n\r\nclass FluxArrow {\r\n\r\n    constructor(arrowInfo, legacySaveIndex) {\r\n\r\n        this.arrowInfo = arrowInfo;\r\n\r\n        // Keep a defined value or fallback to legacy index\r\n        this.arrowInfo.dataIndex = (arrowInfo.dataIndex !== undefined) ? arrowInfo.dataIndex : legacySaveIndex;\r\n\r\n        this.arrowLength = 22 * (arrowInfo.dataPointRadius / initialCompartmentRadius);\r\n        this.arrowWidth = 15 * (arrowInfo.dataPointRadius / initialCompartmentRadius); //Keep relative proportions linked with compartments of radius 40 \r\n        this.textPullForward = -5;\r\n        this.baseColor = \"#222222\"\r\n        this.object = {};\r\n        \r\n        this.dir = this.calculateDir();\r\n        this.dir.normalize();\r\n        this.length = this.calculateLength();\r\n        this.position = this.calculatePos();\r\n\r\n        this.calculateLength = this.calculateLength.bind(this);\r\n        this.calculateDir = this.calculateDir.bind(this);\r\n        this.calculatePos = this.calculatePos.bind(this);\r\n        this.lightenColor = this.lightenColor.bind(this);\r\n        this.darkenColor = this.darkenColor.bind(this);\r\n        this.updatePos = this.updatePos.bind(this);\r\n        this.setLength = this.setLength.bind(this);\r\n        this.delete = this.delete.bind(this);\r\n        this.adjustScale = this.adjustScale.bind(this);\r\n        this.showIndex = this.showIndex.bind(this);\r\n        this.changeIndexTextSize = this.changeIndexTextSize.bind(this);\r\n        this.moveIndexText = this.moveIndexText.bind(this);\r\n\r\n        this.object = new THREE.ArrowHelper(this.dir, this.position, this.length, this.baseColor, this.arrowLength, this.arrowWidth);\r\n    }\r\n\r\n    calculateLength() {\r\n        //Length from center to center\r\n        let distance = Math.sqrt((this.arrowInfo.point2.x - this.arrowInfo.point1.x) * (this.arrowInfo.point2.x - this.arrowInfo.point1.x) +\r\n            (this.arrowInfo.point2.y - this.arrowInfo.point1.y) * (this.arrowInfo.point2.y - this.arrowInfo.point1.y));\r\n        //Moves each end to edge of circle plus 1/2 of radius more\r\n        distance = distance - 3 * (this.arrowInfo.dataPointRadius)\r\n        return distance;\r\n    }\r\n\r\n    calculateDir() {\r\n        return (new THREE.Vector3(this.arrowInfo.point2.x - this.arrowInfo.point1.x, this.arrowInfo.point2.y - this.arrowInfo.point1.y, 0));\r\n    }\r\n\r\n    calculatePos() {\r\n        let adjust = new THREE.Vector3(1.5 * this.arrowInfo.dataPointRadius * this.dir.x, 1.5 * this.arrowInfo.dataPointRadius * this.dir.y, 0) //1.5 * 40 = To edge + 50% of circle radius\r\n        let shiftAmount = this.arrowInfo.dataPointRadius / 3.5;\r\n        if (this.arrowInfo.shift) {\r\n            let diff = (this.dir.x - this.dir.y);\r\n            if (diff >= 0) {\r\n                if (this.dir.y <= -.5) {\r\n                    adjust.x += shiftAmount;\r\n                } else {\r\n                    adjust.y += shiftAmount;\r\n                }\r\n            } else {\r\n                if (this.dir.y >= .5) {\r\n                    adjust.x += shiftAmount;\r\n                } else {\r\n                    adjust.y += shiftAmount;\r\n                }\r\n            }\r\n        }\r\n        return new THREE.Vector3(this.arrowInfo.point1.x + adjust.x, this.arrowInfo.point1.y + adjust.y, 0)\r\n    }\r\n\r\n    lightenColor(percent) {\r\n        let newColor = tinyColor(this.baseColor).lighten(percent).toString();\r\n        this.object = new THREE.ArrowHelper(this.dir, this.position, this.length, newColor, this.arrowLength, this.arrowWidth);\r\n    }\r\n\r\n    darkenColor(percent) {\r\n        let newColor = tinyColor(this.baseColor).darken(percent).toString();\r\n        this.object = new THREE.ArrowHelper(this.dir, this.position, this.length, newColor, this.arrowLength, this.arrowWidth);\r\n    }\r\n\r\n    updatePos(to, from) {\r\n        this.arrowInfo.point1 = to;\r\n        this.arrowInfo.point2 = from;\r\n\r\n        this.dir = this.calculateDir();\r\n        this.dir.normalize();\r\n        this.length = this.calculateLength();\r\n        this.position = this.calculatePos();\r\n\r\n        this.object.setLength(this.length, this.arrowLength, this.arrowWidth);\r\n        this.object.setDirection(this.dir);\r\n        this.object.position.set(this.position.x, this.position.y, 0);\r\n    }\r\n\r\n    setLength(len) {\r\n        this.object.setLength(len);\r\n    }\r\n\r\n    delete() {\r\n        this.scene.remove(this.object);\r\n    }\r\n\r\n    adjustScale(newRadius) {\r\n        this.arrowInfo.dataPointRadius = newRadius\r\n        this.arrowLength = 22 * (this.arrowInfo.dataPointRadius / initialCompartmentRadius);\r\n        this.arrowWidth = 15 * (this.arrowInfo.dataPointRadius / initialCompartmentRadius);\r\n        this.updatePos(this.arrowInfo.point1, this.arrowInfo.point2);\r\n    }\r\n\r\n    showIndex(font) {\r\n        let geometry = new THREE.TextGeometry(this.arrowInfo.dataIndex.toString(), {\r\n            font: font,\r\n            size: 10,\r\n            height: 5,\r\n            curveSegments: 12,\r\n            bevelEnabled: false,\r\n            bevelThickness: 1,\r\n            bevelSize: 2,\r\n            bevelSegments: 5\r\n        });\r\n        let material = new THREE.MeshBasicMaterial({\r\n            color: 0x808080\r\n        });\r\n        this.indexTextMesh = new THREE.Mesh(geometry, material);\r\n        this.moveIndexText(this.position.x, this.position.y);\r\n        this.indexTextMesh.rotation.set(0, 0, Math.PI);\r\n    }\r\n\r\n    changeIndexTextSize(newScale) {\r\n        let scale = newScale / this.origLength;\r\n        scale = scale === 0 ? (scale = 0.00010) : scale;\r\n        this.indexTextMesh.scale.set(scale, scale, scale + this.textPullForward);\r\n    }\r\n\r\n    moveIndexText(newX, newY) {\r\n        let box = new THREE.Box3().setFromObject(this.indexTextMesh); // To center text horizontally\r\n        this.indexTextMesh.position.set(newX + .5 * (box.max.x - box.min.x), newY, this.textPullForward);\r\n    }\r\n}\r\n\r\n\r\nexport default FluxArrow","/* Imported From: https://itnext.io/how-to-use-plain-three-js-in-your-react-apps-417a79d926e0 */\r\nimport * as THREE from 'three';\r\nimport Compartment from './Compartment';\r\nimport ProgressBar from './ProgressBar';\r\nimport FluxArrow from './FluxArrow';\r\n\r\nclass SceneManager {\r\n\r\n    constructor(canvas, dataContext) {\r\n        const screenDimensions = {\r\n            width: canvas.width,\r\n            height: canvas.height\r\n        };\r\n        this.dataContext = dataContext;\r\n        this.screenDimensions = screenDimensions;\r\n        this.dataContext.origin = new THREE.Vector3(0, 0, 0);\r\n        this.loadFont(this.fontLoadingComplete.bind(this));\r\n        this.canvas = canvas;\r\n        this.scene = this.buildScene();\r\n        this.renderer = this.buildRender(screenDimensions, canvas);\r\n        this.camera = this.buildCamera(screenDimensions, this.dataContext.origin, 2);\r\n        this.registerCallbacks(this.dataContext, this.scene, this.reloadScene);\r\n        this.update = this.update.bind(this);\r\n        this.reloadScene = this.reloadScene.bind(this);\r\n        this.reloadCompartments = this.reloadCompartments.bind(this);\r\n        this.reloadArrows = this.reloadArrows.bind(this);\r\n        this.buildProgressBar = this.buildProgressBar.bind(this);\r\n        this.changeAllRadius = this.changeAllRadius.bind(this);\r\n        this.changeColor = this.changeColor.bind(this);\r\n        this.updateArrows = this.updateArrows.bind(this);\r\n        this.addFluxArrow = this.addFluxArrow.bind(this);\r\n        this.removeFromScene = this.removeFromScene.bind(this);\r\n        this.addCompartment = this.addCompartment.bind(this);\r\n        this.addArrow = this.addArrow.bind(this);\r\n        this.renameCompartment = this.renameCompartment.bind(this);\r\n        this.updateCompartmentIndexText = this.updateCompartmentIndexText.bind(this);\r\n        this.generateCompartments = this.generateCompartments.bind(this);\r\n        this.showCompartmentIndexText = this.showCompartmentIndexText.bind(this);\r\n        this.hideCompartmentIndexText = this.hideCompartmentIndexText.bind(this);\r\n        this.showFluxIndexText = this.showFluxIndexText.bind(this);\r\n        this.hideFluxIndexText = this.hideFluxIndexText.bind(this);\r\n        this.updateProgressBar = this.updateProgressBar.bind(this);\r\n        this.colorPoints = this.colorPoints.bind(this);\r\n        this.moveCamera = this.moveCamera.bind(this);\r\n        this.canvasToThreePos = this.canvasToThreePos.bind(this);\r\n        this.moveProgressBar = this.moveProgressBar.bind(this);\r\n    }\r\n\r\n    updateProgressBar(step, text) {\r\n        if (this.dataContext.progressBar.textMesh) {\r\n            this.scene.remove(this.dataContext.progressBar.textMesh);\r\n        }\r\n        this.dataContext.progressBar.updateProgress(step, text, this.camera.position.x, this.camera.position.y);\r\n        this.scene.add(this.dataContext.progressBar.textMesh);\r\n    }\r\n\r\n    showCompartmentIndexText(compartment) {\r\n        compartment.showIndex(this.dataContext.fontResource);\r\n        this.scene.add(compartment.indexTextMesh);\r\n    }\r\n\r\n    hideCompartmentIndexText(compartment) {\r\n        this.scene.remove(compartment.indexTextMesh);\r\n    }\r\n\r\n    showFluxIndexText(arrow) {\r\n        arrow.showIndex(this.dataContext.fontResource);\r\n        this.scene.add(arrow.indexTextMesh);\r\n    }\r\n\r\n    hideFluxIndexText(arrow) {\r\n        this.scene.remove(arrow.indexTextMesh);\r\n    }\r\n\r\n    renameCompartment(compartment, newName) {\r\n        this.scene.remove(compartment.textMesh);\r\n        compartment.appendText(this.dataContext.fontResource, newName, compartment.position.x, compartment.position.y);\r\n        this.scene.add(compartment.textMesh);\r\n    }\r\n\r\n    updateCompartmentIndexText(compartment, showIndex = false) {\r\n        this.scene.remove(compartment.indexTextMesh);\r\n        if (showIndex) {\r\n            compartment.showIndex(this.dataContext.fontResource);\r\n            this.scene.add(compartment.indexTextMesh);\r\n        }\r\n    }\r\n\r\n    loadFont(fontLoadingComplete) {\r\n        (new THREE.FontLoader()).load(\r\n            'https://threejs.org//examples/fonts/helvetiker_regular.typeface.json',\r\n            fontLoadingComplete\r\n        );\r\n    }\r\n\r\n    fontLoadingComplete(font) {\r\n        this.dataContext.fontResource = font;\r\n        this.reloadScene();\r\n    }\r\n\r\n    buildScene() {\r\n        const scene = new THREE.Scene();\r\n        scene.background = new THREE.Color(\"#FFF\");\r\n        return scene;\r\n    }\r\n\r\n    buildRender(screenDimensions, canvas) {\r\n        const {\r\n            width,\r\n            height\r\n        } = screenDimensions;\r\n        const renderer = new THREE.WebGLRenderer({\r\n            canvas: canvas,\r\n            antialias: true,\r\n            alpha: true\r\n        });\r\n        const DPR = window.devicePixelRatio ? window.devicePixelRatio : 1;\r\n        renderer.setPixelRatio(DPR);\r\n        renderer.setSize(width, height);\r\n\r\n        renderer.gammaInput = true;\r\n        renderer.gammaOutput = true;\r\n\r\n        return renderer;\r\n    }\r\n\r\n    buildCamera({\r\n        width,\r\n        height\r\n    }, origin, zoom) {\r\n        let camera = new THREE.OrthographicCamera(width / (-1*zoom), width / zoom, height / (-1*zoom), height / zoom, 1, 1000);\r\n        camera.position.set(0, 0, -10);\r\n        camera.lookAt(origin);\r\n        return (camera);\r\n    }\r\n\r\n    moveCamera(x, y) {\r\n        this.camera.position.x += x;\r\n        this.camera.position.y += y;\r\n        this.moveProgressBar(x, y, 0);\r\n    }\r\n\r\n    zoomCamera = zoom => {\r\n        const newZoom = (zoom * .025) + this.camera.zoom;\r\n        if(newZoom > 0){\r\n            this.camera.zoom = newZoom;\r\n            this.camera.updateProjectionMatrix();\r\n        }\r\n    }\r\n\r\n    moveProgressBar(x, y, z) {\r\n        let c = [\r\n            this.dataContext.progressBar.textMesh,\r\n            this.dataContext.progressBar.titleTextMesh,\r\n            this.dataContext.progressBar.bar.mesh,\r\n            this.dataContext.progressBar.progress.mesh\r\n        ];\r\n\r\n        for (let index = 0; index < c.length; index++) {\r\n            c[index].position.x += x;\r\n            c[index].position.y += y;\r\n            c[index].position.z += z;\r\n        }\r\n    }\r\n\r\n    registerCallbacks(dataContext, scene, reloadScene) {\r\n        dataContext.onFluxLoad = () => { };\r\n        dataContext.onLoad = () => {\r\n            if (dataContext.animationData != null) {\r\n                if (dataContext.progressBar.textMesh) {\r\n                    scene.remove(dataContext.progressBar.textMesh);\r\n                }\r\n                dataContext.progressBar.createText(dataContext.animationData[0][0]);\r\n                dataContext.progressBar.setSteps(dataContext.animationData.length);\r\n                scene.add(dataContext.progressBar.textMesh);\r\n            }\r\n        };\r\n        dataContext.registerCallback(reloadScene.bind(this));\r\n    }\r\n\r\n    reloadScene() {\r\n        this.clearScene(this.scene);\r\n        this.reloadCompartments();\r\n        this.reloadArrows();\r\n        this.buildProgressBar();\r\n    }\r\n\r\n    clearScene(scene) {\r\n        let remove = [];\r\n        scene.traverse((child) => {\r\n            if (child instanceof THREE.Mesh || child instanceof THREE.ArrowHelper) {\r\n                remove.push(child);\r\n            }\r\n        });\r\n        for (let i = 0; i < remove.length; i++) {\r\n            scene.remove(remove[i]);\r\n        }\r\n    }\r\n\r\n    reloadArrows() {\r\n        let hydratedArrows = [];\r\n        let legacyArrowIndex = 0;\r\n        this.dataContext.arrows.forEach(oldArrow => {\r\n            hydratedArrows.push(this.restoreArrow(oldArrow, legacyArrowIndex++, this.scene));\r\n        });\r\n        this.dataContext.arrows = hydratedArrows;\r\n    }\r\n\r\n    canvasToThreePos(mousePos, asIs = false) {\r\n        let rect = this.canvas.getBoundingClientRect();\r\n        let newX, newY;\r\n        newX = (rect.width / 2) - mousePos.x + this.camera.position.x;\r\n        newY = mousePos.y - (rect.height / 2) + this.camera.position.y;\r\n        if(asIs){\r\n            newX -= this.camera.position.x; \r\n            newY -= this.camera.position.y; \r\n        }\r\n        return {\r\n            x: newX,\r\n            y: newY\r\n        };\r\n    }\r\n\r\n\r\n    reloadCompartments() {\r\n        let hydratedCompartments = [];\r\n        let c = 0;\r\n        this.dataContext.compartments.forEach(oldPoint => {\r\n            if (!oldPoint.dataIndex) { // For converting legacy saves on the fly\r\n                oldPoint.dataIndex = c++;\r\n            }\r\n            let point = this.restoreCompartment(oldPoint, this.scene, this.dataContext);\r\n            hydratedCompartments.push(point);\r\n            point.moveText(point.object.mesh.position.x, point.object.mesh.position.y);\r\n        });\r\n        this.dataContext.compartments = hydratedCompartments;\r\n    }\r\n\r\n    buildProgressBar() {\r\n        let rect = this.canvas.getBoundingClientRect();\r\n        this.dataContext.progressBar = new ProgressBar(this.dataContext.fontResource, (-rect.height / 2.0) + 25);\r\n        this.scene.add(this.dataContext.progressBar.bar.mesh);\r\n        this.scene.add(this.dataContext.progressBar.progress.mesh);\r\n        if (this.dataContext.progressBar.textMesh !== null) {\r\n            this.scene.remove(this.dataContext.progressBar.textMesh)\r\n        }\r\n        this.dataContext.progressBar.createText(\"0\");\r\n        this.scene.add(this.dataContext.progressBar.textMesh);\r\n        this.dataContext.progressBar.createTitle();\r\n        this.scene.add(this.dataContext.progressBar.titleTextMesh);\r\n    }\r\n\r\n    restoreArrow(savedData, legacyIndex, scene) {\r\n        let arrow = new FluxArrow(savedData.arrowInfo, legacyIndex);\r\n        scene.add(arrow.object);\r\n        return arrow;\r\n    }\r\n\r\n    restoreCompartment(savedData, scene, dataContext) {\r\n        let compartment = new Compartment(savedData.dataIndex, savedData);\r\n        scene.add(compartment.object.mesh);\r\n        scene.add(compartment.shadow.mesh);\r\n        let labelText = savedData.textMesh ? savedData.textMesh.geometries[0].text : \" \";\r\n        if (!labelText)\r\n            labelText = \" \";\r\n        compartment.appendText(dataContext.fontResource, labelText, compartment.position.x, compartment.position.y);\r\n        scene.add(compartment.textMesh);\r\n        return compartment;\r\n    }\r\n\r\n    addCompartment(labelText, showIndex = false) {\r\n        let compartments = this.dataContext.compartments;\r\n        let compartment = new Compartment(compartments.length + 1);\r\n        this.scene.add(compartment.object.mesh);\r\n        this.scene.add(compartment.shadow.mesh);\r\n        if (showIndex) {\r\n            compartment.showIndex(this.dataContext.fontResource);\r\n            this.scene.add(compartment.indexTextMesh);\r\n        }\r\n        compartment.changeColor(this.dataContext.baseColor);\r\n        compartment.adjustScale(this.dataContext.radius);\r\n        compartment.appendText(this.dataContext.fontResource, labelText, compartment.position.x, compartment.position.y);\r\n        this.scene.add(compartment.textMesh);\r\n        compartments.push(compartment);\r\n        compartment.setPosition(0, 0, 0);\r\n        compartment.moveText(0, 0);\r\n    }\r\n\r\n    addArrow() {\r\n        let arrows = this.dataContext.arrows;\r\n        let data = this.dataContext;\r\n        let shift = false;\r\n        //Check if new arrow is between an already arrowed combination\r\n        for (var i = 0; i < arrows.length; i++) {\r\n            if (arrows[i].arrowInfo.pointIndex1 === data.arrowPoints[0] && arrows[i].arrowInfo.pointIndex2 === data.arrowPoints[1]) {\r\n                //Arrow already exists in that direction-- do nothing\r\n                return\r\n            }\r\n            if (arrows[i].arrowInfo.pointIndex1 === data.arrowPoints[1] && arrows[i].arrowInfo.pointIndex2 === data.arrowPoints[0]) {\r\n                //Arrow exists in opposite direction-- shift new arrow\r\n                shift = true;\r\n            }\r\n        }\r\n        this.addFluxArrow({\r\n            shift: shift,\r\n            len: 200,\r\n            pointIndex1: data.arrowPoints[0],\r\n            pointIndex2: data.arrowPoints[1],\r\n            point1: data.compartments[data.arrowPoints[0]].position,\r\n            point2: data.compartments[data.arrowPoints[1]].position,\r\n            dataPointRadius: data.radius,\r\n            dataIndex: data.arrows.length + 1,\r\n        }\r\n        );\r\n    }\r\n\r\n    removeFromScene(compartment) {\r\n        this.scene.remove(compartment.object.mesh);\r\n        this.scene.remove(compartment.shadow.mesh);\r\n        this.scene.remove(compartment.textMesh);\r\n    }\r\n\r\n    addFluxArrow(arrowInfo) {\r\n        let arrows = this.dataContext.arrows;\r\n\r\n        this.dataContext.arrowMode = 0;\r\n\r\n        let arrow = new FluxArrow(arrowInfo);\r\n        this.scene.add(arrow.object);\r\n        arrows.push(arrow);\r\n    }\r\n\r\n    updateArrows(deletedDataPoint) {\r\n        let arrows = this.dataContext.arrows;\r\n        for (var i = 0; i < arrows.length; i++) {\r\n            let index1 = arrows[i].arrowInfo.pointIndex1;\r\n            let index2 = arrows[i].arrowInfo.pointIndex2;\r\n            if ((index1 === deletedDataPoint) || (index2 === deletedDataPoint)) {\r\n                this.scene.remove(arrows[i].object)\r\n                arrows.splice(i, 1);\r\n                i--; //To go back and check arrow that just moved into i'th position\r\n            } else {\r\n                if ((index1 > deletedDataPoint) && (deletedDataPoint !== -1)) {\r\n                    index1--;\r\n                    arrows[i].arrowInfo.pointIndex1--;\r\n                }\r\n                if ((index2 > deletedDataPoint) && (deletedDataPoint !== -1)) {\r\n                    index2--;\r\n                    arrows[i].arrowInfo.pointIndex2--;\r\n                }\r\n                arrows[i].updatePos(this.dataContext.compartments[index1].position, this.dataContext.compartments[index2].position);\r\n                if (this.dataContext.showIndices()) {\r\n                    arrows[i].moveIndexText(arrows[i].position.x, arrows[i].position.y);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    changeColor(newColor) {\r\n        this.dataContext.color = newColor;\r\n        for (let i = 0; i < this.dataContext.compartments.length; i++) {\r\n            this.dataContext.compartments[i].changeColor(newColor);\r\n        }\r\n    }\r\n\r\n    colorPoints() {\r\n        let changePercent, diff;\r\n        let data = this.dataContext;\r\n\r\n        for (let i = 0; i < data.compartments.length; i++) {\r\n            if (data.animationData[data.step][data.compartments[i].dataIndex] > data.halfQuantity) { //i+1 because column 0 holds time info\r\n                //Darken\r\n                diff = data.animationData[data.step][data.compartments[i].dataIndex] - data.halfQuantity;\r\n                changePercent = diff / data.halfQuantity;\r\n                data.compartments[i].darkenColor(changePercent * 50); //Multiply by 50 - percent available to darken by\r\n            } else {\r\n                //Lighten\r\n                diff = data.halfQuantity - data.animationData[data.step][data.compartments[i].dataIndex];\r\n                changePercent = diff / data.halfQuantity;\r\n                data.compartments[i].lightenColor(changePercent * 50); //Multiply by 50 - percent available to lighten by\r\n            }\r\n        }\r\n        if (data.fluxData != null) {\r\n            for (let i = 0; i < data.arrows.length - 1; i++) {\r\n                if (data.fluxData[data.step][data.arrows[i].arrowInfo.dataIndex] > data.halfFlux) { //i+1 because column 0 holds time info\r\n                    //Darken\r\n                    diff = data.fluxData[data.step][data.arrows[i].arrowInfo.dataIndex] - data.halfFlux;\r\n                    changePercent = diff / data.halfFlux;\r\n                    this.scene.remove(data.arrows[i].object);\r\n                    data.arrows[i].darkenColor(changePercent * 50); //Multiply by 50 - percent available to darken by\r\n                    this.scene.add(data.arrows[i].object) //Add newly colored arrow\r\n                } else {\r\n                    //Lighten\r\n                    diff = data.halfFlux - data.fluxData[data.step][data.arrows[i].arrowInfo.dataIndex];\r\n                    changePercent = diff / data.halfFlux;\r\n                    this.scene.remove(data.arrows[i].object);\r\n                    data.arrows[i].lightenColor(changePercent * 50); //Multiply by 50 - percent available to lighten by\r\n                    this.scene.add(data.arrows[i].object) //Add newly colored arrow\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    generateCompartments(showIndex) {\r\n        let data = this.dataContext;\r\n        if (data.animationData == null) {\r\n            alert(\"Compartment data must be uploaded first\");\r\n            return;\r\n        } else if (data.compartments.length > 0) {\r\n            alert(\"Compartments already exist\");\r\n            return;\r\n        }\r\n        let rect = this.canvas.getBoundingClientRect();\r\n        let freeSpace = rect.width - ((data.animationData[0].length - 1) * (data.radius * 2)) - 2 * data.radius; // - 2*radius allocates for a radius buffer space on each end\r\n        let spaceBetween = freeSpace / (data.animationData[0].length - 2);\r\n        for (let eColumn = 1; eColumn < data.animationData[0].length; eColumn++) {\r\n            let compartmentIndex = eColumn - 1;\r\n            let xPos = -((rect.width / 2) - data.radius) + (compartmentIndex * data.radius * 2) + (compartmentIndex * spaceBetween) + data.radius; // + radius gives a radius buffer space on each end\r\n            let label = !!data.labels[eColumn] ? data.labels[eColumn] : (eColumn).toString();\r\n            this.addCompartment(label, showIndex);\r\n            //Move to appropriate location\r\n            data.compartments[compartmentIndex].setPosition(-xPos, -1, 0);\r\n            data.compartments[compartmentIndex].moveText(-xPos, 0);\r\n            if (showIndex) {\r\n                data.compartments[compartmentIndex].moveIndexText(-xPos, (3 / 4) * (data.compartments[compartmentIndex].radius));\r\n            }\r\n        }\r\n    }\r\n\r\n    changeAllRadius() {\r\n        let point;\r\n        for (let i = 0; i < this.dataContext.compartments.length; i++) {\r\n            point = this.dataContext.compartments[i];\r\n            point.adjustScale(this.dataContext.radius);\r\n            point.changeTextSize(this.dataContext.radius)\r\n            point.moveText(point.object.mesh.position.x, point.object.mesh.position.y);\r\n        }\r\n        for (let i = 0; i < this.dataContext.arrows.length; i++) {\r\n            this.dataContext.arrows[i].adjustScale(this.dataContext.radius);\r\n        }\r\n    }\r\n\r\n    update() {\r\n        this.renderer.render(this.scene, this.camera);\r\n    }\r\n\r\n}\r\n\r\nexport default SceneManager;","import * as dat from 'dat.gui';\r\n\r\nclass Interface {\r\n\r\n    constructor(controller) {\r\n        this.gui = new dat.GUI({\r\n            autoPlace: false\r\n        });\r\n        this.createHTMLElement(this.gui);\r\n        this.createMenu.bind(this)(this.gui, controller);\r\n        this.updateDisplay = this.gui.updateDisplay;\r\n    }\r\n\r\n    createHTMLElement(gui) {\r\n        document.getElementById('datGuiAnchor').appendChild(gui.domElement);\r\n        gui.domElement.id = 'datGuiAnchor';\r\n    }\r\n\r\n    createMenu(gui, controller) {\r\n        gui.add(controller.controls, 'seekHelp').name(\"Help\");\r\n        this.buildAnimationFolder(gui.addFolder(\"Animation\"), controller);\r\n        this.buildEditingFolder(gui.addFolder(\"Model Editing\"), controller);\r\n        this.buildInterpretationFolder(gui.addFolder(\"Interpretation\"), controller);\r\n    }\r\n\r\n    buildAnimationFolder(folder, controller) {\r\n        folder.add(controller.controls, 'singleStep').name(\"Step - -- -- -| \\u21E5\");\r\n        folder.add(controller.controls, 'startStepping').name(\"Start - -- -- -| \\u25B6\");\r\n        folder.add(controller.controls, 'pauseAnimation').name(\"Pause - -- -| \\u23F8\");\r\n        folder.add(controller.controls, 'resetAnimation').name(\"Reset - --- -| \\u21BB\");\r\n        folder.add(controller.controls, 'stepDelay').name(\"Delay (in ms)\")\r\n            .min(0)\r\n            .max(500)\r\n            .step(10)\r\n            .onChange(controller.stepDelayCallback);\r\n        folder.add(controller.controls, 'skipSteps').name(\"Step Size\")\r\n            .onChange(controller.skipStepsCallback);\r\n        return folder;\r\n    }\r\n\r\n    buildEditingFolder(editFolder, controller) {\r\n        editFolder.add(controller.controls, 'generateCompartments').name(\"Generate Comps.\");\r\n        editFolder.add(controller.controls, 'generateFluxArrows').name(\"Generate Flux.\");\r\n        editFolder.add(controller.controls, 'editMode').name(\"Edit Mode\")\r\n            .onChange(controller.editModeCallback);\r\n        editFolder.add(controller.controls, 'labelMode').name(\"Import Labels\")\r\n            .onChange(controller.labelModeCallback);\r\n        editFolder.add(controller.controls, 'showIndices').name(\"Show Indices\")\r\n            .onChange(controller.showIndicesCallback);\r\n        editFolder.add(controller.controls, 'compIndex').name(\"Data Index\")\r\n            .listen()\r\n            .onFinishChange(controller.compIndexCallback);\r\n        editFolder.add(controller.controls, 'label').name(\"Comp. Label\")\r\n            .listen()\r\n            .onFinishChange(controller.labelCallback);\r\n        editFolder.add(controller.controls, 'addPoint').name(\"Add Compartment\");\r\n        editFolder.add(controller.controls, 'addArrow').name(\"Add Arrow\");\r\n        editFolder.add(controller.controls, 'deletePoint').name(\"Delete Compartment\");\r\n        editFolder.add(controller.controls, 'size').name(\"Size\")\r\n            .min(10)\r\n            .max(100)\r\n            .step(1)\r\n            .onChange(controller.sizeCallback);\r\n        return editFolder;\r\n    }\r\n\r\n    buildInterpretationFolder(folder, controller) {\r\n        folder.add(controller.controls, 'valueMax').name(\"Comp. Maximum\")\r\n            .onChange(controller.valueMaxCallback);\r\n        folder.add(controller.controls, 'fluxMax').name(\"Flux Maximum\")\r\n            .onChange(controller.fluxMaxCallback);\r\n        folder.addColor(controller.controls, 'color').name(\"50% Max Color\")\r\n            .onChange(controller.colorCallback);\r\n        return folder;\r\n    }\r\n}\r\n\r\nexport default Interface;","import ActionUtilities from '../utilities/ActionUtilities';\r\n\r\nconst actionUtil = new ActionUtilities();\r\n\r\nclass Controller {\r\n\r\n    constructor(dataContext, sceneManager) {\r\n        this.dataContext = dataContext;\r\n        this.sceneManager = sceneManager;\r\n        this.controls = this.createControls.bind(this)(dataContext);\r\n        this.callbacks = this.createCallbacks(this);\r\n        this.dataContext.showIndices = () => {\r\n            return this.controls.showIndices;\r\n        };\r\n        this.dataContext.updateDisplay = (cIndex, label) => {\r\n            this.controls.compIndex = cIndex; \r\n            this.controls.label = label; \r\n        };\r\n    }\r\n\r\n    createControls(data) {\r\n        this.bindControllerFunctions(this);\r\n        return {\r\n            size: data.radius,\r\n            valueMax: data.valueMax,\r\n            fluxMax: data.fluxMax,\r\n            stepDelay: data.stepDelay,\r\n            color: data.color,\r\n            skipSteps: data.skipSteps,\r\n            generateCompartments: this.generateCompartments.bind(this),\r\n            generateFluxArrows: this.generateFluxArrows.bind(this),\r\n            seekHelp: this.seekHelp.bind(this),\r\n            singleStep: this.singleStep.bind(this),\r\n            startStepping: this.startStepping.bind(this),\r\n            pauseAnimation: this.pauseAnimation.bind(this),\r\n            resetAnimation: this.reset.bind(this),\r\n            addPoint: this.addPoint.bind(this),\r\n            addArrow: this.addArrow.bind(this),\r\n            deletePoint: this.deletePoint.bind(this),\r\n            showIndices: false,\r\n            compIndex: \"\",\r\n            label: \"\",\r\n            editMode: false,\r\n            labelMode: false\r\n        }\r\n    }\r\n\r\n    bindControllerFunctions(controller) {\r\n        controller.singleStep = controller.singleStep.bind(controller);\r\n        controller.generateCompartments = controller.generateCompartments.bind(controller);\r\n        controller.generateFluxArrows = controller.generateFluxArrows.bind(controller);\r\n        controller.startStepping = controller.startStepping.bind(controller);\r\n        controller.pauseAnimation = controller.pauseAnimation.bind(controller);\r\n        controller.resetAnimation = controller.reset.bind(controller);\r\n        controller.addPoint = controller.addPoint.bind(controller);\r\n        controller.addCompartment = controller.addCompartment.bind(controller);\r\n        controller.addArrow = controller.addArrow.bind(controller);\r\n        controller.deletePoint = controller.deletePoint.bind(controller);\r\n\r\n        controller.isDataLoaded = controller.isDataLoaded.bind(controller);\r\n        controller.applyStep = controller.applyStep.bind(controller);\r\n        controller.stepForward = controller.stepForward.bind(controller);\r\n        controller.deleteDataPoint = controller.deleteDataPoint.bind(controller);\r\n    }\r\n\r\n    createCallbacks(Controller) {\r\n        Controller.stepDelayCallback = this.stepDelayCallback.bind(this);\r\n        Controller.editModeCallback = this.editModeCallback.bind(this);\r\n        Controller.skipStepsCallback = this.skipStepsCallback.bind(this);\r\n        Controller.labelModeCallback = this.labelModeCallback.bind(this);\r\n        Controller.showIndicesCallback = this.showIndicesCallback.bind(this);\r\n        Controller.compIndexCallback = this.compIndexCallback.bind(this);\r\n        Controller.labelCallback = this.labelCallback.bind(this);\r\n        Controller.sizeCallback = this.sizeCallback.bind(this);\r\n        Controller.valueMaxCallback = this.valueMaxCallback.bind(this);\r\n        Controller.fluxMaxCallback = this.fluxMaxCallback.bind(this);\r\n        Controller.colorCallback = this.colorCallback.bind(this);\r\n    }\r\n\r\n    colorCallback(newValue) {\r\n        this.dataContext.baseColor = newValue;\r\n        this.sceneManager.changeColor(newValue);\r\n    }\r\n\r\n    fluxMaxCallback(newValue) {\r\n        this.dataContext.fluxMax = newValue;\r\n        this.dataContext.halfFlux = this.dataContext.fluxMax / 2.0;\r\n    }\r\n\r\n    valueMaxCallback(newValue) {\r\n        this.dataContext.valueMax = newValue;\r\n        this.dataContext.halfQuantity = this.dataContext.valueMax / 2.0;\r\n    }\r\n\r\n    sizeCallback(newValue) {\r\n        this.dataContext.radius = newValue;\r\n        this.sceneManager.changeAllRadius();\r\n    }\r\n\r\n    labelCallback(newValue) {\r\n        this.sceneManager.renameCompartment(this.dataContext.compartments[this.dataContext.userSelectedDataPoint], newValue);\r\n    }\r\n\r\n    compIndexCallback(newValue) {\r\n        if (this.dataContext.userSelectedDataPoint !== -1) {\r\n            if ((newValue > this.dataContext.compartments.length) || (newValue < 1)) {\r\n                alert(\"Invalid Index\");\r\n            } else {\r\n                let compartment = this.dataContext.compartments[this.dataContext.userSelectedDataPoint];\r\n                compartment.dataIndex = newValue;\r\n                this.sceneManager.updateCompartmentIndexText(compartment, this.controls.showIndices);\r\n            }\r\n        }\r\n    }\r\n\r\n    showIndicesCallback(show) {\r\n        this.revealIndices(show);\r\n        this.revealIndices = this.revealIndices.bind(this);\r\n    }\r\n\r\n    labelModeCallback(newValue) {\r\n        this.dataContext.labelMode = newValue;\r\n    }\r\n\r\n    editModeCallback(newValue) {\r\n        this.dataContext.editMode = newValue;\r\n    }\r\n\r\n    skipStepsCallback(newValue) {\r\n        this.dataContext.skipSteps = newValue;\r\n    }\r\n\r\n    stepDelayCallback(newValue) {\r\n        this.dataContext.stepDelay = newValue;\r\n    }\r\n\r\n    isDataLoaded() {\r\n        if (this.dataContext && !this.dataContext.dataLoaded()) {\r\n            alert(\"Please import data first\");\r\n        }\r\n        return this.dataContext.dataLoaded();\r\n    }\r\n\r\n    revealIndices(show) {\r\n        if (show) {\r\n            for (let i = 0; i < this.dataContext.compartments.length; i++) {\r\n                this.sceneManager.showCompartmentIndexText(this.dataContext.compartments[i]);\r\n            }\r\n            for (let i = 0; i < this.dataContext.arrows.length; i++) {\r\n                this.sceneManager.showFluxIndexText(this.dataContext.arrows[i]);\r\n            }\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < this.dataContext.compartments.length; i++) {\r\n            this.sceneManager.hideCompartmentIndexText(this.dataContext.compartments[i]);\r\n        }\r\n        for (let i = 0; i < this.dataContext.arrows.length; i++) {\r\n            this.sceneManager.hideFluxIndexText(this.dataContext.arrows[i]);\r\n        }\r\n    }\r\n\r\n\r\n    deleteDataPoint() {\r\n        let deletedPoint = this.dataContext.userSelectedDataPoint;\r\n        if (this.dataContext.userSelectedDataPoint > -1) {\r\n            this.sceneManager.removeFromScene(this.dataContext.compartments[this.dataContext.userSelectedDataPoint]);\r\n            this.dataContext.compartments.splice(this.dataContext.userSelectedDataPoint, 1);\r\n            this.dataContext.userSelectedDataPoint = -1;\r\n        }\r\n        this.sceneManager.updateArrows(deletedPoint);\r\n    }\r\n\r\n    applyStep() {\r\n        let text = this.dataContext.step < 0 ? '0' : this.dataContext.animationData[this.dataContext.step][0];\r\n        if (this.dataContext.step >= 0) {\r\n            this.sceneManager.colorPoints();\r\n        }\r\n        this.sceneManager.updateProgressBar(this.dataContext.step + 1, text);\r\n    }\r\n\r\n\r\n    reset() {\r\n        if (this.dataContext.animationData) {\r\n            this.dataContext.step = 0;\r\n            this.dataContext.paused = true;\r\n            this.sceneManager.updateProgressBar(0, this.dataContext.animationData[0][0]);\r\n            this.applyStep();\r\n        }\r\n    }\r\n\r\n    addCompartment() {\r\n        let data = this.dataContext;\r\n        let labels = data.labels;\r\n        let labelMode = data.labelMode;\r\n        let compartments = data.compartments;\r\n        let labelText;\r\n        if (labelMode && labels.length > compartments.length + 1) {\r\n            labelText = labels[compartments.length + 1]\r\n        } else {\r\n            if (labelMode && labels.length <= compartments.length) {\r\n                labelText = window.prompt(\"Imported data does not contain a column #\" + compartments.length + \".\\nPlease label your data point: \");\r\n            } else {\r\n                labelText = window.prompt(\"Label your data point: \");\r\n            }\r\n        }\r\n        if ((!labelText) || (labelText === \"\")) {\r\n            alert(\"No label entered\");\r\n            return;\r\n        }\r\n        this.sceneManager.addCompartment(labelText, this.controls.showIndices);\r\n    }\r\n\r\n\r\n    deletePoint() {\r\n        if (this.dataContext.editMode) {\r\n            this.deleteDataPoint();\r\n        }\r\n    }\r\n\r\n    addArrow() {\r\n        if (this.dataContext.editMode) {\r\n            this.dataContext.arrowMode = 1;\r\n        }\r\n    }\r\n\r\n    addPoint() {\r\n        if (this.dataContext.editMode) {\r\n            this.addCompartment();\r\n        }\r\n    }\r\n\r\n    pauseAnimation() {\r\n        this.dataContext.paused = true;\r\n    }\r\n\r\n    seekHelp() {\r\n        window.open(window.location.href + 'help.html', '_blank');\r\n    }\r\n\r\n    singleStep() {\r\n        this.startStepping(true);\r\n    }\r\n\r\n    async startStepping(singleStep = false) {\r\n        if (this.isDataLoaded()) {\r\n            this.dataContext.paused = false;\r\n            this.stepForward(singleStep);\r\n        }\r\n    }\r\n\r\n    async stepForward(singleStep = false) {\r\n        if (this.dataContext.hasNextStep()) {\r\n            if (!this.dataContext.paused) {\r\n                this.applyStep();\r\n                this.dataContext.step += this.controls.skipSteps;\r\n                await actionUtil.sleep(this.dataContext.stepDelay);\r\n                if (!singleStep)\r\n                    this.stepForward();\r\n            }\r\n        }\r\n    }\r\n\r\n    generateCompartments() {\r\n        this.sceneManager.generateCompartments(this.controls.showIndices);\r\n    }\r\n\r\n    generateFluxArrows() {\r\n        let data = this.dataContext;\r\n        if (data.arrows.length > 0) {\r\n            alert(\"Flux Arrows already exist\");\r\n            return;\r\n        } else if (!data.fluxData) {\r\n            alert(\"Flux data must be uploaded first before automatic generation can take place.\");\r\n            return;\r\n        } else if (!data.fluxOriginLabels && !data.fluxDestinationLabels) {\r\n            alert(\"File Format does not support flux arrows. The first row must be the origin compartment and \" +\r\n                \"the second row must be the destination compartment.\");\r\n            return;\r\n        } else if (data.compartments.length <= 0) {\r\n            alert(\"Compartments must be created first for this operation to succeed.\");\r\n            return;\r\n        }\r\n        for (let i = 0; i < data.fluxData[0].length; i++) {\r\n            if (data.fluxDestinationLabels.length - 1 < i || data.fluxOriginLabels.length - 1 < i)\r\n                break;\r\n            if (!data.fluxDestinationLabels[i] || !data.fluxOriginLabels[i])\r\n                continue;\r\n            data.arrowPoints[0] = null;\r\n            data.arrowPoints[1] = null;\r\n            for (let j = 0; j < data.compartments.length; j++) {\r\n                const element = data.compartments[j].labelText.toLowerCase().trim();\r\n                if (element === data.fluxOriginLabels[i].toLowerCase().trim()) {\r\n                    data.arrowPoints[0] = j;\r\n                    if (data.arrowPoints[1] !== null) {\r\n                        this.sceneManager.addArrow();\r\n                        break;\r\n                    }\r\n                    continue;\r\n                }\r\n                if (element === data.fluxDestinationLabels[i].toLowerCase().trim()) {\r\n                    data.arrowPoints[1] = j;\r\n                    if (data.arrowPoints[0] !== null) {\r\n                        this.sceneManager.addArrow();\r\n                        break;\r\n                    }\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Controller;","export default class ActionUtilities  {\r\n\r\n    sleep(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n      }\r\n\r\n      \r\n}","import {\r\n    isUndefined\r\n} from 'util';\r\n\r\nclass MouseHandler {\r\n\r\n    constructor(canvas, dataContext, sceneManager) {\r\n        this.dataContext = dataContext;\r\n        this.sceneManager = sceneManager;\r\n        this.canvas = canvas;\r\n        this.mouseDown = this.mouseDown.bind(this);\r\n        this.mouseUp = this.mouseUp.bind(this);\r\n        this.mouseMove = this.mouseMove.bind(this);\r\n        this.bindLocalFunctions(this);\r\n        this.setupEventListeners(canvas, this);\r\n\r\n    }\r\n\r\n    bindLocalFunctions(handler){\r\n        handler.getMousePos = handler.getMousePos.bind(handler);\r\n        handler.isDataLoaded = handler.isDataLoaded.bind(handler); \r\n        handler.checkWithinRange = handler.checkWithinRange.bind(handler);\r\n        handler.applyStep = handler.applyStep.bind(handler);\r\n    }\r\n\r\n    mouseDown(evt) {\r\n        this.dataContext.mouseDown = true;\r\n        this.checkWithinRange(this.canvas, evt);\r\n    }\r\n\r\n    mouseUp(evt) {\r\n        let data = this.dataContext;\r\n        if (data.editMode) {\r\n            if (data.arrowMode === 1) {\r\n                data.arrowMode = 2;\r\n                this.checkWithinRange(this.canvas, evt);\r\n                if ((data.arrowPoints[0] != null) && (data.arrowPoints[1] != null)) {\r\n                    this.sceneManager.addArrow();\r\n                } else {\r\n                    alert(\"Dragged line was not between two data points\");\r\n                }\r\n                //Reset arrow points\r\n                data.arrowPoints[0] = null;\r\n                data.arrowPoints[1] = null;\r\n            }\r\n            data.mouseDown = false;\r\n            data.dataPointToMove = -1; //No current selected compartment\r\n        }\r\n        if (data.arrows.length > 0) {\r\n            this.sceneManager.updateArrows(-1);\r\n        }\r\n    }\r\n\r\n    mouseMove(evt) {\r\n        let data = this.dataContext;\r\n        if (data.editMode) {\r\n            if (data.mouseDown) {\r\n                let mousePos = this.getMousePos(this.canvas, evt);\r\n                let newMousePos = this.sceneManager.canvasToThreePos(mousePos);\r\n                if (data.dataPointToMove > -1) {\r\n                    data.compartments[data.dataPointToMove].setPosition(newMousePos.x, newMousePos.y, 0);\r\n                    data.compartments[data.dataPointToMove].moveText(newMousePos.x, newMousePos.y);\r\n                    if (data.showIndices()) {\r\n                        data.compartments[data.dataPointToMove].moveIndexText(newMousePos.x, newMousePos.y + (3 / 4) * (data.compartments[data.dataPointToMove].radius));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setupEventListeners(canvas, handler) {\r\n        canvas.addEventListener(\"mousedown\", handler.mouseDown);\r\n        canvas.addEventListener(\"mouseup\", handler.mouseUp);\r\n        canvas.addEventListener(\"mousemove\", handler.mouseMove);\r\n    }\r\n\r\n    getMousePos(canvas, evt) {\r\n        let rect = canvas.getBoundingClientRect();\r\n        return {\r\n            x: evt.clientX - rect.left,\r\n            y: evt.clientY - rect.top\r\n        };\r\n    }\r\n    \r\n    checkWithinRange(canvas, evt) {\r\n        let mousePos = this.sceneManager.canvasToThreePos(this.getMousePos(canvas, evt));\r\n        let mousePosUncorrected = this.sceneManager.canvasToThreePos(this.getMousePos(canvas, evt), true);\r\n        this.dataContext.updateDisplay(\"\", \"\");\r\n        let data = this.dataContext;\r\n        if (data.editMode) {\r\n            for (var i = 0; i < data.compartments.length; i++) {\r\n                let selected = data.compartments[i].withinCircle(mousePos.x, mousePos.y);\r\n                if (selected && data.arrowMode === 1) {\r\n                    data.compartments[i].shadow.mesh.material.color.set(\"#ffff00\");\r\n                    data.arrowPoints[0] = i\r\n                } else if (selected && data.arrowMode === 2) {\r\n                    data.compartments[i].shadow.mesh.material.color.set(\"#ffff00\");\r\n                    data.arrowPoints[1] = i\r\n                } else if (selected) {\r\n                    if (data.userSelectedDataPoint !== -1) {\r\n                        data.compartments[data.userSelectedDataPoint].shadow.mesh.material.color.set(\"#cccccc\");\r\n                    }\r\n                    data.compartments[i].shadow.mesh.material.color.set(\"#ffff00\");\r\n                    data.dataPointToMove = i;\r\n                    data.updateDisplay(data.compartments[i].dataIndex, data.compartments[i].labelText);\r\n                    data.userSelectedDataPoint = i;\r\n                    break;\r\n                } else if (!isUndefined(data.compartments[i])) {\r\n                    data.compartments[i].shadow.mesh.material.color.set(\"#cccccc\");\r\n                }\r\n            }\r\n        }\r\n        if (data.dataPointToMove === -1 && data.progressBar) { //Click was not on a dataPoint\r\n            data.userSelectedDataPoint = -1; //Deselect previous selection\r\n            if (data.animationData && !this.isDataLoaded()) {\r\n                alert(\"Please import data first\");\r\n                return;\r\n            }\r\n\r\n            //Check if click was on progress bar\r\n            if (data.progressBar.withinBar(mousePosUncorrected.x, mousePosUncorrected.y) && data.animationData) {\r\n                let clickedStep = data.progressBar.getStep(mousePosUncorrected.x);\r\n                let text = data.animationData[clickedStep - 1];\r\n                this.sceneManager.updateProgressBar(clickedStep, text ? text[0] : \"0\");\r\n                data.step = clickedStep - 1;\r\n                this.applyStep();\r\n            }\r\n        }\r\n    }\r\n\r\n    isDataLoaded() {\r\n        let data = this.dataContext;\r\n        if (data && !data.dataLoaded()) {\r\n            alert(\"Please import data first\");\r\n        }\r\n        return data.dataLoaded();\r\n    }\r\n\r\n    applyStep() {\r\n        let text = this.dataContext.step < 0 ? '0' : this.dataContext.animationData[this.dataContext.step][0];\r\n        if (this.dataContext.step >= 0) {\r\n            this.sceneManager.colorPoints();\r\n        }\r\n        this.sceneManager.updateProgressBar(this.dataContext.step + 1, text);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default MouseHandler;","class keyboardHandler {\r\n\r\n    constructor(dataContext, sceneManager) {\r\n        this.dataContext = dataContext;\r\n        this.sceneManager = sceneManager;\r\n        this.keyPress = this.keyPress.bind(this);\r\n        this.setupEventListeners(this);\r\n\r\n    }\r\n\r\n    setupEventListeners(handler) {\r\n        document.addEventListener(\"keydown\", handler.keyPress);\r\n    }\r\n\r\n    moveScene = (up, left) => {\r\n        const moveAmount = 40;\r\n        this.sceneManager.moveCamera(left * moveAmount, up * moveAmount);\r\n        this.sceneManager.update();\r\n    }\r\n\r\n    zoomScene = direction =>{\r\n        const moveAmount = 40;\r\n        this.sceneManager.zoomCamera(direction * moveAmount);\r\n        this.sceneManager.update();\r\n    }\r\n\r\n    keyPress = (event) => {\r\n        let preventDefault = true;\r\n        console.log(event.code);\r\n        switch (event.code) {\r\n            case \"ArrowUp\":\r\n                this.moveScene(-1, 0);\r\n                break;\r\n            case \"ArrowLeft\":\r\n                this.moveScene(0, 1);\r\n                break;\r\n            case \"ArrowRight\":\r\n                this.moveScene(0, -1);\r\n                break;\r\n            case \"ArrowDown\":\r\n                this.moveScene(1, 0);\r\n                break;\r\n            case \"Minus\":\r\n            case \"NumpadSubtract\":\r\n                this.zoomScene(-1);\r\n                break;\r\n            case \"Equal\":\r\n            case \"NumpadAdd\":\r\n                this.zoomScene(1);\r\n                break;\r\n            default:\r\n                preventDefault = false; \r\n                break;\r\n        }\r\n        if(preventDefault)\r\n            event.preventDefault();\r\n    }\r\n\r\n}\r\n\r\nexport default keyboardHandler;","import React, {\r\n  Component\r\n} from 'react';\r\nimport threeEntryPoint from '../lib/threejs/threeEntryPoint';\r\n\r\n/* Imported From: https://itnext.io/how-to-use-plain-three-js-in-your-react-apps-417a79d926e0 */\r\nexport default class ThreeContainer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.dataContext = this.props.dataContext;\r\n  }\r\n\r\n  componentDidMount() {\r\n    threeEntryPoint(this.threeRootElement, this.dataContext);\r\n  }\r\n\r\n  render() {\r\n    return ( <div  className='canvas' ref={element => this.threeRootElement = element} > </div>);\r\n  }\r\n}","import SceneManager from './SceneManager';\r\nimport Interface from '../datGui/Interface';\r\nimport Controller from '../datGui/Controller';\r\nimport MouseHandler from '../MouseHandler';\r\nimport KeyboardHandler from '../KeyboardHandler';\r\n\r\nexport default (container, dataContext) => {\r\n    const canvas = createCanvas(document, container);\r\n    ensureDefaults(dataContext, canvas);\r\n    const sceneManager = new SceneManager(canvas, dataContext);\r\n    new MouseHandler(canvas, dataContext, sceneManager);\r\n    new KeyboardHandler(dataContext, sceneManager);\r\n    const controller = new Controller(dataContext, sceneManager);\r\n    const menu = new Interface(controller);\r\n\r\n    dataContext.registerCallback(() => {\r\n        updatePanel(menu, controller, dataContext);\r\n    });\r\n\r\n    render();\r\n\r\n    function createCanvas(document, container) {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = container.scrollWidth;\r\n        canvas.height = container.scrollHeight;\r\n        container.appendChild(canvas);\r\n        return canvas;\r\n    }\r\n\r\n    function render() {\r\n        requestAnimationFrame(render);\r\n        sceneManager.update();\r\n    }\r\n\r\n    function ensureDefaults(dataContext, canvas) {\r\n        dataContext.screenDimensions = {\r\n            width: canvas.width,\r\n            height: canvas.height\r\n        }\r\n        dataContext.origRadius = 40;\r\n        dataContext.paused = true;\r\n        dataContext.stepInc = 1;\r\n        dataContext.color = dataContext.color || [70, 156, 150, 1];\r\n        dataContext.stepDelay = dataContext.stepDelay || 300;\r\n        dataContext.valueMax = dataContext.valueMax || 1;\r\n        dataContext.fluxMax = dataContext.fluxMax || 1;\r\n        dataContext.skipSteps = dataContext.skipSteps || 1;\r\n        dataContext.radius = dataContext.radius || dataContext.origRadius;\r\n        dataContext.halfQuantity = dataContext.valueMax / 2.0;\r\n        dataContext.halfFlux = dataContext.fluxMax / 2.0;\r\n        dataContext.baseColor = [170, 0, 255, 1];\r\n        dataContext.radius = dataContext.radius || dataContext.origRadius;\r\n        dataContext.mouseDown = false;\r\n        dataContext.dataPointToMove = -1;\r\n        dataContext.userSelectedDataPoint = -1;\r\n        dataContext.progressBar = null;\r\n        dataContext.editMode = false;\r\n        dataContext.arrowMode = 0; //0 = Off, 1 = Waiting for 1st point, 2 = Waiting for 2nd point\r\n        dataContext.arrowPoints = []; //After `Add Arrow`, [0] holds FROM data point's index, [1] holds TO data point's index\r\n        dataContext.fontResource = null;\r\n    }\r\n\r\n    function updatePanel(gui, controller, data) {\r\n        data.userSelectedDataPoint = -1;\r\n        data.skipSteps = data.skipSteps || 1;\r\n        data.stepDelay = data.stepDelay || 300;\r\n        data.valueMax = data.valueMax || 1;\r\n        data.fluxMax = data.fluxMax || 1;\r\n        data.color = data.color || [70, 156, 150, 1];\r\n        data.radius = data.radius || data.origRadius;\r\n        data.halfQuantity = data.valueMax / 2.0;\r\n        data.halfFlux = data.fluxMax / 2.0;\r\n        controller.controls.size = data.radius;\r\n        controller.controls.skipSteps = data.skipSteps;\r\n        controller.controls.valueMax = data.valueMax;\r\n        controller.controls.fluxMax = data.fluxMax;\r\n        controller.controls.stepDelay = data.stepDelay;\r\n        controller.controls.color = data.color;\r\n        gui.updateDisplay();\r\n    }\r\n\r\n}","export default class FileUtilities {\r\n\r\n  processXLSXIntoCSV(xlsxFile, onComplete) {\r\n    var reader = new FileReader();\r\n    reader.readAsBinaryString(xlsxFile);\r\n    reader.onload = () => {\r\n      var csvSheetStrings = this.transformXLXSIntoCsvStrings(reader.result);\r\n      onComplete(this.parseSingleCSV(csvSheetStrings[0]));\r\n    }\r\n  }\r\n\r\n  processPlotsData(file, onComplete){\r\n    var reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      let text = reader.result;\r\n      onComplete(JSON.parse(text));\r\n    }\r\n  }\r\n\r\n  transformXLXSIntoCsvStrings(binaryContents) {\r\n    const XLSX = require('xlsx')\r\n    const binaryType = {\r\n      type: 'binary'\r\n    };\r\n    var csvStrings = [];\r\n    var workbook = XLSX.read(binaryContents, binaryType);\r\n    workbook.SheetNames.forEach(name => {\r\n      csvStrings.push(XLSX.utils.sheet_to_csv(workbook.Sheets[name]));\r\n    });\r\n\r\n    return csvStrings;\r\n  }\r\n\r\n  parseSingleCSV(csvString) {\r\n    var numOfRows = 0;\r\n    var numOfColumns = 1;\r\n    var ch, i;\r\n    //Count rows\r\n    for (i = 0; i < csvString.length; i++) {\r\n      ch = csvString.charAt(i);\r\n      if (ch === '\\n') {\r\n        numOfRows++\r\n      }\r\n    }\r\n    //Count columns\r\n    ch = '';\r\n    i = 0;\r\n    while (ch !== '\\n') {\r\n      ch = csvString.charAt(i);\r\n      if (ch === ',') {\r\n        numOfColumns++;\r\n      }\r\n      i++;\r\n    }\r\n    //Create 2D array to hold xlsx data\r\n    this.data = new Array(numOfRows);\r\n    for (i = 0; i < numOfRows; i++) {\r\n      this.data[i] = new Array(numOfColumns);\r\n    }\r\n    //Fill array\r\n    for (i = 0; i < this.data.length; i++) {\r\n      var rows = csvString.split(\"\\n\");\r\n      this.data[i] = rows[i].split(\",\");\r\n    }\r\n    //Remove multiple label rows, starting at 1 (after first label row)\r\n    for (i = 1; i < this.data.length; i++){\r\n      if ((this.data[i][0] === \"t\") || (this.data[i][1] === \"-\")) {\r\n        this.data.splice(i, 1);\r\n      }\r\n    }\r\n    return this.data;\r\n  }\r\n}","import React from 'react';\r\nimport FormGroup from 'react-bootstrap/lib/FormGroup';\r\nimport FormControl from 'react-bootstrap/lib/FormControl';\r\nimport ControlLabel from 'react-bootstrap/lib/ControlLabel';\r\nimport FileUtilities from '../lib/utilities/FileUtilities';\r\nimport NavItem from 'react-bootstrap/lib/NavItem';\r\n\r\nexport default class FileInput extends NavItem {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.title = this.props.title || \"Upload file\";\r\n    this.processUpload = this.processUpload.bind(this);\r\n    this.state = { callback: this.props.onDone, accept: this.props.accept, plot: this.props.isPlot };\r\n  }\r\n\r\n  hasNoFiles(files){\r\n    return files.length === 0;\r\n  }\r\n\r\n  processUpload(e){\r\n    if(this.state.plot)\r\n      this.readPlots(e.target.files, this.state.callback);\r\n    else\r\n      this.readXLSX(e.target.files, this.state.callback);\r\n  }\r\n\r\n  readPlots(files, callback){\r\n    const call = callback;\r\n    let fileUtil = new FileUtilities();\r\n    if(files.length === 0)\r\n      return;\r\n    fileUtil.processPlotsData(files[0], function(dataString){\r\n       call(dataString);\r\n    });\r\n  }\r\n\r\n  readXLSX(files, callback){\r\n    const call = callback;\r\n    let fileUtil = new FileUtilities();\r\n    if(this.hasNoFiles(files))\r\n      return;\r\n    fileUtil.processXLSXIntoCSV(files[0], function(dataString){\r\n       call(dataString);\r\n    });\r\n  }\r\n\r\n  render () {\r\n      return (\r\n        <FormGroup>\r\n         <ControlLabel htmlFor={this.title} style={{ cursor: \"pointer\" }}>\r\n              {this.title}\r\n              <FormControl id={this.title}\r\n                           type=\"file\" \r\n                           accept={this.accept}\r\n                           onChange={this.processUpload} \r\n                           ref={input => {this.fileInput = input;}} \r\n                           style={{ display: \"none\" }} />\r\n          </ControlLabel>\r\n        </FormGroup>\r\n      );\r\n  }\r\n}\r\n        ","export class Model {\r\n    constructor(id = \"untracked\") {\r\n        this.id = id;\r\n        this.compartments = [];\r\n        this.labels = [];\r\n        this.arrows = [];\r\n        this.step = 0;\r\n        this.fluxMax = 1;\r\n        this.valueMax = 1;\r\n        this.stepDelay = 300;\r\n        this.radius = 40;\r\n        this.color = [70, 156, 150, 1];\r\n        this.skipSteps = 1;\r\n    }\r\n}\r\n\r\nexport default Model;","import Model from './Model';\r\nimport localforage from 'localforage';\r\n\r\nconst WEB_STORAGE_KEY = \"plots\";\r\n\r\nexport default class LocalStorage {\r\n\r\n    async addNewModelToLocal(modelName){\r\n        let model = this.newModelTemplate(modelName);\r\n        let models = await this.loadModelsFromDefaultContainer();\r\n        models.push(model);\r\n        await this.saveToStore(WEB_STORAGE_KEY, models, \"Failed to add a new model\").catch(() => {return model}); \r\n        return model;\r\n    }\r\n\r\n    async saveToStore(key, value, failureMsg = \"Failed to write to storage\"){\r\n        try {\r\n            await localforage.setItem(key, \"!\" + JSON.stringify(value));\r\n        } catch (error) {\r\n            alert(failureMsg + String(error));\r\n        }\r\n    }\r\n\r\n    async fetchFromStore(key, failureMsg = \"Failed to fetch from storage\"){\r\n        try {\r\n            let result = await localforage.getItem(key);\r\n            if(!result)\r\n                return null;\r\n            return JSON.parse(result.substring(1));\r\n        } catch (error) {\r\n            alert(failureMsg + \": \" + String(error));            \r\n        }\r\n    }\r\n\r\n    //  item must have name of plot\r\n    //  addition must be Model\r\n    async updateStorage(name, addition){\r\n        let models = await this.loadModelsFromDefaultContainer();\r\n        for (const modelId in models) {\r\n            if (models.hasOwnProperty(modelId) && models[modelId].name === name) {\r\n                const element = models[modelId];\r\n                let id = element.versions.length + 1;\r\n                addition.id = name + id;\r\n                element.versions = [this.newModelVersion(addition)];\r\n            }\r\n        }\r\n        this.saveToStore(WEB_STORAGE_KEY, models, \"Failed to save the models\");\r\n    }\r\n    \r\n    async removeFromStorage(name){\r\n        let models = await this.loadModelsFromDefaultContainer();\r\n        let reducedList = [];\r\n        for (const modelId in models) {\r\n            if (models.hasOwnProperty(modelId)) {\r\n                if(models[modelId].name !== name){\r\n                    reducedList.push(models[modelId]);\r\n                }\r\n            }\r\n        }\r\n        this.saveToStore(WEB_STORAGE_KEY, reducedList, \"Failed to save the models\");\r\n    }\r\n\r\n    async loadFromStorage() {\r\n        let models = await this.loadModelsFromDefaultContainer();\r\n        if(models.length === 0){\r\n            models.push(this.newModelTemplate());\r\n            this.saveToStore(WEB_STORAGE_KEY, models, \"Failed to save the models\");\r\n        }\r\n        return models;\r\n    }\r\n\r\n    async loadModelsFromDefaultContainer(){\r\n        let models = await this.fetchFromStore(WEB_STORAGE_KEY, \"Failed to Access Memory\").catch();\r\n        if (!models || !models.length) {\r\n            models = [];\r\n        }\r\n        return models;\r\n    }\r\n    \r\n    async writeToLocalStorage(dataArray){\r\n        if (!dataArray || !dataArray.length) {\r\n            dataArray = [];\r\n        }\r\n        await this.saveToStore(WEB_STORAGE_KEY, dataArray);\r\n    }\r\n\r\n    newModelTemplate(name = \"Default Storage\") {\r\n       return {\r\n                name: name,\r\n                versions: [this.newModelVersion(new Model(name + \".\" + 1))]\r\n            };\r\n    }\r\n\r\n    newModelVersion(model){\r\n        return {\r\n            plot: model\r\n        }\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport Navbar from 'react-bootstrap/lib/Navbar';\r\nimport FormGroup from 'react-bootstrap/lib/FormGroup';\r\nimport ControlLabel from 'react-bootstrap/lib/ControlLabel';\r\nimport Form from 'react-bootstrap/lib/Form';\r\nimport FileInput from './FileInput';\r\nimport localStorage from '../lib/LocalStorage';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nclass Navigation extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.IController = this.props.IController;\r\n    this.dataContext = this.props.dataContext;\r\n\r\n    this.uploadPoints = this.uploadDataPoints.bind(this);\r\n    this.uploadFlux = this.uploadFluxData.bind(this);\r\n    this.processUpload = this.processUpload.bind(this);\r\n  }\r\n\r\n  async downloadLocalStorage(){\r\n    toast(\"Prepping Download\", { \r\n      position: toast.POSITION.TOP_LEFT\r\n    });\r\n    let data = JSON.stringify(await (new localStorage()).loadModelsFromDefaultContainer());\r\n    var blobData = new Blob([data], {type: 'text/plain'});\r\n    let textFile = window.URL.createObjectURL(blobData);\r\n    let downloadAnchorNode = document.createElement('a');\r\n    downloadAnchorNode.setAttribute(\"href\", textFile);\r\n    downloadAnchorNode.setAttribute(\"download\", \"plots.json\");\r\n    document.body.appendChild(downloadAnchorNode);\r\n    downloadAnchorNode.click();\r\n    downloadAnchorNode.remove();\r\n  }\r\n\r\n  processUpload(e){\r\n    this.readPlots(e.target.files);\r\n  }\r\n\r\n  uploadDataPoints(data){\r\n      toast(\"Upload Point Data Complete\", { \r\n        position: toast.POSITION.TOP_LEFT\r\n      });\r\n      this.dataContext.injectCompartmentList(data);\r\n  }\r\n\r\n  uploadFluxData(data) {\r\n    toast(\"Upload Flux Data Complete\", { \r\n      position: toast.POSITION.TOP_LEFT\r\n    });\r\n    this.dataContext.injectFluxList(data);\r\n  }\r\n\r\n  async  uploadModels(data) {\r\n    if(data && window.confirm(\"Warning! This will replace all of your models with the uploaded models. Continue?\")){\r\n      await (new localStorage()).writeToLocalStorage(data);\r\n      window.location.reload();\r\n      return;\r\n    }\r\n    toast(\"No Models Uploaded\", { \r\n      position: toast.POSITION.TOP_LEFT\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    let preventRedirect = e => {\r\n      e.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <Navbar inverse id='mainNav'>\r\n          <Navbar.Header>\r\n            <Navbar.Brand className='nav-brand'>\r\n              <a href=\"https://github.com/staujd02/time_machine\">Compartmental Visualizer</a>\r\n            </Navbar.Brand>\r\n          </Navbar.Header>\r\n          <Form inline>\r\n            <FileInput className='nav-item' onDone={this.uploadPoints} isPlot={false} accept=\".xlsx\" onClick={preventRedirect} title={\"Upload Compartment Data\"}/>\r\n            <FileInput className='nav-item' onDone={this.uploadFlux} isPlot={false} accept=\".xlsx\" onClick={preventRedirect} title={\"Upload Flux Data\"}/>\r\n            <FileInput className='nav-item' onDone={this.uploadModels} isPlot={true} accept=\".json\" onClick={preventRedirect} title={\"Upload Models\"}/>\r\n            <FormGroup className='nav-item'>\r\n              <ControlLabel htmlFor=\"Export Models\" style={{ cursor: \"pointer\" }} onClick={this.downloadLocalStorage}>\r\n                    {\"Export Models\"}\r\n                    <ToastContainer autoClose={1500} />\r\n              </ControlLabel>\r\n            </FormGroup>\r\n          </Form>\r\n        </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;","import React, { Component } from 'react';\r\nexport default class SavedPlot extends Component {\r\n\r\n  constructor(param){\r\n    super(param);\r\n    this.dataCapsule = this.props.dataCapsule;\r\n    this.name = this.dataCapsule.name;\r\n    this.className = this.props.className;\r\n  }\r\n\r\n  render() {\r\n    return ( \r\n        <div className={this.className}>{this.name}</div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport SavedPlot from './SavedPlot';\r\nimport Button from 'react-bootstrap/lib/Button';\r\nimport LocalStorage from '../lib/LocalStorage';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default class StorageList extends Component {\r\n\r\n  constructor(param){\r\n    super(param);\r\n    const parent = this;\r\n    this.entries = [];\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.addToLocal = this.addToLocal.bind(this);\r\n    this.removeFromLocal = this.removeFromLocal.bind(this);\r\n    this.loadSaves = this.loadSaves.bind(this);\r\n    this.createButtonEntry = this.createButtonEntry.bind(this);\r\n    this.createEntryName = this.createEntryName.bind(this);\r\n    this.createGrid = this.createGrid.bind(this);\r\n    this.activeModelName = this.activeModelName.bind(this);\r\n    this.state = {dataContext: parent.props.dataContext};\r\n    this.loadSaves();\r\n  }\r\n\r\n  isActive(capsule){\r\n    return this.state.dataContext.currentPlot().id === capsule.versions[capsule.versions.length - 1].plot.id;\r\n  }\r\n\r\n  applyName(capsule){\r\n    return this.isActive(capsule) ? \"Save\" : \"Load\";\r\n  }\r\n\r\n  createButtonEntry(save){\r\n      return <Button key={this.entries.length} className=\"grid-item\" onClick={() => this.handleClick(save)}>{this.applyName(save)}</Button>;\r\n  }\r\n\r\n  createEntryName(save){\r\n      return <SavedPlot key={this.entries.length} className=\"grid-item\" dataCapsule={save}/>;\r\n  }\r\n\r\n  activeModelName(){\r\n    let model = \"\";\r\n    if(this.state.models){\r\n    this.state.models.forEach(s => {\r\n      if(this.isActive(s)){\r\n          model = s.name;\r\n      }\r\n    });\r\n    }\r\n    return \" \" + model;\r\n  }\r\n\r\n  async addToLocal(){\r\n    let resp = this.solictStorageName('you would like to add.');\r\n    if(!!resp){\r\n      await (new LocalStorage()).addNewModelToLocal(resp);\r\n      await this.loadSaves();\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n  \r\n  async removeFromLocal(){\r\n    let resp = this.solictStorageName('you would like to permanently delete.');\r\n    if(!!resp){\r\n      await (new LocalStorage()).removeFromStorage(resp);\r\n      await this.loadSaves();\r\n      this.forceUpdate();\r\n      toast.success(\"Model Removed\");\r\n    }\r\n  }\r\n\r\n  solictStorageName(extension) {\r\n    return window.prompt('Please enter the name of Model ' + extension);\r\n  }\r\n\r\n  async handleClick(s) {\r\n    if(this.isActive(s)){\r\n      let plot = this.state.dataContext.currentPlot();\r\n      await (new LocalStorage()).updateStorage(s.name, plot);\r\n      toast.success(\"Model Saved\");\r\n    } else {\r\n      await this.loadSaves();\r\n      this.state.dataContext.currentPlot(s);\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  async loadSaves(){\r\n    this.entries = [];\r\n    let models = await (new LocalStorage()).loadFromStorage(this.ThreeController);\r\n    let dataContext = this.state.dataContext;\r\n    this.setState({\r\n        dataContext: dataContext,\r\n        models: models\r\n    });\r\n  }\r\n\r\n  createGrid(){\r\n    if(this.state.models){\r\n      this.entries = [];\r\n      this.state.models.forEach(s => {\r\n        this.entries.push(this.createEntryName(s));\r\n        this.entries.push(this.createButtonEntry(s));\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    this.createGrid();\r\n\r\n    return ( \r\n        <div>\r\n          <h4 className=\"model-list-banner\">Models</h4>\r\n          <h5 className=\"active-banner\"><span>Loaded Model: </span>{this.activeModelName()}</h5>\r\n          <div className=\"grid-container\">\r\n            {this.entries}\r\n          </div>\r\n          <div className=\"grid-container\">\r\n            <Button id=\"new-plot\" onClick={this.addToLocal}>New Model</Button>\r\n            <Button id=\"delete-plot\" onClick={this.removeFromLocal}>Delete Model</Button>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}","class DataContext {\r\n\r\n    constructor(model) {\r\n        this.plot_id = model.id;\r\n        this.callbacks = [];\r\n        this.labelMode = false;\r\n        this.onLoad = null;\r\n        this.animationData = null;\r\n        this.fluxData = null;\r\n\r\n        // This is for updating legacy saves\r\n        if(model.dataPoints){\r\n            model.compartments = model.dataPoints;\r\n            model.dataPoints = undefined;\r\n        }\r\n\r\n        Object.assign(this, model);\r\n\r\n        this.callObservers = this.callObservers.bind(this);\r\n        this.registerCallback = this.registerCallback.bind(this);\r\n        this.currentPlot = this.currentPlot.bind(this);\r\n        this.currentPlotDetails = this.currentPlotDetails.bind(this);\r\n        this.loadPlot = this.loadPlot.bind(this);\r\n        this.injectCompartmentList = this.loadCompartmentData.bind(this);\r\n        this.injectFluxList = this.loadFluxData.bind(this);\r\n        this.dataLoaded = this.dataLoaded.bind(this);\r\n        this.hasNextStep = this.hasNextStep.bind(this);\r\n    }\r\n\r\n    dataLoaded() {\r\n        return this.animationData != null;\r\n    }\r\n\r\n    hasNextStep() {\r\n        return this.dataLoaded() && this.step < this.animationData.length;\r\n    }\r\n\r\n    registerCallback(call) {\r\n        this.callbacks.push(call);\r\n    }\r\n\r\n    currentPlot(plot = null) {\r\n        if (plot) {\r\n            return this.loadPlot(plot.versions[plot.versions.length - 1].plot);\r\n        } else {\r\n            return this.currentPlotDetails();\r\n        }\r\n    }\r\n\r\n    currentPlotDetails() {\r\n        if(this.dataPoints){\r\n            this.compartments = this.dataPoints;\r\n        }\r\n        return {\r\n            id: this.plot_id,\r\n            compartments: this.compartments,\r\n            labels: this.labels,\r\n            arrows: this.arrows,\r\n            step: this.step,\r\n            valueMax: this.valueMax,\r\n            fluxMax: this.fluxMax,\r\n            stepDelay: this.stepDelay,\r\n            color: this.color,\r\n            skipSteps: this.skipSteps,\r\n            radius: this.radius\r\n        };\r\n    }\r\n\r\n    callObservers() {\r\n        this.callbacks.forEach(call => {\r\n            call();\r\n        });\r\n    }\r\n\r\n    loadFluxData(xlsxData) {\r\n        if (xlsxData.length > 1 && isNaN(xlsxData[1][1])) {\r\n            this.fluxOriginLabels = xlsxData[0];\r\n            this.fluxDestinationLabels = xlsxData[1];\r\n            this.fluxOriginLabels.splice(0, 1);\r\n            this.fluxDestinationLabels.splice(0, 1);\r\n            xlsxData.splice(0, 1); //Remove extra label column\r\n        }\r\n        xlsxData.splice(0, 1); //Remove label column\r\n        this.fluxData = xlsxData;\r\n        if (this.onLoad && typeof this.onLoad === \"function\")\r\n            this.onLoad();\r\n    }\r\n\r\n    loadPlot(plot) {\r\n        if(plot.dataPoints){\r\n            plot.compartments = plot.dataPoints;\r\n        }\r\n        Object.assign(this, plot);\r\n        this.plot_id = plot.id;\r\n        this.callObservers();\r\n        return plot;\r\n    }\r\n\r\n    loadCompartmentData(xlsxData) {\r\n        this.labels = xlsxData[0];\r\n        xlsxData.splice(0, 1); //Remove label column\r\n        this.animationData = xlsxData;\r\n        if (this.onLoad && typeof this.onLoad === \"function\")\r\n            this.onLoad();\r\n    }\r\n}\r\n\r\nexport default DataContext;","import React, { Component } from 'react';\r\nimport './css/App.css';\r\nimport ThreeContainer from './components/ThreeContainer';\r\nimport Navigation from './components/Navigation';\r\nimport StorageList from './components/StorageList.js';\r\nimport LocalStorage from './lib/LocalStorage.js';\r\nimport Grid from 'react-bootstrap/lib/Grid';\r\nimport Row from 'react-bootstrap/lib/Row';\r\nimport Col from 'react-bootstrap/lib/Col';\r\nimport DataContext from './lib/DataContext';\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.ThreeController = {\r\n      resetDataAnimation: function () { },\r\n      onLoad: function () { },\r\n      onFluxLoad: function () { }\r\n    };\r\n    this.fetchSaves()\r\n  }\r\n\r\n  async fetchSaves() {\r\n    let saves = await ((new LocalStorage()).loadFromStorage(this.ThreeController));\r\n    console.log(saves);\r\n    let currentPlot = saves[0].versions[saves[0].versions.length - 1].plot;\r\n    let currentContext = new DataContext(currentPlot);\r\n    this.setState({\r\n      saves: saves,\r\n      currentPlot: currentPlot,\r\n      currentContext: currentContext\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (!this.state || !this.state.currentContext)\r\n      return (<div>Loading From Storage</div>);\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <Grid fluid={true} className='fill'>\r\n          <Row>\r\n            <Navigation dataContext={this.state.currentContext} IController={this.ThreeController} />\r\n          </Row>\r\n          <Row className='fill'>\r\n            <Col sm={2} md={2} className='sidebar'>\r\n              <Row sm={2} md={2}>\r\n                <div className='dat-style' id=\"datGuiAnchor\"></div>\r\n              </Row>\r\n              <Row sm={2} md={2}>\r\n                <StorageList dataContext={this.state.currentContext} saves={this.saves}></StorageList>\r\n              </Row>\r\n              <div className=\"wrapper\">\r\n                <img alt=\"Purdue logo\" className=\"logo\" src=\"./pfw-white.png\"></img>\r\n              </div>\r\n            </Col>\r\n            <Col sm={10} md={10} className='threeContainer'>\r\n              <ThreeContainer dataContext={this.state.currentContext} IController={this.ThreeController} />\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport './css/bootstrap.min.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}