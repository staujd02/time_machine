{"version":3,"sources":["assets/pfw-white.png","lib/threejs/Compartment.js","lib/threejs/ProgressBar.js","lib/threejs/FluxArrow.js","lib/threejs/SceneManager.js","lib/datGui/Interface.js","lib/utilities/Digest.ts","lib/datGui/Controller.js","lib/utilities/ActionUtilities.js","lib/MouseHandler.js","lib/KeyboardHandler.js","components/ThreeContainer.js","lib/threejs/threeEntryPoint.js","lib/utilities/FileUtilities.js","components/FileInput.js","lib/Model.js","lib/LocalStorage.js","components/Navigation.js","components/SavedPlot.js","components/StorageList.js","lib/DataContext.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","tinyColor","require","Compartment","index","previousState","originalPosition","x","y","z","isState","this","dataIndex","labelText","baseColor","radius","shadowMargin","shadowPushBack","textPullForward","shadow","geometry","THREE","mesh","material","color","object","position","set","scale","adjustScale","withinCircle","bind","appendText","moveText","moveIndexText","setPosition","changeTextSize","changeIndexTextSize","transformColor","changeColor","lightenColor","darkenColor","showIndex","update","pos","Math","sqrt","newRadius","newScale","font","text","xpos","ypos","size","height","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelSegments","textMesh","rotation","PI","newX","newY","box","setFromObject","max","min","indexTextMesh","colorObject","r","g","b","toHexString","toString","percent","lighten","darken","ProgressBar","fontResource","yPos","stepLength","bar","progress","start","stop","progressLength","updateProgress","createText","createTitle","withinBar","getStep","setSteps","getBar","step","timeInfo","cX","cY","titleTextMesh","clickedPos","round","numOfSteps","FluxArrow","arrowInfo","legacySaveIndex","undefined","arrowLength","dataPointRadius","arrowWidth","dir","calculateDir","normalize","length","calculateLength","calculatePos","updatePos","setLength","delete","distance","point2","point1","adjust","shiftAmount","shift","newColor","to","from","setDirection","len","scene","remove","origLength","SceneManager","canvas","dataContext","updateProgressBar","progressBar","camera","add","showCompartmentIndexText","compartment","hideCompartmentIndexText","showFluxIndexText","arrow","hideFluxIndexText","renameCompartment","newName","updateCompartmentIndexText","loadFont","fontLoadingComplete","load","reloadScene","buildScene","background","buildRender","screenDimensions","width","renderer","antialias","alpha","DPR","window","devicePixelRatio","setPixelRatio","setSize","gammaInput","gammaOutput","buildCamera","origin","zoom","lookAt","moveCamera","moveProgressBar","zoomCamera","newZoom","updateProjectionMatrix","c","registerCallbacks","onFluxLoad","onLoad","animationData","registerCallback","clearScene","reloadCompartments","reloadArrows","buildProgressBar","traverse","child","push","i","clearArrows","hydratedArrows","legacyArrowIndex","arrows","forEach","oldArrow","restoreArrow","canvasToThreePos","mousePos","asIs","rect","getBoundingClientRect","hydratedCompartments","compartments","oldPoint","point","restoreCompartment","savedData","legacyIndex","geometries","addCompartment","addArrow","data","pointIndex1","arrowPoints","pointIndex2","addFluxArrow","removeFromScene","arrowMode","updateArrows","deletedDataPoint","index1","index2","splice","showIndices","colorPoints","changePercent","halfQuantity","fluxData","halfFlux","generateCompartments","alert","spaceBetween","eColumn","compartmentIndex","xPos","label","labels","changeAllRadius","render","Interface","controller","gui","dat","autoPlace","createHTMLElement","createMenu","updateDisplay","document","getElementById","appendChild","domElement","id","controls","name","buildAnimationFolder","addFolder","buildEditingFolder","buildInterpretationFolder","folder","onChange","stepDelayCallback","skipStepsCallback","editFolder","editModeCallback","labelModeCallback","showIndicesCallback","listen","onFinishChange","compIndexCallback","labelCallback","sizeCallback","valueMaxCallback","fluxMaxCallback","addColor","colorCallback","Digest","digest","hasMissing","has","hasUnmapped","hasDuplicates","appendToMissingDigest","appendToDigest","appendToUnmappedDigest","appendToDuplicateDigest","digestIndex","fluxOriginLabels","destination","fluxDestinationLabels","enumerateMissingDigest","enumerateDigest","enumerateUnmappedDigest","enumerateDuplicateDigest","map","l","split","join","actionUtil","ms","Promise","resolve","setTimeout","Controller","sceneManager","createControls","callbacks","createCallbacks","cIndex","compIndex","bindControllerFunctions","valueMax","fluxMax","stepDelay","skipSteps","generateFluxArrows","clearFluxArrows","seekHelp","singleStep","startStepping","pauseAnimation","resetAnimation","reset","addPoint","deletePoint","editMode","labelMode","isDataLoaded","applyStep","stepForward","deleteDataPoint","newValue","element","userSelectedDataPoint","show","revealIndices","dataLoaded","deletedPoint","paused","prompt","open","hasNextStep","sleep","confirm","destinationLabels","originLabels","found","j","transformString","str","toLowerCase","MouseHandler","mouseDown","mouseUp","mouseMove","bindLocalFunctions","setupEventListeners","handler","getMousePos","checkWithinRange","evt","dataPointToMove","newMousePos","addEventListener","clientX","left","clientY","top","mousePosUncorrected","selected","isUndefined","clickedStep","keyboardHandler","moveScene","up","zoomScene","direction","keyPress","event","preventDefault","code","ThreeContainer","props","container","createElement","scrollWidth","scrollHeight","createCanvas","origRadius","stepInc","ensureDefaults","KeyboardHandler","menu","updatePanel","requestAnimationFrame","threeEntryPoint","threeRootElement","className","ref","Component","FileUtilities","xlsxFile","onComplete","reader","FileReader","readAsBinaryString","onload","csvSheetStrings","transformXLXSIntoCsvStrings","result","parseSingleCSV","file","readAsText","JSON","parse","binaryContents","XLSX","csvStrings","workbook","read","type","SheetNames","utils","sheet_to_csv","Sheets","csvString","ch","numOfRows","numOfColumns","charAt","Array","rows","FileInput","title","processUpload","state","callback","onDone","accept","plot","isPlot","files","e","readPlots","target","readXLSX","call","fileUtil","processPlotsData","dataString","hasNoFiles","processXLSXIntoCSV","htmlFor","style","cursor","input","fileInput","display","NavItem","Model","LocalStorage","modelName","model","newModelTemplate","loadModelsFromDefaultContainer","models","saveToStore","catch","key","value","failureMsg","localforage","setItem","stringify","String","getItem","substring","addition","modelId","hasOwnProperty","versions","newModelVersion","reducedList","fetchFromStore","dataArray","Navigation","IController","uploadPoints","uploadDataPoints","uploadFlux","uploadFluxData","toast","POSITION","TOP_LEFT","localStorage","blobData","Blob","textFile","URL","createObjectURL","downloadAnchorNode","setAttribute","body","click","injectCompartmentList","injectFluxList","writeToLocalStorage","location","reload","preventRedirect","inverse","Header","Brand","href","inline","onClick","uploadModels","downloadLocalStorage","autoClose","SavedPlot","param","dataCapsule","StorageList","parent","entries","handleClick","addToLocal","removeFromLocal","loadSaves","createButtonEntry","createEntryName","createGrid","activeModelName","capsule","currentPlot","isActive","save","applyName","s","resp","solictStorageName","addNewModelToLocal","forceUpdate","removeFromStorage","success","extension","updateStorage","loadFromStorage","ThreeController","setState","DataContext","plot_id","dataPoints","Object","assign","callObservers","currentPlotDetails","loadPlot","loadCompartmentData","loadFluxData","xlsxData","isNaN","App","resetDataAnimation","fetchSaves","saves","currentContext","fluid","sm","md","alt","src","Logo","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","console","log","error","ReactDOM","process","fetch","response","status","headers","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.bac48b66.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pfw-white.89b41a5c.png\";","/* Imported From: https://itnext.io/how-to-use-plain-three-js-in-your-react-apps-417a79d926e0 */\r\nimport * as THREE from 'three'\r\n\r\nconst tinyColor = require('tinycolor2');\r\nconst origRadius = 40;\r\n\r\nclass Compartment {\r\n\r\n    originalPosition = {\r\n        x: 0,\r\n        y: 0,\r\n        z: 0\r\n    }\r\n\r\n    constructor(index, previousState = null) {\r\n\r\n        let isState = !!previousState;\r\n\r\n        this.dataIndex = index; // Holds the index the compartment will retrieve data from\r\n        this.labelText = \"\";\r\n        this.baseColor = isState ? previousState.baseColor : \"#aa00ff\";\r\n        this.radius = origRadius;\r\n        this.shadowMargin = 7;\r\n        this.shadowMargin = isState ? previousState.shadowMargin : 7;\r\n        this.shadowPushBack = 1;\r\n        this.textPullForward = -5;\r\n\r\n        this.shadow = {};\r\n        this.shadow.geometry = new THREE.CircleGeometry(this.radius + this.shadowMargin, 32);\r\n        this.shadow.mesh = new THREE.Mesh(this.shadow.geometry);\r\n        this.shadow.mesh.material =\r\n            new THREE.MeshBasicMaterial({\r\n                color: \"#cccccc\"\r\n            });\r\n\r\n        this.object = {};\r\n        this.object.geometry = new THREE.CircleGeometry(this.radius, 32);\r\n        this.object.mesh = new THREE.Mesh(this.object.geometry);\r\n        this.object.mesh.material =\r\n            new THREE.MeshBasicMaterial({\r\n                color: this.baseColor\r\n            });\r\n\r\n        this.object.mesh.position.set(0, 0, 0);\r\n        this.shadow.mesh.position.set(0, 0, this.shadowPushBack);\r\n\r\n        this.position = this.object.mesh.position;\r\n        this.shadow.position = this.shadow.mesh.position;\r\n\r\n        this.object.scale = this.object.mesh.scale;\r\n        this.shadow.scale = this.shadow.mesh.scale;\r\n\r\n\r\n        if (isState) {\r\n            this.adjustScale(previousState.radius);\r\n            this.object.mesh.position.set(previousState.position.x, previousState.position.y, previousState.position.z);\r\n            this.shadow.mesh.position.set(previousState.shadow.position.x, previousState.shadow.position.y, previousState.shadow.position.z);\r\n        }\r\n\r\n        this.originalPosition = {\r\n            x: this.object.mesh.position.x,\r\n            y: this.object.mesh.position.y,\r\n            z: this.object.mesh.position.z\r\n        } \r\n\r\n        this.withinCircle = this.withinCircle.bind(this);\r\n        this.adjustScale = this.adjustScale.bind(this);\r\n        this.appendText = this.appendText.bind(this);\r\n        this.moveText = this.moveText.bind(this);\r\n        this.moveIndexText = this.moveIndexText.bind(this);\r\n        this.setPosition = this.setPosition.bind(this);\r\n        this.changeTextSize = this.changeTextSize.bind(this);\r\n        this.changeIndexTextSize = this.changeIndexTextSize.bind(this);\r\n        this.transformColor = this.transformColor.bind(this);\r\n        this.changeColor = this.changeColor.bind(this);\r\n        this.lightenColor = this.lightenColor.bind(this);\r\n        this.darkenColor = this.darkenColor.bind(this);\r\n        this.showIndex = this.showIndex.bind(this);\r\n        this.update = this.update.bind(this);\r\n    }\r\n\r\n    update() {\r\n\r\n    }\r\n\r\n    withinCircle(x, y) {\r\n        let pos = this.object.mesh.position;\r\n        let distance = Math.sqrt((x - pos.x) * (x - pos.x) + (y - pos.y) * (y - pos.y));\r\n        let within = !(distance > this.radius);\r\n        return within;\r\n    }\r\n\r\n    adjustScale(newRadius) {\r\n        this.radius = newRadius;\r\n        let newScale = this.radius / origRadius;\r\n        this.object.scale.set(newScale, newScale, newScale);\r\n        this.shadow.scale.set(newScale, newScale, newScale);\r\n    }\r\n\r\n    appendText(font, text, xpos, ypos) {\r\n        this.labelText = text;\r\n        let geometry = new THREE.TextGeometry(text, {\r\n            font: font,\r\n            size: 13,\r\n            height: 5,\r\n            curveSegments: 12,\r\n            bevelEnabled: false,\r\n            bevelThickness: 1,\r\n            bevelSize: 2,\r\n            bevelSegments: 5\r\n        });\r\n        let material = new THREE.MeshBasicMaterial({\r\n            color: 0x000000\r\n        });\r\n        this.textMesh = new THREE.Mesh(geometry, material);\r\n        this.moveText(xpos, ypos);\r\n        this.textMesh.rotation.set(0, 0, Math.PI);\r\n        this.changeTextSize(this.radius);\r\n    }\r\n\r\n    moveText(newX, newY) {\r\n        var box = new THREE.Box3().setFromObject(this.textMesh); // To center text horizontally\r\n        this.textMesh.position.set(newX + .5 * (box.max.x - box.min.x), newY, this.textPullForward);\r\n    }\r\n\r\n    moveIndexText(newX, newY) {\r\n        var box = new THREE.Box3().setFromObject(this.indexTextMesh); // To center text horizontally\r\n        this.indexTextMesh.position.set(newX + .5 * (box.max.x - box.min.x), newY, this.textPullForward);\r\n    }\r\n\r\n    setPosition(x, y, z) {\r\n        this.position.set(x, y, z);\r\n        this.shadow.position.set(x, y, this.shadowPushBack);\r\n    }\r\n\r\n    changeTextSize(newScale) {\r\n        let scale = newScale / origRadius;\r\n        this.textMesh.scale.set(scale, scale, scale + this.textPullForward);\r\n    }\r\n\r\n    changeIndexTextSize(newScale) {\r\n        let scale = newScale / origRadius;\r\n        this.indexTextMesh.scale.set(scale, scale, scale + this.textPullForward);\r\n    }\r\n\r\n    transformColor(colorObject) {\r\n        return tinyColor({\r\n            r: colorObject[0],\r\n            g: colorObject[1],\r\n            b: colorObject[2]\r\n        }).toHexString();\r\n    }\r\n\r\n    changeColor(colorObject) {\r\n        this.baseColor = this.transformColor(colorObject);\r\n        this.object.mesh.material.color.set(this.baseColor.toString());\r\n    }\r\n\r\n    lightenColor(percent) {\r\n        this.object.mesh.material.color.set(tinyColor(this.baseColor).lighten(percent).toString());\r\n    }\r\n\r\n    darkenColor(percent) {\r\n        this.object.mesh.material.color.set(tinyColor(this.baseColor).darken(percent).toString());\r\n    }\r\n\r\n    showIndex(font) {\r\n        let geometry = new THREE.TextGeometry(this.dataIndex.toString(), {\r\n            font: font,\r\n            size: 10,\r\n            height: 5,\r\n            curveSegments: 12,\r\n            bevelEnabled: false,\r\n            bevelThickness: 1,\r\n            bevelSize: 2,\r\n            bevelSegments: 5\r\n        });\r\n        let material = new THREE.MeshBasicMaterial({\r\n            color: 0x000000\r\n        });\r\n        this.indexTextMesh = new THREE.Mesh(geometry, material);\r\n        this.moveIndexText(this.position.x, this.position.y + (3 / 4) * (this.radius));\r\n        this.indexTextMesh.rotation.set(0, 0, Math.PI);\r\n        this.changeIndexTextSize(this.radius);\r\n    }\r\n}\r\n\r\nexport default Compartment;","import * as THREE from 'three'\r\n        \r\nconst barLength = 500;\r\n\r\nclass ProgressBar {\r\n\r\n    constructor(fontResource, yPos) {\r\n        this.fontResource = fontResource;\r\n        this.stepLength = 0;\r\n        this.yPos = yPos;\r\n\r\n        this.bar = {};\r\n        this.progress = {};\r\n        this.start = {};\r\n        this.stop = {};\r\n\r\n        this.bar.geometry = new THREE.BoxGeometry(barLength, 20, 1);\r\n        this.bar.mesh = new THREE.Mesh(this.bar.geometry);\r\n        this.bar.mesh.material = new THREE.MeshBasicMaterial({\r\n            color: \"#afafaf\"\r\n        });\r\n\r\n        this.progressLength = 0;\r\n        this.progress.geometry = new THREE.BoxGeometry(this.progressLength, 20, 1);\r\n        this.progress.mesh = new THREE.Mesh(this.progress.geometry);\r\n        this.progress.mesh.material = new THREE.MeshBasicMaterial({\r\n            color: \"#666666\"\r\n        });\r\n        this.bar.mesh.position.set(0, this.yPos, 0);\r\n        this.progress.mesh.position.set((barLength - this.progressLength) / 2, this.yPos, 0); //TODO: Make height to bottom of screen + padding\r\n\r\n        this.updateProgress = this.updateProgress.bind(this);\r\n        this.createText = this.createText.bind(this);\r\n        this.createTitle = this.createTitle.bind(this);\r\n        this.moveText = this.moveText.bind(this);\r\n        this.withinBar = this.withinBar.bind(this);\r\n        this.getStep = this.getStep.bind(this);\r\n        this.setSteps = this.setSteps.bind(this);\r\n        this.getBar = this.getBar.bind(this);\r\n    }\r\n\r\n    updateProgress(step, timeInfo, cX, cY) {\r\n        if (this.stepLength * step <= barLength) {\r\n            this.progressLength = this.stepLength * step;\r\n            this.progress.mesh.geometry = new THREE.BoxGeometry(this.progressLength, 20, 1);\r\n            // this.progress.mesh.position.set(((barLength - this.progressLength) / 2) - cX, this.yPos + cY, 0); //TODO: Make height to bottom of screen + padding\r\n            this.progress.mesh.position.set(((barLength - this.progressLength) / 2) + cX, this.yPos + cY, 0); //TODO: Make height to bottom of screen + padding\r\n            this.createText(timeInfo, cX, cY);\r\n        }\r\n    }\r\n\r\n    createText(text, cX, cY) {\r\n        var geometry = new THREE.TextGeometry(text, {\r\n            font: this.fontResource,\r\n            size: 10,\r\n            height: 5,\r\n            curveSegments: 12,\r\n            bevelEnabled: false,\r\n            bevelThickness: 1,\r\n            bevelSize: 2,\r\n            bevelSegments: 5\r\n        });\r\n        let material = new THREE.MeshBasicMaterial({\r\n            color: 0x000000\r\n        });\r\n        this.textMesh = new THREE.Mesh(geometry, material);\r\n        this.textMesh.position.set(250 - this.progressLength + cX, this.yPos + 25 + cY, 0);\r\n        this.textMesh.rotation.set(0, 0, Math.PI);\r\n    }\r\n\r\n    createTitle() {\r\n        var geometry = new THREE.TextGeometry(\"Progress Bar:\", {\r\n            font: this.fontResource,\r\n            size: 10,\r\n            height: 5,\r\n            curveSegments: 12,\r\n            bevelEnabled: false,\r\n            bevelThickness: 1,\r\n            bevelSize: 2,\r\n            bevelSegments: 5\r\n        });\r\n        let material = new THREE.MeshBasicMaterial({\r\n            color: 0x000000\r\n        });\r\n        this.titleTextMesh = new THREE.Mesh(geometry, material);\r\n        this.titleTextMesh.position.set(350, this.yPos + 7, 0);\r\n        this.titleTextMesh.rotation.set(0, 0, Math.PI);\r\n    }\r\n\r\n    moveText(newX, newY) {\r\n        var box = new THREE.Box3().setFromObject(this.textMesh); //To center text horizontally\r\n        this.textMesh.position.set(newX + .5 * (box.max.x - box.min.x), newY, 0);\r\n    }\r\n\r\n    withinBar(x, y) {\r\n        var withinHeight = (y < this.yPos + 10) && (y > this.yPos - 10);\r\n        var withinWidth = (x < 250) && (x > -250);\r\n        return withinHeight && withinWidth;\r\n    }\r\n\r\n    getStep(x) {\r\n        var clickedPos = 250 - x;\r\n        var step = Math.round(clickedPos / this.stepLength);\r\n        return step;\r\n    }\r\n\r\n    setSteps(numOfSteps) {\r\n        this.stepLength = barLength / numOfSteps;\r\n    }\r\n\r\n    getBar() {\r\n        return this.progress.mesh\r\n    }\r\n}\r\n\r\nexport default ProgressBar;","import * as THREE from 'three'\r\n        \r\nconst initialCompartmentRadius = 40;\r\nconst tinyColor = require('tinycolor2');\r\n\r\nclass FluxArrow {\r\n\r\n    constructor(arrowInfo, legacySaveIndex) {\r\n\r\n        this.arrowInfo = arrowInfo;\r\n\r\n        // Keep a defined value or fallback to legacy index\r\n        this.arrowInfo.dataIndex = (arrowInfo.dataIndex !== undefined) ? arrowInfo.dataIndex : legacySaveIndex;\r\n\r\n        this.arrowLength = 22 * (arrowInfo.dataPointRadius / initialCompartmentRadius);\r\n        this.arrowWidth = 15 * (arrowInfo.dataPointRadius / initialCompartmentRadius); //Keep relative proportions linked with compartments of radius 40 \r\n        this.textPullForward = -5;\r\n        this.baseColor = \"#222222\"\r\n        this.object = {};\r\n        \r\n        this.dir = this.calculateDir();\r\n        this.dir.normalize();\r\n        this.length = this.calculateLength();\r\n        this.position = this.calculatePos();\r\n\r\n        this.calculateLength = this.calculateLength.bind(this);\r\n        this.calculateDir = this.calculateDir.bind(this);\r\n        this.calculatePos = this.calculatePos.bind(this);\r\n        this.lightenColor = this.lightenColor.bind(this);\r\n        this.darkenColor = this.darkenColor.bind(this);\r\n        this.updatePos = this.updatePos.bind(this);\r\n        this.setLength = this.setLength.bind(this);\r\n        this.delete = this.delete.bind(this);\r\n        this.adjustScale = this.adjustScale.bind(this);\r\n        this.showIndex = this.showIndex.bind(this);\r\n        this.changeIndexTextSize = this.changeIndexTextSize.bind(this);\r\n        this.moveIndexText = this.moveIndexText.bind(this);\r\n\r\n        this.object = new THREE.ArrowHelper(this.dir, this.position, this.length, this.baseColor, this.arrowLength, this.arrowWidth);\r\n    }\r\n\r\n    calculateLength() {\r\n        //Length from center to center\r\n        let distance = Math.sqrt((this.arrowInfo.point2.x - this.arrowInfo.point1.x) * (this.arrowInfo.point2.x - this.arrowInfo.point1.x) +\r\n            (this.arrowInfo.point2.y - this.arrowInfo.point1.y) * (this.arrowInfo.point2.y - this.arrowInfo.point1.y));\r\n        //Moves each end to edge of circle plus 1/2 of radius more\r\n        distance = distance - 3 * (this.arrowInfo.dataPointRadius)\r\n        return distance;\r\n    }\r\n\r\n    calculateDir() {\r\n        return (new THREE.Vector3(this.arrowInfo.point2.x - this.arrowInfo.point1.x, this.arrowInfo.point2.y - this.arrowInfo.point1.y, 0));\r\n    }\r\n\r\n    calculatePos() {\r\n        let adjust = new THREE.Vector3(1.5 * this.arrowInfo.dataPointRadius * this.dir.x, 1.5 * this.arrowInfo.dataPointRadius * this.dir.y, 0) //1.5 * 40 = To edge + 50% of circle radius\r\n        let shiftAmount = this.arrowInfo.dataPointRadius / 3.5;\r\n        if (this.arrowInfo.shift) {\r\n            let diff = (this.dir.x - this.dir.y);\r\n            if (diff >= 0) {\r\n                if (this.dir.y <= -.5) {\r\n                    adjust.x += shiftAmount;\r\n                } else {\r\n                    adjust.y += shiftAmount;\r\n                }\r\n            } else {\r\n                if (this.dir.y >= .5) {\r\n                    adjust.x += shiftAmount;\r\n                } else {\r\n                    adjust.y += shiftAmount;\r\n                }\r\n            }\r\n        }\r\n        return new THREE.Vector3(this.arrowInfo.point1.x + adjust.x, this.arrowInfo.point1.y + adjust.y, 0)\r\n    }\r\n\r\n    lightenColor(percent) {\r\n        let newColor = tinyColor(this.baseColor).lighten(percent).toString();\r\n        this.object = new THREE.ArrowHelper(this.dir, this.position, this.length, newColor, this.arrowLength, this.arrowWidth);\r\n    }\r\n\r\n    darkenColor(percent) {\r\n        let newColor = tinyColor(this.baseColor).darken(percent).toString();\r\n        this.object = new THREE.ArrowHelper(this.dir, this.position, this.length, newColor, this.arrowLength, this.arrowWidth);\r\n    }\r\n\r\n    updatePos(to, from) {\r\n        this.arrowInfo.point1 = to;\r\n        this.arrowInfo.point2 = from;\r\n\r\n        this.dir = this.calculateDir();\r\n        this.dir.normalize();\r\n        this.length = this.calculateLength();\r\n        this.position = this.calculatePos();\r\n        \r\n        if(this.arrowLength > this.length)\r\n            this.object.setLength(this.arrowLength + 5, this.arrowLength, this.arrowWidth);\r\n        else\r\n            this.object.setLength(this.length, this.arrowLength, this.arrowWidth);\r\n        this.object.setDirection(this.dir);\r\n        this.object.position.set(this.position.x, this.position.y, 0);\r\n    }\r\n\r\n    setLength(len) {\r\n        this.object.setLength(len);\r\n    }\r\n\r\n    delete() {\r\n        this.scene.remove(this.object);\r\n    }\r\n\r\n    adjustScale(newRadius) {\r\n        this.arrowInfo.dataPointRadius = newRadius\r\n        this.arrowLength = 22 * (this.arrowInfo.dataPointRadius / initialCompartmentRadius);\r\n        this.arrowWidth = 15 * (this.arrowInfo.dataPointRadius / initialCompartmentRadius);\r\n        this.updatePos(this.arrowInfo.point1, this.arrowInfo.point2);\r\n    }\r\n\r\n    showIndex(font) {\r\n        let geometry = new THREE.TextGeometry(this.arrowInfo.dataIndex.toString(), {\r\n            font: font,\r\n            size: 10,\r\n            height: 5,\r\n            curveSegments: 12,\r\n            bevelEnabled: false,\r\n            bevelThickness: 1,\r\n            bevelSize: 2,\r\n            bevelSegments: 5\r\n        });\r\n        let material = new THREE.MeshBasicMaterial({\r\n            color: 0x808080\r\n        });\r\n        this.indexTextMesh = new THREE.Mesh(geometry, material);\r\n        this.moveIndexText(this.position.x, this.position.y);\r\n        this.indexTextMesh.rotation.set(0, 0, Math.PI);\r\n    }\r\n\r\n    changeIndexTextSize(newScale) {\r\n        let scale = newScale / this.origLength;\r\n        scale = scale === 0 ? (scale = 0.00010) : scale;\r\n        this.indexTextMesh.scale.set(scale, scale, scale + this.textPullForward);\r\n    }\r\n\r\n    moveIndexText(newX, newY) {\r\n        let box = new THREE.Box3().setFromObject(this.indexTextMesh); // To center text horizontally\r\n        this.indexTextMesh.position.set(newX + .5 * (box.max.x - box.min.x), newY, this.textPullForward);\r\n    }\r\n}\r\n\r\n\r\nexport default FluxArrow","/* Imported From: https://itnext.io/how-to-use-plain-three-js-in-your-react-apps-417a79d926e0 */\r\nimport * as THREE from 'three';\r\nimport Compartment from './Compartment';\r\nimport ProgressBar from './ProgressBar';\r\nimport FluxArrow from './FluxArrow';\r\n\r\nclass SceneManager {\r\n\r\n    constructor(canvas, dataContext) {\r\n        const screenDimensions = {\r\n            width: canvas.width,\r\n            height: canvas.height\r\n        };\r\n        this.dataContext = dataContext;\r\n        this.screenDimensions = screenDimensions;\r\n        this.dataContext.origin = new THREE.Vector3(0, 0, 0);\r\n        this.loadFont(this.fontLoadingComplete.bind(this));\r\n        this.canvas = canvas;\r\n        this.scene = this.buildScene();\r\n        this.renderer = this.buildRender(screenDimensions, canvas);\r\n        this.camera = this.buildCamera(screenDimensions, this.dataContext.origin, 2);\r\n        this.registerCallbacks(this.dataContext, this.scene, this.reloadScene);\r\n    }\r\n\r\n    updateProgressBar = (step, text) => {\r\n        if (this.dataContext.progressBar.textMesh) {\r\n            this.scene.remove(this.dataContext.progressBar.textMesh);\r\n        }\r\n        this.dataContext.progressBar.updateProgress(step, text, this.camera.position.x, this.camera.position.y);\r\n        this.scene.add(this.dataContext.progressBar.textMesh);\r\n    }\r\n\r\n    showCompartmentIndexText = compartment => {\r\n        compartment.showIndex(this.dataContext.fontResource);\r\n        this.scene.add(compartment.indexTextMesh);\r\n    }\r\n\r\n    hideCompartmentIndexText = compartment => {\r\n        this.scene.remove(compartment.indexTextMesh);\r\n    }\r\n\r\n    showFluxIndexText = arrow => {\r\n        arrow.showIndex(this.dataContext.fontResource);\r\n        this.scene.add(arrow.indexTextMesh);\r\n    }\r\n\r\n    hideFluxIndexText = arrow =>  {\r\n        this.scene.remove(arrow.indexTextMesh);\r\n    }\r\n\r\n    renameCompartment = (compartment, newName) =>  {\r\n        if(compartment.textMesh)\r\n            this.scene.remove(compartment.textMesh);\r\n        compartment.appendText(this.dataContext.fontResource, newName, compartment.position.x, compartment.position.y);\r\n        this.scene.add(compartment.textMesh);\r\n    }\r\n\r\n    updateCompartmentIndexText = (compartment, showIndex = false) =>  {\r\n        this.scene.remove(compartment.indexTextMesh);\r\n        if (showIndex) {\r\n            compartment.showIndex(this.dataContext.fontResource);\r\n            this.scene.add(compartment.indexTextMesh);\r\n        }\r\n    }\r\n\r\n    loadFont = (fontLoadingComplete) =>  {\r\n        (new THREE.FontLoader()).load(\r\n            'https://threejs.org//examples/fonts/helvetiker_regular.typeface.json',\r\n            fontLoadingComplete\r\n        );\r\n    }\r\n\r\n    fontLoadingComplete = (font) =>  {\r\n        this.dataContext.fontResource = font;\r\n        this.reloadScene();\r\n    }\r\n\r\n    buildScene = () =>  {\r\n        const scene = new THREE.Scene();\r\n        scene.background = new THREE.Color(\"#FFF\");\r\n        return scene;\r\n    }\r\n\r\n    buildRender = (screenDimensions, canvas) =>  {\r\n        const {\r\n            width,\r\n            height\r\n        } = screenDimensions;\r\n        const renderer = new THREE.WebGLRenderer({\r\n            canvas: canvas,\r\n            antialias: true,\r\n            alpha: true\r\n        });\r\n        const DPR = window.devicePixelRatio ? window.devicePixelRatio : 1;\r\n        renderer.setPixelRatio(DPR);\r\n        renderer.setSize(width, height);\r\n\r\n        renderer.gammaInput = true;\r\n        renderer.gammaOutput = true;\r\n\r\n        return renderer;\r\n    }\r\n\r\n    buildCamera = ({\r\n        width,\r\n        height\r\n    }, origin, zoom) => {\r\n        let camera = new THREE.OrthographicCamera(width / (-1*zoom), width / zoom, height / (-1*zoom), height / zoom, 1, 1000);\r\n        camera.position.set(0, 0, -10);\r\n        camera.lookAt(origin);\r\n        return (camera);\r\n    }\r\n\r\n    moveCamera = (x, y) =>  {\r\n        this.camera.position.x += x;\r\n        this.camera.position.y += y;\r\n        this.moveProgressBar(x, y, 0);\r\n    }\r\n\r\n    zoomCamera = zoom => {\r\n        const newZoom = (zoom * .025) + this.camera.zoom;\r\n        if(newZoom > 0){\r\n            this.camera.zoom = newZoom;\r\n            this.camera.updateProjectionMatrix();\r\n        }\r\n    }\r\n\r\n    moveProgressBar = (x, y, z) =>  {\r\n        let c = [\r\n            this.dataContext.progressBar.textMesh,\r\n            this.dataContext.progressBar.titleTextMesh,\r\n            this.dataContext.progressBar.bar.mesh,\r\n            this.dataContext.progressBar.progress.mesh\r\n        ];\r\n\r\n        for (let index = 0; index < c.length; index++) {\r\n            c[index].position.x += x;\r\n            c[index].position.y += y;\r\n            c[index].position.z += z;\r\n        }\r\n    }\r\n\r\n    registerCallbacks = (dataContext, scene, reloadScene) =>  {\r\n        dataContext.onFluxLoad = () => { };\r\n        dataContext.onLoad = () => {\r\n            if (dataContext.animationData != null) {\r\n                if (dataContext.progressBar.textMesh) {\r\n                    scene.remove(dataContext.progressBar.textMesh);\r\n                }\r\n                dataContext.progressBar.createText(dataContext.animationData[0][0]);\r\n                dataContext.progressBar.setSteps(dataContext.animationData.length);\r\n                scene.add(dataContext.progressBar.textMesh);\r\n            }\r\n        };\r\n        dataContext.registerCallback(reloadScene.bind(this));\r\n    }\r\n\r\n    reloadScene = () =>  {\r\n        this.clearScene(this.scene);\r\n        this.reloadCompartments();\r\n        this.reloadArrows();\r\n        this.buildProgressBar();\r\n    }\r\n\r\n    clearScene = (scene) =>  {\r\n        let remove = [];\r\n        scene.traverse((child) => {\r\n            if (child instanceof THREE.Mesh || child instanceof THREE.ArrowHelper) {\r\n                remove.push(child);\r\n            }\r\n        });\r\n        for (let i = 0; i < remove.length; i++) {\r\n            scene.remove(remove[i]);\r\n        }\r\n    }\r\n\r\n    clearArrows = () => {\r\n        let remove = [];\r\n        this.scene.traverse((child) => {\r\n            if (child instanceof THREE.ArrowHelper) {\r\n                remove.push(child);\r\n            }\r\n        });\r\n        for (let i = 0; i < remove.length; i++) {\r\n            this.scene.remove(remove[i]);\r\n        }\r\n    }\r\n\r\n    reloadArrows = () =>  {\r\n        let hydratedArrows = [];\r\n        let legacyArrowIndex = 0;\r\n        this.dataContext.arrows.forEach(oldArrow => {\r\n            hydratedArrows.push(this.restoreArrow(oldArrow, legacyArrowIndex++, this.scene));\r\n        });\r\n        this.dataContext.arrows = hydratedArrows;\r\n    }\r\n\r\n    canvasToThreePos = (mousePos, asIs = false) =>  {\r\n        let rect = this.canvas.getBoundingClientRect();\r\n        let newX, newY;\r\n        newX = (rect.width / 2) - mousePos.x + this.camera.position.x;\r\n        newY = mousePos.y - (rect.height / 2) + this.camera.position.y;\r\n        if(asIs){\r\n            newX -= this.camera.position.x; \r\n            newY -= this.camera.position.y; \r\n        }\r\n        return {\r\n            x: newX,\r\n            y: newY\r\n        };\r\n    }\r\n\r\n\r\n    reloadCompartments = () =>  {\r\n        let hydratedCompartments = [];\r\n        let c = 0;\r\n        this.dataContext.compartments.forEach(oldPoint => {\r\n            if (!oldPoint.dataIndex) { // For converting legacy saves on the fly\r\n                oldPoint.dataIndex = c++;\r\n            }\r\n            let point = this.restoreCompartment(oldPoint, this.scene, this.dataContext);\r\n            hydratedCompartments.push(point);\r\n            point.moveText(point.object.mesh.position.x, point.object.mesh.position.y);\r\n        });\r\n        this.dataContext.compartments = hydratedCompartments;\r\n    }\r\n\r\n    buildProgressBar = () =>  {\r\n        let rect = this.canvas.getBoundingClientRect();\r\n        this.dataContext.progressBar = new ProgressBar(this.dataContext.fontResource, (-rect.height / 2.0) + 25);\r\n        this.scene.add(this.dataContext.progressBar.bar.mesh);\r\n        this.scene.add(this.dataContext.progressBar.progress.mesh);\r\n        if (this.dataContext.progressBar.textMesh !== null) {\r\n            this.scene.remove(this.dataContext.progressBar.textMesh)\r\n        }\r\n        this.dataContext.progressBar.createText(\"0\");\r\n        this.scene.add(this.dataContext.progressBar.textMesh);\r\n        this.dataContext.progressBar.createTitle();\r\n        this.scene.add(this.dataContext.progressBar.titleTextMesh);\r\n    }\r\n\r\n    restoreArrow = (savedData, legacyIndex, scene) => {\r\n        let arrow = new FluxArrow(savedData.arrowInfo, legacyIndex);\r\n        scene.add(arrow.object);\r\n        return arrow;\r\n    }\r\n\r\n    restoreCompartment = (savedData, scene, dataContext) =>  {\r\n        let compartment = new Compartment(savedData.dataIndex, savedData);\r\n        scene.add(compartment.object.mesh);\r\n        scene.add(compartment.shadow.mesh);\r\n        let labelText = savedData.textMesh ? savedData.textMesh.geometries[0].text : \" \";\r\n        if (!labelText)\r\n            labelText = \" \";\r\n        compartment.appendText(dataContext.fontResource, labelText, compartment.position.x, compartment.position.y);\r\n        scene.add(compartment.textMesh);\r\n        return compartment;\r\n    }\r\n\r\n    addCompartment = (labelText, showIndex = false) =>  {\r\n        let compartments = this.dataContext.compartments;\r\n        let compartment = new Compartment(compartments.length + 1);\r\n        this.scene.add(compartment.object.mesh);\r\n        this.scene.add(compartment.shadow.mesh);\r\n        if (showIndex) {\r\n            compartment.showIndex(this.dataContext.fontResource);\r\n            this.scene.add(compartment.indexTextMesh);\r\n        }\r\n        compartment.changeColor(this.dataContext.baseColor);\r\n        compartment.adjustScale(this.dataContext.radius);\r\n        compartment.appendText(this.dataContext.fontResource, labelText, compartment.position.x, compartment.position.y);\r\n        this.scene.add(compartment.textMesh);\r\n        compartments.push(compartment);\r\n        compartment.setPosition(0, 0, 0);\r\n        compartment.moveText(0, 0);\r\n    }\r\n\r\n    addArrow = () =>  {\r\n        let arrows = this.dataContext.arrows;\r\n        let data = this.dataContext;\r\n        let shift = false;\r\n        //Check if new arrow is between an already arrowed combination\r\n        for (var i = 0; i < arrows.length; i++) {\r\n            if (arrows[i].arrowInfo.pointIndex1 === data.arrowPoints[0] && arrows[i].arrowInfo.pointIndex2 === data.arrowPoints[1]) {\r\n                //Arrow already exists in that direction-- do nothing\r\n                return false;\r\n            }\r\n            if (arrows[i].arrowInfo.pointIndex1 === data.arrowPoints[1] && arrows[i].arrowInfo.pointIndex2 === data.arrowPoints[0]) {\r\n                //Arrow exists in opposite direction-- shift new arrow\r\n                shift = true;\r\n            }\r\n        }\r\n        this.addFluxArrow({\r\n            shift: shift,\r\n            len: 200,\r\n            pointIndex1: data.arrowPoints[0],\r\n            pointIndex2: data.arrowPoints[1],\r\n            point1: data.compartments[data.arrowPoints[0]].position,\r\n            point2: data.compartments[data.arrowPoints[1]].position,\r\n            dataPointRadius: data.radius,\r\n            dataIndex: data.arrows.length + 1,\r\n        });\r\n        return true;\r\n    }\r\n\r\n    removeFromScene = (compartment) =>  {\r\n        this.scene.remove(compartment.object.mesh);\r\n        this.scene.remove(compartment.shadow.mesh);\r\n        this.scene.remove(compartment.textMesh);\r\n    }\r\n\r\n    addFluxArrow = (arrowInfo) =>  {\r\n        let arrows = this.dataContext.arrows;\r\n\r\n        this.dataContext.arrowMode = 0;\r\n\r\n        let arrow = new FluxArrow(arrowInfo);\r\n        this.scene.add(arrow.object);\r\n        arrows.push(arrow);\r\n    }\r\n\r\n    updateArrows = (deletedDataPoint) =>  {\r\n        let arrows = this.dataContext.arrows;\r\n        for (var i = 0; i < arrows.length; i++) {\r\n            let index1 = arrows[i].arrowInfo.pointIndex1;\r\n            let index2 = arrows[i].arrowInfo.pointIndex2;\r\n            if ((index1 === deletedDataPoint) || (index2 === deletedDataPoint)) {\r\n                this.scene.remove(arrows[i].object)\r\n                arrows.splice(i, 1);\r\n                i--; //To go back and check arrow that just moved into i'th position\r\n            } else {\r\n                if ((index1 > deletedDataPoint) && (deletedDataPoint !== -1)) {\r\n                    index1--;\r\n                    arrows[i].arrowInfo.pointIndex1--;\r\n                }\r\n                if ((index2 > deletedDataPoint) && (deletedDataPoint !== -1)) {\r\n                    index2--;\r\n                    arrows[i].arrowInfo.pointIndex2--;\r\n                }\r\n                arrows[i].updatePos(this.dataContext.compartments[index1].position, this.dataContext.compartments[index2].position);\r\n                if (this.dataContext.showIndices()) {\r\n                    arrows[i].moveIndexText(arrows[i].position.x, arrows[i].position.y);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    changeColor = (newColor) =>  {\r\n        this.dataContext.color = newColor;\r\n        for (let i = 0; i < this.dataContext.compartments.length; i++) {\r\n            this.dataContext.compartments[i].changeColor(newColor);\r\n        }\r\n    }\r\n\r\n    colorPoints = () =>  {\r\n        let changePercent, diff;\r\n        let data = this.dataContext;\r\n\r\n        for (let i = 0; i < data.compartments.length; i++) {\r\n            if (data.animationData[data.step][data.compartments[i].dataIndex] > data.halfQuantity) { //i+1 because column 0 holds time info\r\n                //Darken\r\n                diff = data.animationData[data.step][data.compartments[i].dataIndex] - data.halfQuantity;\r\n                changePercent = diff / data.halfQuantity;\r\n                data.compartments[i].darkenColor(changePercent * 50); //Multiply by 50 - percent available to darken by\r\n            } else {\r\n                //Lighten\r\n                diff = data.halfQuantity - data.animationData[data.step][data.compartments[i].dataIndex];\r\n                changePercent = diff / data.halfQuantity;\r\n                data.compartments[i].lightenColor(changePercent * 50); //Multiply by 50 - percent available to lighten by\r\n            }\r\n        }\r\n        if (data.fluxData != null) {\r\n            for (let i = 0; i < data.arrows.length - 1; i++) {\r\n                if (data.fluxData[data.step][data.arrows[i].arrowInfo.dataIndex] > data.halfFlux) { //i+1 because column 0 holds time info\r\n                    //Darken\r\n                    diff = data.fluxData[data.step][data.arrows[i].arrowInfo.dataIndex] - data.halfFlux;\r\n                    changePercent = diff / data.halfFlux;\r\n                    this.scene.remove(data.arrows[i].object);\r\n                    data.arrows[i].darkenColor(changePercent * 50); //Multiply by 50 - percent available to darken by\r\n                    this.scene.add(data.arrows[i].object) //Add newly colored arrow\r\n                } else {\r\n                    //Lighten\r\n                    diff = data.halfFlux - data.fluxData[data.step][data.arrows[i].arrowInfo.dataIndex];\r\n                    changePercent = diff / data.halfFlux;\r\n                    this.scene.remove(data.arrows[i].object);\r\n                    data.arrows[i].lightenColor(changePercent * 50); //Multiply by 50 - percent available to lighten by\r\n                    this.scene.add(data.arrows[i].object) //Add newly colored arrow\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    generateCompartments = (showIndex) => {\r\n        let data = this.dataContext;\r\n        if (data.animationData == null) {\r\n            alert(\"Compartment data must be uploaded first\");\r\n            return;\r\n        } else if (data.compartments.length > 0) {\r\n            alert(\"Compartments already exist\");\r\n            return;\r\n        }\r\n        let rect = this.canvas.getBoundingClientRect();\r\n        let freeSpace = rect.width - ((data.animationData[0].length - 1) * (data.radius * 2)) - 2 * data.radius; // - 2*radius allocates for a radius buffer space on each end\r\n        let spaceBetween = freeSpace / (data.animationData[0].length - 2);\r\n        for (let eColumn = 1; eColumn < data.animationData[0].length; eColumn++) {\r\n            let compartmentIndex = eColumn - 1;\r\n            let xPos = -((rect.width / 2) - data.radius) + (compartmentIndex * data.radius * 2) + (compartmentIndex * spaceBetween) + data.radius; // + radius gives a radius buffer space on each end\r\n            let label = !!data.labels[eColumn] ? data.labels[eColumn] : (eColumn).toString();\r\n            this.addCompartment(label, showIndex);\r\n            //Move to appropriate location\r\n            data.compartments[compartmentIndex].setPosition(-xPos, -1, 0);\r\n            data.compartments[compartmentIndex].moveText(-xPos, 0);\r\n            if (showIndex) {\r\n                data.compartments[compartmentIndex].moveIndexText(-xPos, (3 / 4) * (data.compartments[compartmentIndex].radius));\r\n            }\r\n        }\r\n    }\r\n\r\n    changeAllRadius = () =>  {\r\n        let point;\r\n        for (let i = 0; i < this.dataContext.compartments.length; i++) {\r\n            point = this.dataContext.compartments[i];\r\n            point.adjustScale(this.dataContext.radius);\r\n            point.changeTextSize(this.dataContext.radius)\r\n            point.moveText(point.object.mesh.position.x, point.object.mesh.position.y);\r\n        }\r\n        for (let i = 0; i < this.dataContext.arrows.length; i++) {\r\n            this.dataContext.arrows[i].adjustScale(this.dataContext.radius);\r\n        }\r\n    }\r\n\r\n    update = () =>  {\r\n        this.renderer.render(this.scene, this.camera);\r\n    }\r\n\r\n}\r\n\r\nexport default SceneManager;","import * as dat from 'dat.gui';\r\n\r\nclass Interface {\r\n\r\n    constructor(controller) {\r\n        this.gui = new dat.GUI({\r\n            autoPlace: false\r\n        });\r\n        this.createHTMLElement(this.gui);\r\n        this.createMenu.bind(this)(this.gui, controller);\r\n        this.updateDisplay = this.gui.updateDisplay;\r\n    }\r\n\r\n    createHTMLElement(gui) {\r\n        document.getElementById('datGuiAnchor').appendChild(gui.domElement);\r\n        gui.domElement.id = 'datGuiAnchor';\r\n    }\r\n\r\n    createMenu(gui, controller) {\r\n        gui.add(controller.controls, 'seekHelp').name(\"Help\");\r\n        this.buildAnimationFolder(gui.addFolder(\"Animation\"), controller);\r\n        this.buildEditingFolder(gui.addFolder(\"Model Editing\"), controller);\r\n        this.buildInterpretationFolder(gui.addFolder(\"Interpretation\"), controller);\r\n    }\r\n\r\n    buildAnimationFolder(folder, controller) {\r\n        folder.add(controller.controls, 'singleStep').name(\"Step - -- -- -| \\u21E5\");\r\n        folder.add(controller.controls, 'startStepping').name(\"Start - -- -- -| \\u25B6\");\r\n        folder.add(controller.controls, 'pauseAnimation').name(\"Pause - -- -| \\u23F8\");\r\n        folder.add(controller.controls, 'resetAnimation').name(\"Reset - --- -| \\u21BB\");\r\n        folder.add(controller.controls, 'stepDelay').name(\"Delay (in ms)\")\r\n            .min(0)\r\n            .max(500)\r\n            .step(10)\r\n            .onChange(controller.stepDelayCallback);\r\n        folder.add(controller.controls, 'skipSteps').name(\"Step Size\")\r\n            .onChange(controller.skipStepsCallback);\r\n        return folder;\r\n    }\r\n\r\n    buildEditingFolder(editFolder, controller) {\r\n        editFolder.add(controller.controls, 'generateCompartments').name(\"Generate Comps.\");\r\n        editFolder.add(controller.controls, 'generateFluxArrows').name(\"Generate Flux.\");\r\n        editFolder.add(controller.controls, 'clearFluxArrows').name(\"Clear All Flux.\");\r\n        editFolder.add(controller.controls, 'editMode').name(\"Edit Mode\")\r\n            .onChange(controller.editModeCallback);\r\n        editFolder.add(controller.controls, 'labelMode').name(\"Import Labels\")\r\n            .onChange(controller.labelModeCallback);\r\n        editFolder.add(controller.controls, 'showIndices').name(\"Show Indices\")\r\n            .onChange(controller.showIndicesCallback);\r\n        editFolder.add(controller.controls, 'compIndex').name(\"Data Index\")\r\n            .listen()\r\n            .onFinishChange(controller.compIndexCallback);\r\n        editFolder.add(controller.controls, 'label').name(\"Comp. Label\")\r\n            .listen()\r\n            .onChange(controller.labelCallback);\r\n        editFolder.add(controller.controls, 'addPoint').name(\"Add Compartment\");\r\n        editFolder.add(controller.controls, 'addArrow').name(\"Add Arrow\");\r\n        editFolder.add(controller.controls, 'deletePoint').name(\"Delete Compartment\");\r\n        editFolder.add(controller.controls, 'size').name(\"Size\")\r\n            .min(10)\r\n            .max(100)\r\n            .step(1)\r\n            .onChange(controller.sizeCallback);\r\n        return editFolder;\r\n    }\r\n\r\n    buildInterpretationFolder(folder, controller) {\r\n        folder.add(controller.controls, 'valueMax').name(\"Comp. Maximum\")\r\n            .onChange(controller.valueMaxCallback);\r\n        folder.add(controller.controls, 'fluxMax').name(\"Flux Maximum\")\r\n            .onChange(controller.fluxMaxCallback);\r\n        folder.addColor(controller.controls, 'color').name(\"50% Max Color\")\r\n            .onChange(controller.colorCallback);\r\n        return folder;\r\n    }\r\n}\r\n\r\nexport default Interface;","interface LabelDataStrut {\r\n    fluxDestinationLabels: string[]\r\n    fluxOriginLabels: string[]\r\n}\r\n\r\ninterface FluxDescription {\r\n    origin: string\r\n    destination: string\r\n}\r\n\r\nclass Digest {\r\n\r\n    private data: LabelDataStrut;\r\n    private digest: [FluxDescription[], FluxDescription[], FluxDescription[]]\r\n\r\n    constructor(data: LabelDataStrut) {\r\n       this.data = data;\r\n       this.digest = [[],[],[]]\r\n    }\r\n\r\n    hasMissing = (): boolean => this.has(0);\r\n    hasUnmapped = (): boolean => this.has(1);\r\n    hasDuplicates = (): boolean => this.has(2);\r\n    has = (i: number): boolean => this.digest[i].length > 0\r\n\r\n    appendToMissingDigest = (i: number) => this.appendToDigest(0, i);\r\n    appendToUnmappedDigest = (i: number) => this.appendToDigest(1, i);\r\n    appendToDuplicateDigest = (i: number) => this.appendToDigest(2, i);\r\n    appendToDigest = (digestIndex: number, i: number) => {\r\n        this.digest[digestIndex].push({\r\n            origin: this.data.fluxOriginLabels[i],\r\n            destination: this.data.fluxDestinationLabels[i]\r\n        });\r\n    }\r\n\r\n    enumerateMissingDigest = (): string => this.enumerateDigest(0);\r\n    enumerateUnmappedDigest = (): string => this.enumerateDigest(1);\r\n    enumerateDuplicateDigest = (i: number) => this.enumerateDigest(2);\r\n    enumerateDigest = (digestIndex: number) => {\r\n        return this.digest[digestIndex]\r\n                .map(l => `    ${l.origin} => ${l.destination}`)\r\n                    .toString()\r\n                    .split(',')\r\n                    .join('\\n')\r\n    }\r\n\r\n}\r\n\r\nexport default Digest;","import ActionUtilities from '../utilities/ActionUtilities';\r\nimport Digest from '../utilities/Digest';\r\n\r\nconst actionUtil = new ActionUtilities();\r\n\r\nclass Controller {\r\n\r\n    constructor(dataContext, sceneManager) {\r\n        this.dataContext = dataContext;\r\n        this.sceneManager = sceneManager;\r\n        this.controls = this.createControls.bind(this)(dataContext);\r\n        this.callbacks = this.createCallbacks(this);\r\n        this.dataContext.showIndices = () => {\r\n            return this.controls.showIndices;\r\n        };\r\n        this.dataContext.updateDisplay = (cIndex, label) => {\r\n            this.controls.compIndex = cIndex; \r\n            this.controls.label = label; \r\n        };\r\n    }\r\n\r\n    createControls(data) {\r\n        this.bindControllerFunctions(this);\r\n        return {\r\n            size: data.radius,\r\n            valueMax: data.valueMax,\r\n            fluxMax: data.fluxMax,\r\n            stepDelay: data.stepDelay,\r\n            color: data.color,\r\n            skipSteps: data.skipSteps,\r\n            generateCompartments: this.generateCompartments.bind(this),\r\n            generateFluxArrows: this.generateFluxArrows.bind(this),\r\n            clearFluxArrows: this.clearFluxArrows.bind(this),\r\n            seekHelp: this.seekHelp.bind(this),\r\n            singleStep: this.singleStep.bind(this),\r\n            startStepping: this.startStepping.bind(this),\r\n            pauseAnimation: this.pauseAnimation.bind(this),\r\n            resetAnimation: this.reset.bind(this),\r\n            addPoint: this.addPoint.bind(this),\r\n            addArrow: this.addArrow.bind(this),\r\n            deletePoint: this.deletePoint.bind(this),\r\n            showIndices: false,\r\n            compIndex: \"\",\r\n            label: \"\",\r\n            editMode: false,\r\n            labelMode: false\r\n        }\r\n    }\r\n\r\n    bindControllerFunctions(controller) {\r\n        controller.singleStep = controller.singleStep.bind(controller);\r\n        controller.generateCompartments = controller.generateCompartments.bind(controller);\r\n        controller.generateFluxArrows = controller.generateFluxArrows.bind(controller);\r\n        controller.startStepping = controller.startStepping.bind(controller);\r\n        controller.pauseAnimation = controller.pauseAnimation.bind(controller);\r\n        controller.resetAnimation = controller.reset.bind(controller);\r\n        controller.addPoint = controller.addPoint.bind(controller);\r\n        controller.addCompartment = controller.addCompartment.bind(controller);\r\n        controller.addArrow = controller.addArrow.bind(controller);\r\n        controller.deletePoint = controller.deletePoint.bind(controller);\r\n        controller.clearFluxArrows = controller.clearFluxArrows.bind(controller);\r\n\r\n        controller.isDataLoaded = controller.isDataLoaded.bind(controller);\r\n        controller.applyStep = controller.applyStep.bind(controller);\r\n        controller.stepForward = controller.stepForward.bind(controller);\r\n        controller.deleteDataPoint = controller.deleteDataPoint.bind(controller);\r\n    }\r\n\r\n    createCallbacks(Controller) {\r\n        Controller.stepDelayCallback = this.stepDelayCallback.bind(this);\r\n        Controller.editModeCallback = this.editModeCallback.bind(this);\r\n        Controller.skipStepsCallback = this.skipStepsCallback.bind(this);\r\n        Controller.labelModeCallback = this.labelModeCallback.bind(this);\r\n        Controller.showIndicesCallback = this.showIndicesCallback.bind(this);\r\n        Controller.compIndexCallback = this.compIndexCallback.bind(this);\r\n        Controller.labelCallback = this.labelCallback.bind(this);\r\n        Controller.sizeCallback = this.sizeCallback.bind(this);\r\n        Controller.valueMaxCallback = this.valueMaxCallback.bind(this);\r\n        Controller.fluxMaxCallback = this.fluxMaxCallback.bind(this);\r\n        Controller.colorCallback = this.colorCallback.bind(this);\r\n        Controller.clearFluxArrows = this.clearFluxArrows.bind(this);\r\n    }\r\n\r\n    colorCallback(newValue) {\r\n        this.dataContext.baseColor = newValue;\r\n        this.sceneManager.changeColor(newValue);\r\n    }\r\n\r\n    fluxMaxCallback(newValue) {\r\n        this.dataContext.fluxMax = newValue;\r\n        this.dataContext.halfFlux = this.dataContext.fluxMax / 2.0;\r\n    }\r\n\r\n    valueMaxCallback(newValue) {\r\n        this.dataContext.valueMax = newValue;\r\n        this.dataContext.halfQuantity = this.dataContext.valueMax / 2.0;\r\n    }\r\n\r\n    sizeCallback(newValue) {\r\n        this.dataContext.radius = newValue;\r\n        this.sceneManager.changeAllRadius();\r\n    }\r\n\r\n    labelCallback(newValue) {\r\n        const element = this.dataContext.compartments[this.dataContext.userSelectedDataPoint];\r\n        if(element)\r\n            this.sceneManager.renameCompartment(element, newValue);\r\n    }\r\n\r\n    compIndexCallback(newValue) {\r\n        if (this.dataContext.userSelectedDataPoint !== -1) {\r\n            if ((newValue > this.dataContext.compartments.length) || (newValue < 1)) {\r\n                alert(\"Invalid Index\");\r\n            } else {\r\n                let compartment = this.dataContext.compartments[this.dataContext.userSelectedDataPoint];\r\n                compartment.dataIndex = newValue;\r\n                this.sceneManager.updateCompartmentIndexText(compartment, this.controls.showIndices);\r\n            }\r\n        }\r\n    }\r\n\r\n    showIndicesCallback(show) {\r\n        this.revealIndices(show);\r\n        this.revealIndices = this.revealIndices.bind(this);\r\n    }\r\n\r\n    labelModeCallback(newValue) {\r\n        this.dataContext.labelMode = newValue;\r\n    }\r\n\r\n    editModeCallback(newValue) {\r\n        this.dataContext.editMode = newValue;\r\n    }\r\n\r\n    skipStepsCallback(newValue) {\r\n        this.dataContext.skipSteps = newValue;\r\n    }\r\n\r\n    stepDelayCallback(newValue) {\r\n        this.dataContext.stepDelay = newValue;\r\n    }\r\n\r\n    isDataLoaded() {\r\n        if (this.dataContext && !this.dataContext.dataLoaded()) {\r\n            alert(\"Please import data first\");\r\n        }\r\n        return this.dataContext.dataLoaded();\r\n    }\r\n\r\n    revealIndices(show) {\r\n        if (show) {\r\n            for (let i = 0; i < this.dataContext.compartments.length; i++) {\r\n                this.sceneManager.showCompartmentIndexText(this.dataContext.compartments[i]);\r\n            }\r\n            for (let i = 0; i < this.dataContext.arrows.length; i++) {\r\n                this.sceneManager.showFluxIndexText(this.dataContext.arrows[i]);\r\n            }\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < this.dataContext.compartments.length; i++) {\r\n            this.sceneManager.hideCompartmentIndexText(this.dataContext.compartments[i]);\r\n        }\r\n        for (let i = 0; i < this.dataContext.arrows.length; i++) {\r\n            this.sceneManager.hideFluxIndexText(this.dataContext.arrows[i]);\r\n        }\r\n    }\r\n\r\n\r\n    deleteDataPoint() {\r\n        let deletedPoint = this.dataContext.userSelectedDataPoint;\r\n        if (this.dataContext.userSelectedDataPoint > -1) {\r\n            this.sceneManager.removeFromScene(this.dataContext.compartments[this.dataContext.userSelectedDataPoint]);\r\n            this.dataContext.compartments.splice(this.dataContext.userSelectedDataPoint, 1);\r\n            this.dataContext.userSelectedDataPoint = -1;\r\n        }\r\n        this.sceneManager.updateArrows(deletedPoint);\r\n    }\r\n\r\n    applyStep() {\r\n        let text = this.dataContext.step < 0 ? '0' : this.dataContext.animationData[this.dataContext.step][0];\r\n        if (this.dataContext.step >= 0) {\r\n            this.sceneManager.colorPoints();\r\n        }\r\n        this.sceneManager.updateProgressBar(this.dataContext.step + 1, text);\r\n    }\r\n\r\n\r\n    reset() {\r\n        if (this.dataContext.animationData) {\r\n            this.dataContext.step = 0;\r\n            this.dataContext.paused = true;\r\n            this.sceneManager.updateProgressBar(0, this.dataContext.animationData[0][0]);\r\n            this.applyStep();\r\n        }\r\n    }\r\n\r\n    addCompartment() {\r\n        let data = this.dataContext;\r\n        let labels = data.labels;\r\n        let labelMode = data.labelMode;\r\n        let compartments = data.compartments;\r\n        let labelText;\r\n        if (labelMode && labels.length > compartments.length + 1) {\r\n            labelText = labels[compartments.length + 1]\r\n        } else {\r\n            if (labelMode && labels.length <= compartments.length) {\r\n                labelText = window.prompt(\"Imported data does not contain a column #\" + compartments.length + \".\\nPlease label your data point: \");\r\n            } else {\r\n                labelText = window.prompt(\"Label your data point: \");\r\n            }\r\n        }\r\n        if ((!labelText) || (labelText === \"\")) {\r\n            alert(\"No label entered\");\r\n            return;\r\n        }\r\n        this.sceneManager.addCompartment(labelText, this.controls.showIndices);\r\n    }\r\n\r\n\r\n    deletePoint() {\r\n        if (this.dataContext.editMode) {\r\n            this.deleteDataPoint();\r\n        }\r\n    }\r\n\r\n    addArrow() {\r\n        if (this.dataContext.editMode) {\r\n            this.dataContext.arrowMode = 1;\r\n        }\r\n    }\r\n\r\n    addPoint() {\r\n        if (this.dataContext.editMode) {\r\n            this.addCompartment();\r\n        }\r\n    }\r\n\r\n    pauseAnimation() {\r\n        this.dataContext.paused = true;\r\n    }\r\n\r\n    seekHelp() {\r\n        window.open('https://staujd02.github.io/time_machine/help.html', '_blank');\r\n    }\r\n\r\n    singleStep() {\r\n        this.startStepping(true);\r\n    }\r\n\r\n    async startStepping(singleStep = false) {\r\n        if (this.isDataLoaded()) {\r\n            this.dataContext.paused = false;\r\n            this.stepForward(singleStep);\r\n        }\r\n    }\r\n\r\n    async stepForward(singleStep = false) {\r\n        if (this.dataContext.hasNextStep()) {\r\n            if (!this.dataContext.paused) {\r\n                this.applyStep();\r\n                this.dataContext.step += this.controls.skipSteps;\r\n                await actionUtil.sleep(this.dataContext.stepDelay);\r\n                if (!singleStep)\r\n                    this.stepForward();\r\n            }\r\n        }\r\n    }\r\n\r\n    generateCompartments() {\r\n        this.sceneManager.generateCompartments(this.controls.showIndices);\r\n    }\r\n\r\n    clearFluxArrows(){\r\n        if(window.confirm(\"Are you sure? This will remove all of the flux arrows.\")){\r\n            this.dataContext.arrows = [];\r\n            this.sceneManager.clearArrows();\r\n        }\r\n    }\r\n\r\n    generateFluxArrows() {\r\n        let data = this.dataContext;\r\n        if (data.arrows.length > 0) {\r\n            alert(\"Flux Arrows already exist\");\r\n            return;\r\n        } else if (!data.fluxData) {\r\n            alert(\"Flux data must be uploaded first before automatic generation can take place.\");\r\n            return;\r\n        } else if (!data.fluxOriginLabels && !data.fluxDestinationLabels) {\r\n            alert(\"File Format does not support flux arrows. The first row must be the origin compartment and \" +\r\n                \"the second row must be the destination compartment.\");\r\n            return;\r\n        } else if (data.compartments.length <= 0) {\r\n            alert(\"Compartments must be created first for this operation to succeed.\");\r\n            return;\r\n        }\r\n        const destinationLabels = data.fluxDestinationLabels;\r\n        const originLabels = data.fluxOriginLabels;\r\n        let min = destinationLabels.length > originLabels.length ? originLabels.length : destinationLabels.length;   \r\n        let digest = new Digest(data);\r\n        for (let i = 0; i < min; i++) {\r\n            if (!destinationLabels[i] || !originLabels[i]){\r\n                digest.appendToMissingDigest(i);\r\n                continue;\r\n            }\r\n            data.arrowPoints[0] = null;\r\n            data.arrowPoints[1] = null;\r\n            let found = false;\r\n            for (let j = 0; j < data.compartments.length; j++) {\r\n                const element = this.transformString(data.compartments[j].labelText);\r\n                if (element === this.transformString(originLabels[i])) {\r\n                    data.arrowPoints[0] = j;\r\n                    if (data.arrowPoints[1] !== null) {\r\n                        found = true;\r\n                        if(!this.sceneManager.addArrow())\r\n                            digest.appendToDuplicateDigest(i);\r\n                        break;\r\n                    }\r\n                    continue;\r\n                }\r\n                if (element === this.transformString(destinationLabels[i])) {\r\n                    data.arrowPoints[1] = j;\r\n                    if (data.arrowPoints[0] !== null) {\r\n                        found = true;\r\n                        if(!this.sceneManager.addArrow())\r\n                            digest.appendToDuplicateDigest(i);\r\n                        break;\r\n                    }\r\n                    continue;\r\n                }\r\n            }\r\n            if(!found)\r\n                digest.appendToUnmappedDigest(i);\r\n        }\r\n        if(digest.hasMissing())\r\n            alert(\"Flux Lines Missing Origin or Destination: \\n\" + digest.enumerateMissingDigest());\r\n        if(digest.hasUnmapped())\r\n            alert(\"Flux Lines Not Generated: \\n\" + digest.enumerateUnmappedDigest())\r\n        if(digest.hasDuplicates())\r\n            alert(\"Flux Lines Listed Multiple Times: \\n\" + digest.enumerateDuplicateDigest())\r\n    }\r\n\r\n    transformString(str){\r\n        return str.split(' ').join('').toLowerCase();\r\n    }\r\n}\r\n\r\nexport default Controller;","export default class ActionUtilities  {\r\n\r\n    sleep(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n      }\r\n\r\n      \r\n}","import {\r\n    isUndefined\r\n} from 'util';\r\n\r\nclass MouseHandler {\r\n\r\n    constructor(canvas, dataContext, sceneManager) {\r\n        this.dataContext = dataContext;\r\n        this.sceneManager = sceneManager;\r\n        this.canvas = canvas;\r\n        this.mouseDown = this.mouseDown.bind(this);\r\n        this.mouseUp = this.mouseUp.bind(this);\r\n        this.mouseMove = this.mouseMove.bind(this);\r\n        this.bindLocalFunctions(this);\r\n        this.setupEventListeners(canvas, this);\r\n\r\n    }\r\n\r\n    bindLocalFunctions(handler){\r\n        handler.getMousePos = handler.getMousePos.bind(handler);\r\n        handler.isDataLoaded = handler.isDataLoaded.bind(handler); \r\n        handler.checkWithinRange = handler.checkWithinRange.bind(handler);\r\n        handler.applyStep = handler.applyStep.bind(handler);\r\n    }\r\n\r\n    mouseDown(evt) {\r\n        this.dataContext.mouseDown = true;\r\n        this.checkWithinRange(this.canvas, evt);\r\n    }\r\n\r\n    mouseUp(evt) {\r\n        let data = this.dataContext;\r\n        if (data.editMode) {\r\n            if (data.arrowMode === 1) {\r\n                data.arrowMode = 2;\r\n                this.checkWithinRange(this.canvas, evt);\r\n                if ((data.arrowPoints[0] != null) && (data.arrowPoints[1] != null)) {\r\n                    this.sceneManager.addArrow();\r\n                } else {\r\n                    alert(\"Dragged line was not between two data points\");\r\n                }\r\n                //Reset arrow points\r\n                data.arrowPoints[0] = null;\r\n                data.arrowPoints[1] = null;\r\n            }\r\n            data.mouseDown = false;\r\n            data.dataPointToMove = -1; //No current selected compartment\r\n        }\r\n        if (data.arrows.length > 0) {\r\n            this.sceneManager.updateArrows(-1);\r\n        }\r\n    }\r\n\r\n    mouseMove(evt) {\r\n        let data = this.dataContext;\r\n        if (data.editMode) {\r\n            if (data.mouseDown) {\r\n                let mousePos = this.getMousePos(this.canvas, evt);\r\n                let newMousePos = this.sceneManager.canvasToThreePos(mousePos);\r\n                if (data.dataPointToMove > -1) {\r\n                    data.compartments[data.dataPointToMove].setPosition(newMousePos.x, newMousePos.y, 0);\r\n                    data.compartments[data.dataPointToMove].moveText(newMousePos.x, newMousePos.y);\r\n                    if (data.showIndices()) {\r\n                        data.compartments[data.dataPointToMove].moveIndexText(newMousePos.x, newMousePos.y + (3 / 4) * (data.compartments[data.dataPointToMove].radius));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setupEventListeners(canvas, handler) {\r\n        canvas.addEventListener(\"mousedown\", handler.mouseDown);\r\n        canvas.addEventListener(\"mouseup\", handler.mouseUp);\r\n        canvas.addEventListener(\"mousemove\", handler.mouseMove);\r\n    }\r\n\r\n    getMousePos(canvas, evt) {\r\n        let rect = canvas.getBoundingClientRect();\r\n        return {\r\n            x: evt.clientX - rect.left,\r\n            y: evt.clientY - rect.top\r\n        };\r\n    }\r\n    \r\n    checkWithinRange(canvas, evt) {\r\n        let mousePos = this.sceneManager.canvasToThreePos(this.getMousePos(canvas, evt));\r\n        let mousePosUncorrected = this.sceneManager.canvasToThreePos(this.getMousePos(canvas, evt), true);\r\n        this.dataContext.updateDisplay(\"\", \"\");\r\n        let data = this.dataContext;\r\n        if (data.editMode) {\r\n            for (var i = 0; i < data.compartments.length; i++) {\r\n                let selected = data.compartments[i].withinCircle(mousePos.x, mousePos.y);\r\n                if (selected && data.arrowMode === 1) {\r\n                    data.compartments[i].shadow.mesh.material.color.set(\"#ffff00\");\r\n                    data.arrowPoints[0] = i\r\n                } else if (selected && data.arrowMode === 2) {\r\n                    data.compartments[i].shadow.mesh.material.color.set(\"#ffff00\");\r\n                    data.arrowPoints[1] = i\r\n                } else if (selected) {\r\n                    if (data.userSelectedDataPoint !== -1) {\r\n                        data.compartments[data.userSelectedDataPoint].shadow.mesh.material.color.set(\"#cccccc\");\r\n                    }\r\n                    data.compartments[i].shadow.mesh.material.color.set(\"#ffff00\");\r\n                    data.dataPointToMove = i;\r\n                    data.updateDisplay(data.compartments[i].dataIndex, data.compartments[i].labelText);\r\n                    data.userSelectedDataPoint = i;\r\n                    break;\r\n                } else if (!isUndefined(data.compartments[i])) {\r\n                    data.compartments[i].shadow.mesh.material.color.set(\"#cccccc\");\r\n                }\r\n            }\r\n        }\r\n        if (data.dataPointToMove === -1 && data.progressBar) { //Click was not on a dataPoint\r\n            data.userSelectedDataPoint = -1; //Deselect previous selection\r\n            if (data.animationData && !this.isDataLoaded()) {\r\n                alert(\"Please import data first\");\r\n                return;\r\n            }\r\n\r\n            //Check if click was on progress bar\r\n            if (data.progressBar.withinBar(mousePosUncorrected.x, mousePosUncorrected.y) && data.animationData) {\r\n                let clickedStep = data.progressBar.getStep(mousePosUncorrected.x);\r\n                let text = data.animationData[clickedStep - 1];\r\n                this.sceneManager.updateProgressBar(clickedStep, text ? text[0] : \"0\");\r\n                data.step = clickedStep - 1;\r\n                this.applyStep();\r\n            }\r\n        }\r\n    }\r\n\r\n    isDataLoaded() {\r\n        let data = this.dataContext;\r\n        if (data && !data.dataLoaded()) {\r\n            alert(\"Please import data first\");\r\n        }\r\n        return data.dataLoaded();\r\n    }\r\n\r\n    applyStep() {\r\n        let text = this.dataContext.step < 0 ? '0' : this.dataContext.animationData[this.dataContext.step][0];\r\n        if (this.dataContext.step >= 0) {\r\n            this.sceneManager.colorPoints();\r\n        }\r\n        this.sceneManager.updateProgressBar(this.dataContext.step + 1, text);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default MouseHandler;","class keyboardHandler {\r\n\r\n    constructor(dataContext, sceneManager) {\r\n        this.dataContext = dataContext;\r\n        this.sceneManager = sceneManager;\r\n        this.keyPress = this.keyPress.bind(this);\r\n        this.setupEventListeners(this);\r\n\r\n    }\r\n\r\n    setupEventListeners(handler) {\r\n        document.addEventListener(\"keydown\", handler.keyPress);\r\n    }\r\n\r\n    moveScene = (up, left) => {\r\n        const moveAmount = 40;\r\n        this.sceneManager.moveCamera(left * moveAmount, up * moveAmount);\r\n        this.sceneManager.update();\r\n    }\r\n\r\n    zoomScene = direction =>{\r\n        const moveAmount = 40;\r\n        this.sceneManager.zoomCamera(direction * moveAmount);\r\n        this.sceneManager.update();\r\n    }\r\n\r\n    keyPress = (event) => {\r\n        let preventDefault = true;\r\n        switch (event.code) {\r\n            case \"ArrowUp\":\r\n                this.moveScene(-1, 0);\r\n                break;\r\n            case \"ArrowLeft\":\r\n                this.moveScene(0, 1);\r\n                break;\r\n            case \"ArrowRight\":\r\n                this.moveScene(0, -1);\r\n                break;\r\n            case \"ArrowDown\":\r\n                this.moveScene(1, 0);\r\n                break;\r\n            case \"Minus\":\r\n            case \"NumpadSubtract\":\r\n                this.zoomScene(-1);\r\n                break;\r\n            case \"Equal\":\r\n            case \"NumpadAdd\":\r\n                this.zoomScene(1);\r\n                break;\r\n            default:\r\n                preventDefault = false; \r\n                break;\r\n        }\r\n        if(preventDefault)\r\n            event.preventDefault();\r\n    }\r\n\r\n}\r\n\r\nexport default keyboardHandler;","import React, {\r\n  Component\r\n} from 'react';\r\nimport threeEntryPoint from '../lib/threejs/threeEntryPoint';\r\n\r\n/* Imported From: https://itnext.io/how-to-use-plain-three-js-in-your-react-apps-417a79d926e0 */\r\nexport default class ThreeContainer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.dataContext = this.props.dataContext;\r\n  }\r\n\r\n  componentDidMount() {\r\n    threeEntryPoint(this.threeRootElement, this.dataContext);\r\n  }\r\n\r\n  render() {\r\n    return ( <div  className='canvas' ref={element => this.threeRootElement = element} > </div>);\r\n  }\r\n}","import SceneManager from './SceneManager';\r\nimport Interface from '../datGui/Interface';\r\nimport Controller from '../datGui/Controller';\r\nimport MouseHandler from '../MouseHandler';\r\nimport KeyboardHandler from '../KeyboardHandler';\r\n\r\nexport default (container, dataContext) => {\r\n    const canvas = createCanvas(document, container);\r\n    ensureDefaults(dataContext, canvas);\r\n    const sceneManager = new SceneManager(canvas, dataContext);\r\n    new MouseHandler(canvas, dataContext, sceneManager);\r\n    new KeyboardHandler(dataContext, sceneManager);\r\n    const controller = new Controller(dataContext, sceneManager);\r\n    const menu = new Interface(controller);\r\n\r\n    dataContext.registerCallback(() => {\r\n        updatePanel(menu, controller, dataContext);\r\n    });\r\n\r\n    render();\r\n\r\n    function createCanvas(document, container) {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = container.scrollWidth;\r\n        canvas.height = container.scrollHeight;\r\n        container.appendChild(canvas);\r\n        return canvas;\r\n    }\r\n\r\n    function render() {\r\n        requestAnimationFrame(render);\r\n        sceneManager.update();\r\n    }\r\n\r\n    function ensureDefaults(dataContext, canvas) {\r\n        dataContext.screenDimensions = {\r\n            width: canvas.width,\r\n            height: canvas.height\r\n        }\r\n        dataContext.origRadius = 40;\r\n        dataContext.paused = true;\r\n        dataContext.stepInc = 1;\r\n        dataContext.color = dataContext.color || [70, 156, 150, 1];\r\n        dataContext.stepDelay = dataContext.stepDelay || 300;\r\n        dataContext.valueMax = dataContext.valueMax || 1;\r\n        dataContext.fluxMax = dataContext.fluxMax || 1;\r\n        dataContext.skipSteps = dataContext.skipSteps || 1;\r\n        dataContext.radius = dataContext.radius || dataContext.origRadius;\r\n        dataContext.halfQuantity = dataContext.valueMax / 2.0;\r\n        dataContext.halfFlux = dataContext.fluxMax / 2.0;\r\n        dataContext.baseColor = [170, 0, 255, 1];\r\n        dataContext.radius = dataContext.radius || dataContext.origRadius;\r\n        dataContext.mouseDown = false;\r\n        dataContext.dataPointToMove = -1;\r\n        dataContext.userSelectedDataPoint = -1;\r\n        dataContext.progressBar = null;\r\n        dataContext.editMode = false;\r\n        dataContext.arrowMode = 0; //0 = Off, 1 = Waiting for 1st point, 2 = Waiting for 2nd point\r\n        dataContext.arrowPoints = []; //After `Add Arrow`, [0] holds FROM data point's index, [1] holds TO data point's index\r\n        dataContext.fontResource = null;\r\n    }\r\n\r\n    function updatePanel(gui, controller, data) {\r\n        data.userSelectedDataPoint = -1;\r\n        data.skipSteps = data.skipSteps || 1;\r\n        data.stepDelay = data.stepDelay || 300;\r\n        data.valueMax = data.valueMax || 1;\r\n        data.fluxMax = data.fluxMax || 1;\r\n        data.color = data.color || [70, 156, 150, 1];\r\n        data.radius = data.radius || data.origRadius;\r\n        data.halfQuantity = data.valueMax / 2.0;\r\n        data.halfFlux = data.fluxMax / 2.0;\r\n        controller.controls.size = data.radius;\r\n        controller.controls.skipSteps = data.skipSteps;\r\n        controller.controls.valueMax = data.valueMax;\r\n        controller.controls.fluxMax = data.fluxMax;\r\n        controller.controls.stepDelay = data.stepDelay;\r\n        controller.controls.color = data.color;\r\n        gui.updateDisplay();\r\n    }\r\n\r\n}","export default class FileUtilities {\r\n\r\n  processXLSXIntoCSV(xlsxFile, onComplete) {\r\n    var reader = new FileReader();\r\n    reader.readAsBinaryString(xlsxFile);\r\n    reader.onload = () => {\r\n      var csvSheetStrings = this.transformXLXSIntoCsvStrings(reader.result);\r\n      onComplete(this.parseSingleCSV(csvSheetStrings[0]));\r\n    }\r\n  }\r\n\r\n  processPlotsData(file, onComplete){\r\n    var reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      let text = reader.result;\r\n      onComplete(JSON.parse(text));\r\n    }\r\n  }\r\n\r\n  transformXLXSIntoCsvStrings(binaryContents) {\r\n    const XLSX = require('xlsx')\r\n    const binaryType = {\r\n      type: 'binary'\r\n    };\r\n    var csvStrings = [];\r\n    var workbook = XLSX.read(binaryContents, binaryType);\r\n    workbook.SheetNames.forEach(name => {\r\n      csvStrings.push(XLSX.utils.sheet_to_csv(workbook.Sheets[name]));\r\n    });\r\n\r\n    return csvStrings;\r\n  }\r\n\r\n  parseSingleCSV(csvString) {\r\n    var numOfRows = 0;\r\n    var numOfColumns = 1;\r\n    var ch, i;\r\n    //Count rows\r\n    for (i = 0; i < csvString.length; i++) {\r\n      ch = csvString.charAt(i);\r\n      if (ch === '\\n') {\r\n        numOfRows++\r\n      }\r\n    }\r\n    //Count columns\r\n    ch = '';\r\n    i = 0;\r\n    while (ch !== '\\n') {\r\n      ch = csvString.charAt(i);\r\n      if (ch === ',') {\r\n        numOfColumns++;\r\n      }\r\n      i++;\r\n    }\r\n    //Create 2D array to hold xlsx data\r\n    this.data = new Array(numOfRows);\r\n    for (i = 0; i < numOfRows; i++) {\r\n      this.data[i] = new Array(numOfColumns);\r\n    }\r\n    //Fill array\r\n    for (i = 0; i < this.data.length; i++) {\r\n      var rows = csvString.split(\"\\n\");\r\n      this.data[i] = rows[i].split(\",\");\r\n    }\r\n    //Remove multiple label rows, starting at 1 (after first label row)\r\n    for (i = 1; i < this.data.length; i++){\r\n      if ((this.data[i][0] === \"t\") || (this.data[i][1] === \"-\")) {\r\n        this.data.splice(i, 1);\r\n      }\r\n    }\r\n    return this.data;\r\n  }\r\n}","import React from 'react';\r\nimport FormGroup from 'react-bootstrap/lib/FormGroup';\r\nimport FormControl from 'react-bootstrap/lib/FormControl';\r\nimport ControlLabel from 'react-bootstrap/lib/ControlLabel';\r\nimport FileUtilities from '../lib/utilities/FileUtilities';\r\nimport NavItem from 'react-bootstrap/lib/NavItem';\r\n\r\nexport default class FileInput extends NavItem {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.title = this.props.title || \"Upload file\";\r\n    this.processUpload = this.processUpload.bind(this);\r\n    this.state = { callback: this.props.onDone, accept: this.props.accept, plot: this.props.isPlot };\r\n  }\r\n\r\n  hasNoFiles(files){\r\n    return files.length === 0;\r\n  }\r\n\r\n  processUpload(e){\r\n    if(this.state.plot)\r\n      this.readPlots(e.target.files, this.state.callback);\r\n    else\r\n      this.readXLSX(e.target.files, this.state.callback);\r\n  }\r\n\r\n  readPlots(files, callback){\r\n    const call = callback;\r\n    let fileUtil = new FileUtilities();\r\n    if(files.length === 0)\r\n      return;\r\n    fileUtil.processPlotsData(files[0], function(dataString){\r\n       call(dataString);\r\n    });\r\n  }\r\n\r\n  readXLSX(files, callback){\r\n    const call = callback;\r\n    let fileUtil = new FileUtilities();\r\n    if(this.hasNoFiles(files))\r\n      return;\r\n    fileUtil.processXLSXIntoCSV(files[0], function(dataString){\r\n       call(dataString);\r\n    });\r\n  }\r\n\r\n  render () {\r\n      return (\r\n        <FormGroup>\r\n         <ControlLabel htmlFor={this.title} style={{ cursor: \"pointer\" }}>\r\n              {this.title}\r\n              <FormControl id={this.title}\r\n                           type=\"file\" \r\n                           accept={this.accept}\r\n                           onChange={this.processUpload} \r\n                           ref={input => {this.fileInput = input;}} \r\n                           style={{ display: \"none\" }} />\r\n          </ControlLabel>\r\n        </FormGroup>\r\n      );\r\n  }\r\n}\r\n        ","export class Model {\r\n    constructor(id = \"untracked\") {\r\n        this.id = id;\r\n        this.compartments = [];\r\n        this.labels = [];\r\n        this.arrows = [];\r\n        this.step = 0;\r\n        this.fluxMax = 1;\r\n        this.valueMax = 1;\r\n        this.stepDelay = 300;\r\n        this.radius = 40;\r\n        this.color = [70, 156, 150, 1];\r\n        this.skipSteps = 1;\r\n    }\r\n}\r\n\r\nexport default Model;","import Model from './Model';\r\nimport localforage from 'localforage';\r\n\r\nconst WEB_STORAGE_KEY = \"plots\";\r\n\r\nexport default class LocalStorage {\r\n\r\n    async addNewModelToLocal(modelName){\r\n        let model = this.newModelTemplate(modelName);\r\n        let models = await this.loadModelsFromDefaultContainer();\r\n        models.push(model);\r\n        await this.saveToStore(WEB_STORAGE_KEY, models, \"Failed to add a new model\").catch(() => {return model}); \r\n        return model;\r\n    }\r\n\r\n    async saveToStore(key, value, failureMsg = \"Failed to write to storage\"){\r\n        try {\r\n            await localforage.setItem(key, \"!\" + JSON.stringify(value));\r\n        } catch (error) {\r\n            alert(failureMsg + String(error));\r\n        }\r\n    }\r\n\r\n    async fetchFromStore(key, failureMsg = \"Failed to fetch from storage\"){\r\n        try {\r\n            let result = await localforage.getItem(key);\r\n            if(!result)\r\n                return null;\r\n            return JSON.parse(result.substring(1));\r\n        } catch (error) {\r\n            alert(failureMsg + \": \" + String(error));            \r\n        }\r\n    }\r\n\r\n    //  item must have name of plot\r\n    //  addition must be Model\r\n    async updateStorage(name, addition){\r\n        let models = await this.loadModelsFromDefaultContainer();\r\n        for (const modelId in models) {\r\n            if (models.hasOwnProperty(modelId) && models[modelId].name === name) {\r\n                const element = models[modelId];\r\n                let id = element.versions.length + 1;\r\n                addition.id = name + id;\r\n                element.versions = [this.newModelVersion(addition)];\r\n            }\r\n        }\r\n        this.saveToStore(WEB_STORAGE_KEY, models, \"Failed to save the models\");\r\n    }\r\n    \r\n    async removeFromStorage(name){\r\n        let models = await this.loadModelsFromDefaultContainer();\r\n        let reducedList = [];\r\n        for (const modelId in models) {\r\n            if (models.hasOwnProperty(modelId)) {\r\n                if(models[modelId].name !== name){\r\n                    reducedList.push(models[modelId]);\r\n                }\r\n            }\r\n        }\r\n        this.saveToStore(WEB_STORAGE_KEY, reducedList, \"Failed to save the models\");\r\n    }\r\n\r\n    async loadFromStorage() {\r\n        let models = await this.loadModelsFromDefaultContainer();\r\n        if(models.length === 0){\r\n            models.push(this.newModelTemplate());\r\n            this.saveToStore(WEB_STORAGE_KEY, models, \"Failed to save the models\");\r\n        }\r\n        return models;\r\n    }\r\n\r\n    async loadModelsFromDefaultContainer(){\r\n        let models = await this.fetchFromStore(WEB_STORAGE_KEY, \"Failed to Access Memory\").catch();\r\n        if (!models || !models.length) {\r\n            models = [];\r\n        }\r\n        return models;\r\n    }\r\n    \r\n    async writeToLocalStorage(dataArray){\r\n        if (!dataArray || !dataArray.length) {\r\n            dataArray = [];\r\n        }\r\n        await this.saveToStore(WEB_STORAGE_KEY, dataArray);\r\n    }\r\n\r\n    newModelTemplate(name = \"Default Storage\") {\r\n       return {\r\n                name: name,\r\n                versions: [this.newModelVersion(new Model(name + \".\" + 1))]\r\n            };\r\n    }\r\n\r\n    newModelVersion(model){\r\n        return {\r\n            plot: model\r\n        }\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport Navbar from 'react-bootstrap/lib/Navbar';\r\nimport FormGroup from 'react-bootstrap/lib/FormGroup';\r\nimport ControlLabel from 'react-bootstrap/lib/ControlLabel';\r\nimport Form from 'react-bootstrap/lib/Form';\r\nimport FileInput from './FileInput';\r\nimport localStorage from '../lib/LocalStorage';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nclass Navigation extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.IController = this.props.IController;\r\n    this.dataContext = this.props.dataContext;\r\n\r\n    this.uploadPoints = this.uploadDataPoints.bind(this);\r\n    this.uploadFlux = this.uploadFluxData.bind(this);\r\n    this.processUpload = this.processUpload.bind(this);\r\n  }\r\n\r\n  async downloadLocalStorage(){\r\n    toast(\"Prepping Download\", { \r\n      position: toast.POSITION.TOP_LEFT\r\n    });\r\n    let data = JSON.stringify(await (new localStorage()).loadModelsFromDefaultContainer());\r\n    var blobData = new Blob([data], {type: 'text/plain'});\r\n    let textFile = window.URL.createObjectURL(blobData);\r\n    let downloadAnchorNode = document.createElement('a');\r\n    downloadAnchorNode.setAttribute(\"href\", textFile);\r\n    downloadAnchorNode.setAttribute(\"download\", \"plots.json\");\r\n    document.body.appendChild(downloadAnchorNode);\r\n    downloadAnchorNode.click();\r\n    downloadAnchorNode.remove();\r\n  }\r\n\r\n  processUpload(e){\r\n    this.readPlots(e.target.files);\r\n  }\r\n\r\n  uploadDataPoints(data){\r\n      toast(\"Upload Point Data Complete\", { \r\n        position: toast.POSITION.TOP_LEFT\r\n      });\r\n      this.dataContext.injectCompartmentList(data);\r\n  }\r\n\r\n  uploadFluxData(data) {\r\n    toast(\"Upload Flux Data Complete\", { \r\n      position: toast.POSITION.TOP_LEFT\r\n    });\r\n    this.dataContext.injectFluxList(data);\r\n  }\r\n\r\n  async  uploadModels(data) {\r\n    if(data && window.confirm(\"Warning! This will replace all of your models with the uploaded models. Continue?\")){\r\n      await (new localStorage()).writeToLocalStorage(data);\r\n      window.location.reload();\r\n      return;\r\n    }\r\n    toast(\"No Models Uploaded\", { \r\n      position: toast.POSITION.TOP_LEFT\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    let preventRedirect = e => {\r\n      e.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <Navbar inverse id='mainNav'>\r\n          <Navbar.Header>\r\n            <Navbar.Brand className='nav-brand'>\r\n              <a href=\"https://github.com/staujd02/time_machine\">Compartmental Visualizer</a>\r\n            </Navbar.Brand>\r\n          </Navbar.Header>\r\n          <Form inline>\r\n            <FileInput className='nav-item' onDone={this.uploadPoints} isPlot={false} accept=\".xlsx\" onClick={preventRedirect} title={\"Upload Compartment Data\"}/>\r\n            <FileInput className='nav-item' onDone={this.uploadFlux} isPlot={false} accept=\".xlsx\" onClick={preventRedirect} title={\"Upload Flux Data\"}/>\r\n            <FileInput className='nav-item' onDone={this.uploadModels} isPlot={true} accept=\".json\" onClick={preventRedirect} title={\"Upload Models\"}/>\r\n            <FormGroup className='nav-item'>\r\n              <ControlLabel htmlFor=\"Export Models\" style={{ cursor: \"pointer\" }} onClick={this.downloadLocalStorage}>\r\n                    {\"Export Models\"}\r\n                    <ToastContainer autoClose={1500} />\r\n              </ControlLabel>\r\n            </FormGroup>\r\n          </Form>\r\n        </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;","import React, { Component } from 'react';\r\nexport default class SavedPlot extends Component {\r\n\r\n  constructor(param){\r\n    super(param);\r\n    this.dataCapsule = this.props.dataCapsule;\r\n    this.name = this.dataCapsule.name;\r\n    this.className = this.props.className;\r\n  }\r\n\r\n  render() {\r\n    return ( \r\n        <div className={this.className}>{this.name}</div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport SavedPlot from './SavedPlot';\r\nimport Button from 'react-bootstrap/lib/Button';\r\nimport LocalStorage from '../lib/LocalStorage';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default class StorageList extends Component {\r\n\r\n  constructor(param){\r\n    super(param);\r\n    const parent = this;\r\n    this.entries = [];\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.addToLocal = this.addToLocal.bind(this);\r\n    this.removeFromLocal = this.removeFromLocal.bind(this);\r\n    this.loadSaves = this.loadSaves.bind(this);\r\n    this.createButtonEntry = this.createButtonEntry.bind(this);\r\n    this.createEntryName = this.createEntryName.bind(this);\r\n    this.createGrid = this.createGrid.bind(this);\r\n    this.activeModelName = this.activeModelName.bind(this);\r\n    this.state = {dataContext: parent.props.dataContext};\r\n    this.loadSaves();\r\n  }\r\n\r\n  isActive(capsule){\r\n    return this.state.dataContext.currentPlot().id === capsule.versions[capsule.versions.length - 1].plot.id;\r\n  }\r\n\r\n  applyName(capsule){\r\n    return this.isActive(capsule) ? \"Save\" : \"Load\";\r\n  }\r\n\r\n  createButtonEntry(save){\r\n      return <Button key={this.entries.length} className=\"grid-item\" onClick={() => this.handleClick(save)}>{this.applyName(save)}</Button>;\r\n  }\r\n\r\n  createEntryName(save){\r\n      return <SavedPlot key={this.entries.length} className=\"grid-item\" dataCapsule={save}/>;\r\n  }\r\n\r\n  activeModelName(){\r\n    let model = \"\";\r\n    if(this.state.models){\r\n    this.state.models.forEach(s => {\r\n      if(this.isActive(s)){\r\n          model = s.name;\r\n      }\r\n    });\r\n    }\r\n    return \" \" + model;\r\n  }\r\n\r\n  async addToLocal(){\r\n    let resp = this.solictStorageName('you would like to add.');\r\n    if(!!resp){\r\n      await (new LocalStorage()).addNewModelToLocal(resp);\r\n      await this.loadSaves();\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n  \r\n  async removeFromLocal(){\r\n    let resp = this.solictStorageName('you would like to permanently delete.');\r\n    if(!!resp){\r\n      await (new LocalStorage()).removeFromStorage(resp);\r\n      await this.loadSaves();\r\n      this.forceUpdate();\r\n      toast.success(\"Model Removed\");\r\n    }\r\n  }\r\n\r\n  solictStorageName(extension) {\r\n    return window.prompt('Please enter the name of Model ' + extension);\r\n  }\r\n\r\n  async handleClick(s) {\r\n    if(this.isActive(s)){\r\n      let plot = this.state.dataContext.currentPlot();\r\n      await (new LocalStorage()).updateStorage(s.name, plot);\r\n      toast.success(\"Model Saved\");\r\n    } else {\r\n      await this.loadSaves();\r\n      this.state.dataContext.currentPlot(s);\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  async loadSaves(){\r\n    this.entries = [];\r\n    let models = await (new LocalStorage()).loadFromStorage(this.ThreeController);\r\n    let dataContext = this.state.dataContext;\r\n    this.setState({\r\n        dataContext: dataContext,\r\n        models: models\r\n    });\r\n  }\r\n\r\n  createGrid(){\r\n    if(this.state.models){\r\n      this.entries = [];\r\n      this.state.models.forEach(s => {\r\n        this.entries.push(this.createEntryName(s));\r\n        this.entries.push(this.createButtonEntry(s));\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    this.createGrid();\r\n\r\n    return ( \r\n        <div>\r\n          <h4 className=\"model-list-banner\">Models</h4>\r\n          <h5 className=\"active-banner\"><span>Loaded Model: </span>{this.activeModelName()}</h5>\r\n          <div className=\"grid-container\">\r\n            {this.entries}\r\n          </div>\r\n          <div className=\"grid-container\">\r\n            <Button id=\"new-plot\" onClick={this.addToLocal}>New Model</Button>\r\n            <Button id=\"delete-plot\" onClick={this.removeFromLocal}>Delete Model</Button>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}","class DataContext {\r\n\r\n    constructor(model) {\r\n        this.plot_id = model.id;\r\n        this.callbacks = [];\r\n        this.labelMode = false;\r\n        this.onLoad = null;\r\n        this.animationData = null;\r\n        this.fluxData = null;\r\n\r\n        // This is for updating legacy saves\r\n        if(model.dataPoints){\r\n            model.compartments = model.dataPoints;\r\n            model.dataPoints = undefined;\r\n        }\r\n\r\n        Object.assign(this, model);\r\n\r\n        this.callObservers = this.callObservers.bind(this);\r\n        this.registerCallback = this.registerCallback.bind(this);\r\n        this.currentPlot = this.currentPlot.bind(this);\r\n        this.currentPlotDetails = this.currentPlotDetails.bind(this);\r\n        this.loadPlot = this.loadPlot.bind(this);\r\n        this.injectCompartmentList = this.loadCompartmentData.bind(this);\r\n        this.injectFluxList = this.loadFluxData.bind(this);\r\n        this.dataLoaded = this.dataLoaded.bind(this);\r\n        this.hasNextStep = this.hasNextStep.bind(this);\r\n    }\r\n\r\n    dataLoaded() {\r\n        return this.animationData != null;\r\n    }\r\n\r\n    hasNextStep() {\r\n        return this.dataLoaded() && this.step < this.animationData.length;\r\n    }\r\n\r\n    registerCallback(call) {\r\n        this.callbacks.push(call);\r\n    }\r\n\r\n    currentPlot(plot = null) {\r\n        if (plot) {\r\n            return this.loadPlot(plot.versions[plot.versions.length - 1].plot);\r\n        } else {\r\n            return this.currentPlotDetails();\r\n        }\r\n    }\r\n\r\n    currentPlotDetails() {\r\n        if(this.dataPoints){\r\n            this.compartments = this.dataPoints;\r\n        }\r\n        return {\r\n            id: this.plot_id,\r\n            compartments: this.compartments,\r\n            labels: this.labels,\r\n            arrows: this.arrows,\r\n            step: this.step,\r\n            valueMax: this.valueMax,\r\n            fluxMax: this.fluxMax,\r\n            stepDelay: this.stepDelay,\r\n            color: this.color,\r\n            skipSteps: this.skipSteps,\r\n            radius: this.radius\r\n        };\r\n    }\r\n\r\n    callObservers() {\r\n        this.callbacks.forEach(call => {\r\n            call();\r\n        });\r\n    }\r\n\r\n    loadFluxData(xlsxData) {\r\n        if (xlsxData.length > 1 && isNaN(xlsxData[1][1])) {\r\n            this.fluxOriginLabels = xlsxData[0];\r\n            this.fluxDestinationLabels = xlsxData[1];\r\n            this.fluxOriginLabels.splice(0, 1);\r\n            this.fluxDestinationLabels.splice(0, 1);\r\n            xlsxData.splice(0, 1); //Remove extra label column\r\n        }\r\n        xlsxData.splice(0, 1); //Remove label column\r\n        this.fluxData = xlsxData;\r\n        if (this.onLoad && typeof this.onLoad === \"function\")\r\n            this.onLoad();\r\n    }\r\n\r\n    loadPlot(plot) {\r\n        if(plot.dataPoints){\r\n            plot.compartments = plot.dataPoints;\r\n        }\r\n        Object.assign(this, plot);\r\n        this.plot_id = plot.id;\r\n        this.callObservers();\r\n        return plot;\r\n    }\r\n\r\n    loadCompartmentData(xlsxData) {\r\n        this.labels = xlsxData[0];\r\n        xlsxData.splice(0, 1); //Remove label column\r\n        this.animationData = xlsxData;\r\n        if (this.onLoad && typeof this.onLoad === \"function\")\r\n            this.onLoad();\r\n    }\r\n}\r\n\r\nexport default DataContext;","import React, { Component } from 'react';\r\nimport './css/App.css';\r\nimport ThreeContainer from './components/ThreeContainer';\r\nimport Navigation from './components/Navigation';\r\nimport StorageList from './components/StorageList.js';\r\nimport LocalStorage from './lib/LocalStorage.js';\r\nimport Grid from 'react-bootstrap/lib/Grid';\r\nimport Row from 'react-bootstrap/lib/Row';\r\nimport Col from 'react-bootstrap/lib/Col';\r\nimport DataContext from './lib/DataContext';\r\n\r\nimport Logo from './assets/pfw-white.png';\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.ThreeController = {\r\n      resetDataAnimation: function () { },\r\n      onLoad: function () { },\r\n      onFluxLoad: function () { }\r\n    };\r\n    this.fetchSaves()\r\n  }\r\n\r\n  async fetchSaves() {\r\n    let saves = await ((new LocalStorage()).loadFromStorage(this.ThreeController));\r\n    let currentPlot = saves[0].versions[saves[0].versions.length - 1].plot;\r\n    let currentContext = new DataContext(currentPlot);\r\n    this.setState({\r\n      saves: saves,\r\n      currentPlot: currentPlot,\r\n      currentContext: currentContext\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (!this.state || !this.state.currentContext)\r\n      return (<div>Loading From Storage</div>);\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <Grid fluid={true} className='fill'>\r\n          <Row>\r\n            <Navigation dataContext={this.state.currentContext} IController={this.ThreeController} />\r\n          </Row>\r\n          <Row className='fill'>\r\n            <Col sm={2} md={2} className='sidebar'>\r\n              <Row sm={2} md={2}>\r\n                <div className='dat-style' id=\"datGuiAnchor\"></div>\r\n              </Row>\r\n              <Row sm={2} md={2}>\r\n                <StorageList dataContext={this.state.currentContext} saves={this.saves}></StorageList>\r\n              </Row>\r\n              <div className=\"wrapper\">\r\n                <img alt=\"Purdue logo\" className=\"logo\" src={Logo}></img>\r\n              </div>\r\n            </Col>\r\n            <Col sm={10} md={10} className='threeContainer'>\r\n              <ThreeContainer dataContext={this.state.currentContext} IController={this.ThreeController} />\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport './css/bootstrap.min.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}