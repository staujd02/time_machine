{"version":3,"sources":["lib/threejs/Compartment.js","lib/threejs/ProgressBar.js","lib/threejs/FluxArrow.js","lib/threejs/SceneManager.js","lib/datGui/Interface.js","lib/datGui/Controller.js","lib/utilities/ActionUtilities.js","lib/MouseHandler.js","lib/KeyboardHandler.js","components/ThreeContainer.js","lib/threejs/threeEntryPoint.js","lib/utilities/FileUtilities.js","components/FileInput.js","lib/Model.js","lib/LocalStorage.js","components/Navigation.js","components/SavedPlot.js","components/StorageList.js","lib/DataContext.js","App.js","registerServiceWorker.js","index.js"],"names":["tinyColor","require","origRadius","Compartment","index","previousState","arguments","length","undefined","Object","classCallCheck","this","isState","dataIndex","labelText","baseColor","radius","shadowMargin","shadowPushBack","textPullForward","shadow","geometry","THREE","mesh","material","color","object","position","set","scale","adjustScale","x","y","z","withinCircle","bind","appendText","moveText","moveIndexText","setPosition","changeTextSize","changeIndexTextSize","transformColor","changeColor","lightenColor","darkenColor","showIndex","update","pos","Math","sqrt","newRadius","newScale","font","text","xpos","ypos","size","height","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelSegments","textMesh","rotation","PI","newX","newY","box","setFromObject","max","min","indexTextMesh","colorObject","r","g","b","toHexString","toString","percent","lighten","darken","barLength","ProgressBar","fontResource","yPos","stepLength","bar","progress","start","stop","progressLength","updateProgress","createText","createTitle","withinBar","getStep","setSteps","getBar","step","timeInfo","cX","cY","titleTextMesh","clickedPos","round","numOfSteps","initialCompartmentRadius","FluxArrow","arrowInfo","legacySaveIndex","arrowLength","dataPointRadius","arrowWidth","dir","calculateDir","normalize","calculateLength","calculatePos","updatePos","setLength","delete","distance","point2","point1","adjust","shiftAmount","shift","newColor","to","from","setDirection","len","scene","remove","origLength","SceneManager","canvas","dataContext","screenDimensions","width","origin","loadFont","fontLoadingComplete","buildScene","renderer","buildRender","camera","buildCamera","registerCallbacks","reloadScene","reloadCompartments","reloadArrows","buildProgressBar","changeAllRadius","updateArrows","addFluxArrow","removeFromScene","addCompartment","addArrow","renameCompartment","updateCompartmentIndexText","generateCompartments","showCompartmentIndexText","hideCompartmentIndexText","showFluxIndexText","hideFluxIndexText","updateProgressBar","colorPoints","moveCamera","canvasToThreePos","moveProgressBar","progressBar","add","compartment","arrow","newName","load","background","antialias","alpha","DPR","window","devicePixelRatio","setPixelRatio","setSize","gammaInput","gammaOutput","_ref","lookAt","c","onFluxLoad","onLoad","animationData","registerCallback","clearScene","traverse","child","push","i","_this","hydratedArrows","legacyArrowIndex","arrows","forEach","oldArrow","restoreArrow","mousePos","asIs","rect","getBoundingClientRect","_this2","hydratedCompartments","compartments","oldPoint","point","restoreCompartment","savedData","legacyIndex","geometries","data","pointIndex1","arrowPoints","pointIndex2","arrowMode","deletedDataPoint","index1","index2","splice","showIndices","changePercent","halfQuantity","fluxData","halfFlux","alert","spaceBetween","eColumn","compartmentIndex","xPos","label","labels","render","Interface","controller","gui","dat","autoPlace","createHTMLElement","createMenu","updateDisplay","document","getElementById","appendChild","domElement","id","controls","name","buildAnimationFolder","addFolder","buildEditingFolder","buildInterpretationFolder","folder","onChange","stepDelayCallback","skipStepsCallback","editFolder","editModeCallback","labelModeCallback","showIndicesCallback","listen","onFinishChange","compIndexCallback","labelCallback","sizeCallback","valueMaxCallback","fluxMaxCallback","addColor","colorCallback","actionUtil","ms","Promise","resolve","setTimeout","Controller","sceneManager","createControls","callbacks","createCallbacks","cIndex","compIndex","bindControllerFunctions","valueMax","fluxMax","stepDelay","skipSteps","generateFluxArrows","seekHelp","singleStep","startStepping","pauseAnimation","resetAnimation","reset","addPoint","deletePoint","editMode","labelMode","isDataLoaded","applyStep","stepForward","deleteDataPoint","newValue","userSelectedDataPoint","show","revealIndices","dataLoaded","deletedPoint","paused","prompt","open","location","href","hasNextStep","sleep","fluxOriginLabels","fluxDestinationLabels","j","element","toLowerCase","trim","MouseHandler","mouseDown","mouseUp","mouseMove","bindLocalFunctions","setupEventListeners","handler","getMousePos","checkWithinRange","evt","dataPointToMove","newMousePos","addEventListener","clientX","left","clientY","top","mousePosUncorrected","selected","isUndefined","clickedStep","keyboardHandler","keyPress","moveScene","up","event","preventDefault","code","ThreeContainer","props","possibleConstructorReturn","getPrototypeOf","call","container","createElement","scrollWidth","scrollHeight","createCanvas","stepInc","ensureDefaults","KeyboardHandler","menu","updatePanel","requestAnimationFrame","threeEntryPoint","threeRootElement","react_default","a","className","ref","Component","FileUtilities","xlsxFile","onComplete","reader","FileReader","readAsBinaryString","onload","csvSheetStrings","transformXLXSIntoCsvStrings","result","parseSingleCSV","file","readAsText","JSON","parse","binaryContents","XLSX","csvStrings","workbook","read","type","SheetNames","utils","sheet_to_csv","Sheets","csvString","ch","numOfRows","numOfColumns","charAt","Array","rows","split","FileInput","title","processUpload","assertThisInitialized","state","callback","onDone","accept","plot","isPlot","files","e","readPlots","target","readXLSX","fileUtil","processPlotsData","dataString","hasNoFiles","processXLSXIntoCSV","FormGroup_default","ControlLabel_default","htmlFor","style","cursor","FormControl_default","input","fileInput","display","NavItem","Model","LocalStorage","modelName","model","newModelTemplate","loadModelsFromDefaultContainer","models","saveToStore","catch","key","value","failureMsg","localforage","setItem","stringify","String","_context2","t0","getItem","substring","_context3","addition","modelId","hasOwnProperty","versions","newModelVersion","reducedList","fetchFromStore","dataArray","Navigation","IController","uploadPoints","uploadDataPoints","uploadFlux","uploadFluxData","toast","POSITION","TOP_LEFT","localStorage","blobData","Blob","textFile","URL","createObjectURL","downloadAnchorNode","setAttribute","body","click","injectCompartmentList","injectFluxList","confirm","writeToLocalStorage","reload","preventRedirect","Navbar_default","inverse","Header","Brand","Form_default","inline","FileInput_FileInput","onClick","uploadModels","downloadLocalStorage","lib","autoClose","SavedPlot","param","dataCapsule","StorageList","parent","entries","handleClick","addToLocal","removeFromLocal","loadSaves","createButtonEntry","createEntryName","createGrid","activeModelName","capsule","currentPlot","isActive","save","Button_default","applyName","SavedPlot_SavedPlot","_this3","s","resp","solictStorageName","addNewModelToLocal","forceUpdate","removeFromStorage","success","extension","updateStorage","loadFromStorage","ThreeController","setState","_this4","DataContext","plot_id","dataPoints","assign","callObservers","currentPlotDetails","loadPlot","loadCompartmentData","loadFluxData","xlsxData","isNaN","App","resetDataAnimation","fetchSaves","saves","console","log","currentContext","Grid_default","fluid","Row_default","components_Navigation","Col_default","sm","md","StorageList_StorageList","Image_default","src","ThreeContainer_ThreeContainer","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","error","ReactDOM","src_App","process","concat","fetch","response","status","headers","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ffdbdba2.chunk.js","sourcesContent":["/* Imported From: https://itnext.io/how-to-use-plain-three-js-in-your-react-apps-417a79d926e0 */\r\nimport * as THREE from 'three'\r\n\r\nconst tinyColor = require('tinycolor2');\r\nconst origRadius = 40;\r\n\r\nclass Compartment {\r\n\r\n    constructor(index, previousState = null) {\r\n\r\n        let isState = !!previousState;\r\n\r\n        this.dataIndex = index; // Holds the index the compartment will retrieve data from\r\n        this.labelText = \"\";\r\n        this.baseColor = isState ? previousState.baseColor : \"#aa00ff\";\r\n        this.radius = origRadius;\r\n        this.shadowMargin = 7;\r\n        this.shadowMargin = isState ? previousState.shadowMargin : 7;\r\n        this.shadowPushBack = 1;\r\n        this.textPullForward = -5;\r\n\r\n        this.shadow = {};\r\n        this.shadow.geometry = new THREE.CircleGeometry(this.radius + this.shadowMargin, 32);\r\n        this.shadow.mesh = new THREE.Mesh(this.shadow.geometry);\r\n        this.shadow.mesh.material =\r\n            new THREE.MeshBasicMaterial({\r\n                color: \"#cccccc\"\r\n            });\r\n\r\n        this.object = {};\r\n        this.object.geometry = new THREE.CircleGeometry(this.radius, 32);\r\n        this.object.mesh = new THREE.Mesh(this.object.geometry);\r\n        this.object.mesh.material =\r\n            new THREE.MeshBasicMaterial({\r\n                color: this.baseColor\r\n            });\r\n\r\n        this.object.mesh.position.set(0, 0, 0);\r\n        this.shadow.mesh.position.set(0, 0, this.shadowPushBack);\r\n\r\n        this.position = this.object.mesh.position;\r\n        this.shadow.position = this.shadow.mesh.position;\r\n\r\n        this.object.scale = this.object.mesh.scale;\r\n        this.shadow.scale = this.shadow.mesh.scale;\r\n\r\n\r\n        if (isState) {\r\n            this.adjustScale(previousState.radius);\r\n            this.object.mesh.position.set(previousState.position.x, previousState.position.y, previousState.position.z);\r\n            this.shadow.mesh.position.set(previousState.shadow.position.x, previousState.shadow.position.y, previousState.shadow.position.z);\r\n        }\r\n\r\n        this.withinCircle = this.withinCircle.bind(this);\r\n        this.adjustScale = this.adjustScale.bind(this);\r\n        this.appendText = this.appendText.bind(this);\r\n        this.moveText = this.moveText.bind(this);\r\n        this.moveIndexText = this.moveIndexText.bind(this);\r\n        this.setPosition = this.setPosition.bind(this);\r\n        this.changeTextSize = this.changeTextSize.bind(this);\r\n        this.changeIndexTextSize = this.changeIndexTextSize.bind(this);\r\n        this.transformColor = this.transformColor.bind(this);\r\n        this.changeColor = this.changeColor.bind(this);\r\n        this.lightenColor = this.lightenColor.bind(this);\r\n        this.darkenColor = this.darkenColor.bind(this);\r\n        this.showIndex = this.showIndex.bind(this);\r\n        this.update = this.update.bind(this);\r\n    }\r\n\r\n    update() {\r\n\r\n    }\r\n\r\n    withinCircle(x, y) {\r\n        let pos = this.object.mesh.position;\r\n        let distance = Math.sqrt((x - pos.x) * (x - pos.x) + (y - pos.y) * (y - pos.y));\r\n        let within = !(distance > this.radius);\r\n        return within;\r\n    }\r\n\r\n    adjustScale(newRadius) {\r\n        this.radius = newRadius;\r\n        let newScale = this.radius / origRadius;\r\n        this.object.scale.set(newScale, newScale, newScale);\r\n        this.shadow.scale.set(newScale, newScale, newScale);\r\n    }\r\n\r\n    appendText(font, text, xpos, ypos) {\r\n        this.labelText = text;\r\n        let geometry = new THREE.TextGeometry(text, {\r\n            font: font,\r\n            size: 13,\r\n            height: 5,\r\n            curveSegments: 12,\r\n            bevelEnabled: false,\r\n            bevelThickness: 1,\r\n            bevelSize: 2,\r\n            bevelSegments: 5\r\n        });\r\n        let material = new THREE.MeshBasicMaterial({\r\n            color: 0x000000\r\n        });\r\n        this.textMesh = new THREE.Mesh(geometry, material);\r\n        this.moveText(xpos, ypos);\r\n        this.textMesh.rotation.set(0, 0, Math.PI);\r\n        this.changeTextSize(this.radius);\r\n    }\r\n\r\n    moveText(newX, newY) {\r\n        var box = new THREE.Box3().setFromObject(this.textMesh); // To center text horizontally\r\n        this.textMesh.position.set(newX + .5 * (box.max.x - box.min.x), newY, this.textPullForward);\r\n    }\r\n\r\n    moveIndexText(newX, newY) {\r\n        var box = new THREE.Box3().setFromObject(this.indexTextMesh); // To center text horizontally\r\n        this.indexTextMesh.position.set(newX + .5 * (box.max.x - box.min.x), newY, this.textPullForward);\r\n    }\r\n\r\n    setPosition(x, y, z) {\r\n        this.position.set(x, y, z);\r\n        this.shadow.position.set(x, y, this.shadowPushBack);\r\n    }\r\n\r\n    changeTextSize(newScale) {\r\n        let scale = newScale / origRadius;\r\n        this.textMesh.scale.set(scale, scale, scale + this.textPullForward);\r\n    }\r\n\r\n    changeIndexTextSize(newScale) {\r\n        let scale = newScale / origRadius;\r\n        this.indexTextMesh.scale.set(scale, scale, scale + this.textPullForward);\r\n    }\r\n\r\n    transformColor(colorObject) {\r\n        return tinyColor({\r\n            r: colorObject[0],\r\n            g: colorObject[1],\r\n            b: colorObject[2]\r\n        }).toHexString();\r\n    }\r\n\r\n    changeColor(colorObject) {\r\n        this.baseColor = this.transformColor(colorObject);\r\n        this.object.mesh.material.color.set(this.baseColor.toString());\r\n    }\r\n\r\n    lightenColor(percent) {\r\n        this.object.mesh.material.color.set(tinyColor(this.baseColor).lighten(percent).toString());\r\n    }\r\n\r\n    darkenColor(percent) {\r\n        this.object.mesh.material.color.set(tinyColor(this.baseColor).darken(percent).toString());\r\n    }\r\n\r\n    showIndex(font) {\r\n        let geometry = new THREE.TextGeometry(this.dataIndex.toString(), {\r\n            font: font,\r\n            size: 10,\r\n            height: 5,\r\n            curveSegments: 12,\r\n            bevelEnabled: false,\r\n            bevelThickness: 1,\r\n            bevelSize: 2,\r\n            bevelSegments: 5\r\n        });\r\n        let material = new THREE.MeshBasicMaterial({\r\n            color: 0x808080\r\n        });\r\n        this.indexTextMesh = new THREE.Mesh(geometry, material);\r\n        this.moveIndexText(this.position.x, this.position.y + (3 / 4) * (this.radius));\r\n        this.indexTextMesh.rotation.set(0, 0, Math.PI);\r\n        this.changeIndexTextSize(this.radius);\r\n    }\r\n}\r\n\r\nexport default Compartment;","import * as THREE from 'three'\r\n        \r\nconst barLength = 500;\r\n\r\nclass ProgressBar {\r\n\r\n    constructor(fontResource, yPos) {\r\n        this.fontResource = fontResource;\r\n        this.stepLength = 0;\r\n        this.yPos = yPos;\r\n\r\n        this.bar = {};\r\n        this.progress = {};\r\n        this.start = {};\r\n        this.stop = {};\r\n\r\n        this.bar.geometry = new THREE.BoxGeometry(barLength, 20, 1);\r\n        this.bar.mesh = new THREE.Mesh(this.bar.geometry);\r\n        this.bar.mesh.material = new THREE.MeshBasicMaterial({\r\n            color: \"#afafaf\"\r\n        });\r\n\r\n        this.progressLength = 0;\r\n        this.progress.geometry = new THREE.BoxGeometry(this.progressLength, 20, 1);\r\n        this.progress.mesh = new THREE.Mesh(this.progress.geometry);\r\n        this.progress.mesh.material = new THREE.MeshBasicMaterial({\r\n            color: \"#666666\"\r\n        });\r\n        this.bar.mesh.position.set(0, this.yPos, 0);\r\n        this.progress.mesh.position.set((barLength - this.progressLength) / 2, this.yPos, 0); //TODO: Make height to bottom of screen + padding\r\n\r\n        this.updateProgress = this.updateProgress.bind(this);\r\n        this.createText = this.createText.bind(this);\r\n        this.createTitle = this.createTitle.bind(this);\r\n        this.moveText = this.moveText.bind(this);\r\n        this.withinBar = this.withinBar.bind(this);\r\n        this.getStep = this.getStep.bind(this);\r\n        this.setSteps = this.setSteps.bind(this);\r\n        this.getBar = this.getBar.bind(this);\r\n    }\r\n\r\n    updateProgress(step, timeInfo, cX, cY) {\r\n        if (this.stepLength * step <= barLength) {\r\n            this.progressLength = this.stepLength * step;\r\n            this.progress.mesh.geometry = new THREE.BoxGeometry(this.progressLength, 20, 1);\r\n            // this.progress.mesh.position.set(((barLength - this.progressLength) / 2) - cX, this.yPos + cY, 0); //TODO: Make height to bottom of screen + padding\r\n            this.progress.mesh.position.set(((barLength - this.progressLength) / 2) + cX, this.yPos + cY, 0); //TODO: Make height to bottom of screen + padding\r\n            this.createText(timeInfo, cX, cY);\r\n        }\r\n    }\r\n\r\n    createText(text, cX, cY) {\r\n        var geometry = new THREE.TextGeometry(text, {\r\n            font: this.fontResource,\r\n            size: 10,\r\n            height: 5,\r\n            curveSegments: 12,\r\n            bevelEnabled: false,\r\n            bevelThickness: 1,\r\n            bevelSize: 2,\r\n            bevelSegments: 5\r\n        });\r\n        let material = new THREE.MeshBasicMaterial({\r\n            color: 0x000000\r\n        });\r\n        this.textMesh = new THREE.Mesh(geometry, material);\r\n        this.textMesh.position.set(250 - this.progressLength + cX, this.yPos + 25 + cY, 0);\r\n        this.textMesh.rotation.set(0, 0, Math.PI);\r\n    }\r\n\r\n    createTitle() {\r\n        var geometry = new THREE.TextGeometry(\"Progress Bar:\", {\r\n            font: this.fontResource,\r\n            size: 10,\r\n            height: 5,\r\n            curveSegments: 12,\r\n            bevelEnabled: false,\r\n            bevelThickness: 1,\r\n            bevelSize: 2,\r\n            bevelSegments: 5\r\n        });\r\n        let material = new THREE.MeshBasicMaterial({\r\n            color: 0x000000\r\n        });\r\n        this.titleTextMesh = new THREE.Mesh(geometry, material);\r\n        this.titleTextMesh.position.set(350, this.yPos + 7, 0);\r\n        this.titleTextMesh.rotation.set(0, 0, Math.PI);\r\n    }\r\n\r\n    moveText(newX, newY) {\r\n        var box = new THREE.Box3().setFromObject(this.textMesh); //To center text horizontally\r\n        this.textMesh.position.set(newX + .5 * (box.max.x - box.min.x), newY, 0);\r\n    }\r\n\r\n    withinBar(x, y) {\r\n        var withinHeight = (y < this.yPos + 10) && (y > this.yPos - 10);\r\n        var withinWidth = (x < 250) && (x > -250);\r\n        return withinHeight && withinWidth;\r\n    }\r\n\r\n    getStep(x) {\r\n        var clickedPos = 250 - x;\r\n        var step = Math.round(clickedPos / this.stepLength);\r\n        return step;\r\n    }\r\n\r\n    setSteps(numOfSteps) {\r\n        this.stepLength = barLength / numOfSteps;\r\n    }\r\n\r\n    getBar() {\r\n        return this.progress.mesh\r\n    }\r\n}\r\n\r\nexport default ProgressBar;","import * as THREE from 'three'\r\n        \r\nconst initialCompartmentRadius = 40;\r\nconst tinyColor = require('tinycolor2');\r\n\r\nclass FluxArrow {\r\n\r\n    constructor(arrowInfo, legacySaveIndex) {\r\n\r\n        this.arrowInfo = arrowInfo;\r\n\r\n        // Keep a defined value or fallback to legacy index\r\n        this.arrowInfo.dataIndex = (arrowInfo.dataIndex !== undefined) ? arrowInfo.dataIndex : legacySaveIndex;\r\n\r\n        this.arrowLength = 22 * (arrowInfo.dataPointRadius / initialCompartmentRadius);\r\n        this.arrowWidth = 15 * (arrowInfo.dataPointRadius / initialCompartmentRadius); //Keep relative proportions linked with compartments of radius 40 \r\n        this.textPullForward = -5;\r\n        this.baseColor = \"#222222\"\r\n        this.object = {};\r\n        \r\n        this.dir = this.calculateDir();\r\n        this.dir.normalize();\r\n        this.length = this.calculateLength();\r\n        this.position = this.calculatePos();\r\n\r\n        this.calculateLength = this.calculateLength.bind(this);\r\n        this.calculateDir = this.calculateDir.bind(this);\r\n        this.calculatePos = this.calculatePos.bind(this);\r\n        this.lightenColor = this.lightenColor.bind(this);\r\n        this.darkenColor = this.darkenColor.bind(this);\r\n        this.updatePos = this.updatePos.bind(this);\r\n        this.setLength = this.setLength.bind(this);\r\n        this.delete = this.delete.bind(this);\r\n        this.adjustScale = this.adjustScale.bind(this);\r\n        this.showIndex = this.showIndex.bind(this);\r\n        this.changeIndexTextSize = this.changeIndexTextSize.bind(this);\r\n        this.moveIndexText = this.moveIndexText.bind(this);\r\n\r\n        this.object = new THREE.ArrowHelper(this.dir, this.position, this.length, this.baseColor, this.arrowLength, this.arrowWidth);\r\n    }\r\n\r\n    calculateLength() {\r\n        //Length from center to center\r\n        let distance = Math.sqrt((this.arrowInfo.point2.x - this.arrowInfo.point1.x) * (this.arrowInfo.point2.x - this.arrowInfo.point1.x) +\r\n            (this.arrowInfo.point2.y - this.arrowInfo.point1.y) * (this.arrowInfo.point2.y - this.arrowInfo.point1.y));\r\n        //Moves each end to edge of circle plus 1/2 of radius more\r\n        distance = distance - 3 * (this.arrowInfo.dataPointRadius)\r\n        return distance;\r\n    }\r\n\r\n    calculateDir() {\r\n        return (new THREE.Vector3(this.arrowInfo.point2.x - this.arrowInfo.point1.x, this.arrowInfo.point2.y - this.arrowInfo.point1.y, 0));\r\n    }\r\n\r\n    calculatePos() {\r\n        let adjust = new THREE.Vector3(1.5 * this.arrowInfo.dataPointRadius * this.dir.x, 1.5 * this.arrowInfo.dataPointRadius * this.dir.y, 0) //1.5 * 40 = To edge + 50% of circle radius\r\n        let shiftAmount = this.arrowInfo.dataPointRadius / 3.5;\r\n        if (this.arrowInfo.shift) {\r\n            let diff = (this.dir.x - this.dir.y);\r\n            if (diff >= 0) {\r\n                if (this.dir.y <= -.5) {\r\n                    adjust.x += shiftAmount;\r\n                } else {\r\n                    adjust.y += shiftAmount;\r\n                }\r\n            } else {\r\n                if (this.dir.y >= .5) {\r\n                    adjust.x += shiftAmount;\r\n                } else {\r\n                    adjust.y += shiftAmount;\r\n                }\r\n            }\r\n        }\r\n        return new THREE.Vector3(this.arrowInfo.point1.x + adjust.x, this.arrowInfo.point1.y + adjust.y, 0)\r\n    }\r\n\r\n    lightenColor(percent) {\r\n        let newColor = tinyColor(this.baseColor).lighten(percent).toString();\r\n        this.object = new THREE.ArrowHelper(this.dir, this.position, this.length, newColor, this.arrowLength, this.arrowWidth);\r\n    }\r\n\r\n    darkenColor(percent) {\r\n        let newColor = tinyColor(this.baseColor).darken(percent).toString();\r\n        this.object = new THREE.ArrowHelper(this.dir, this.position, this.length, newColor, this.arrowLength, this.arrowWidth);\r\n    }\r\n\r\n    updatePos(to, from) {\r\n        this.arrowInfo.point1 = to;\r\n        this.arrowInfo.point2 = from;\r\n\r\n        this.dir = this.calculateDir();\r\n        this.dir.normalize();\r\n        this.length = this.calculateLength();\r\n        this.position = this.calculatePos();\r\n\r\n        this.object.setLength(this.length, this.arrowLength, this.arrowWidth);\r\n        this.object.setDirection(this.dir);\r\n        this.object.position.set(this.position.x, this.position.y, 0);\r\n    }\r\n\r\n    setLength(len) {\r\n        this.object.setLength(len);\r\n    }\r\n\r\n    delete() {\r\n        this.scene.remove(this.object);\r\n    }\r\n\r\n    adjustScale(newRadius) {\r\n        this.arrowInfo.dataPointRadius = newRadius\r\n        this.arrowLength = 22 * (this.arrowInfo.dataPointRadius / initialCompartmentRadius);\r\n        this.arrowWidth = 15 * (this.arrowInfo.dataPointRadius / initialCompartmentRadius);\r\n        this.updatePos(this.arrowInfo.point1, this.arrowInfo.point2);\r\n    }\r\n\r\n    showIndex(font) {\r\n        let geometry = new THREE.TextGeometry(this.arrowInfo.dataIndex.toString(), {\r\n            font: font,\r\n            size: 10,\r\n            height: 5,\r\n            curveSegments: 12,\r\n            bevelEnabled: false,\r\n            bevelThickness: 1,\r\n            bevelSize: 2,\r\n            bevelSegments: 5\r\n        });\r\n        let material = new THREE.MeshBasicMaterial({\r\n            color: 0x808080\r\n        });\r\n        this.indexTextMesh = new THREE.Mesh(geometry, material);\r\n        this.moveIndexText(this.position.x, this.position.y);\r\n        this.indexTextMesh.rotation.set(0, 0, Math.PI);\r\n    }\r\n\r\n    changeIndexTextSize(newScale) {\r\n        let scale = newScale / this.origLength;\r\n        scale = scale === 0 ? (scale = 0.00010) : scale;\r\n        this.indexTextMesh.scale.set(scale, scale, scale + this.textPullForward);\r\n    }\r\n\r\n    moveIndexText(newX, newY) {\r\n        let box = new THREE.Box3().setFromObject(this.indexTextMesh); // To center text horizontally\r\n        this.indexTextMesh.position.set(newX + .5 * (box.max.x - box.min.x), newY, this.textPullForward);\r\n    }\r\n}\r\n\r\n\r\nexport default FluxArrow","/* Imported From: https://itnext.io/how-to-use-plain-three-js-in-your-react-apps-417a79d926e0 */\r\nimport * as THREE from 'three';\r\nimport Compartment from './Compartment';\r\nimport ProgressBar from './ProgressBar';\r\nimport FluxArrow from './FluxArrow';\r\n\r\nclass SceneManager {\r\n\r\n    constructor(canvas, dataContext) {\r\n        const screenDimensions = {\r\n            width: canvas.width,\r\n            height: canvas.height\r\n        };\r\n        this.dataContext = dataContext;\r\n        this.dataContext.origin = new THREE.Vector3(0, 0, 0);\r\n        this.loadFont(this.fontLoadingComplete.bind(this));\r\n        this.canvas = canvas;\r\n        this.scene = this.buildScene();\r\n        this.renderer = this.buildRender(screenDimensions, canvas);\r\n        this.camera = this.buildCamera(screenDimensions, this.dataContext);\r\n        this.registerCallbacks(this.dataContext, this.scene, this.reloadScene);\r\n        this.update = this.update.bind(this);\r\n        this.reloadScene = this.reloadScene.bind(this);\r\n        this.reloadCompartments = this.reloadCompartments.bind(this);\r\n        this.reloadArrows = this.reloadArrows.bind(this);\r\n        this.buildProgressBar = this.buildProgressBar.bind(this);\r\n        this.changeAllRadius = this.changeAllRadius.bind(this);\r\n        this.changeColor = this.changeColor.bind(this);\r\n        this.updateArrows = this.updateArrows.bind(this);\r\n        this.addFluxArrow = this.addFluxArrow.bind(this);\r\n        this.removeFromScene = this.removeFromScene.bind(this);\r\n        this.addCompartment = this.addCompartment.bind(this);\r\n        this.addArrow = this.addArrow.bind(this);\r\n        this.renameCompartment = this.renameCompartment.bind(this);\r\n        this.updateCompartmentIndexText = this.updateCompartmentIndexText.bind(this);\r\n        this.generateCompartments = this.generateCompartments.bind(this);\r\n        this.showCompartmentIndexText = this.showCompartmentIndexText.bind(this);\r\n        this.hideCompartmentIndexText = this.hideCompartmentIndexText.bind(this);\r\n        this.showFluxIndexText = this.showFluxIndexText.bind(this);\r\n        this.hideFluxIndexText = this.hideFluxIndexText.bind(this);\r\n        this.updateProgressBar = this.updateProgressBar.bind(this);\r\n        this.colorPoints = this.colorPoints.bind(this);\r\n        this.moveCamera = this.moveCamera.bind(this);\r\n        this.canvasToThreePos = this.canvasToThreePos.bind(this);\r\n        this.moveProgressBar = this.moveProgressBar.bind(this);\r\n    }\r\n\r\n    updateProgressBar(step, text) {\r\n        if (this.dataContext.progressBar.textMesh) {\r\n            this.scene.remove(this.dataContext.progressBar.textMesh);\r\n        }\r\n        this.dataContext.progressBar.updateProgress(step, text, this.camera.position.x, this.camera.position.y);\r\n        this.scene.add(this.dataContext.progressBar.textMesh);\r\n    }\r\n\r\n    showCompartmentIndexText(compartment) {\r\n        compartment.showIndex(this.dataContext.fontResource);\r\n        this.scene.add(compartment.indexTextMesh);\r\n    }\r\n\r\n    hideCompartmentIndexText(compartment) {\r\n        this.scene.remove(compartment.indexTextMesh);\r\n    }\r\n\r\n    showFluxIndexText(arrow) {\r\n        arrow.showIndex(this.dataContext.fontResource);\r\n        this.scene.add(arrow.indexTextMesh);\r\n    }\r\n\r\n    hideFluxIndexText(arrow) {\r\n        this.scene.remove(arrow.indexTextMesh);\r\n    }\r\n\r\n\r\n    renameCompartment(compartment, newName) {\r\n        this.scene.remove(compartment.textMesh);\r\n        compartment.appendText(this.dataContext.fontResource, newName, compartment.position.x, compartment.position.y);\r\n        this.scene.add(compartment.textMesh);\r\n    }\r\n\r\n    updateCompartmentIndexText(compartment, showIndex = false) {\r\n        this.scene.remove(compartment.indexTextMesh);\r\n        if (showIndex) {\r\n            compartment.showIndex(this.dataContext.fontResource);\r\n            this.scene.add(compartment.indexTextMesh);\r\n        }\r\n    }\r\n\r\n    loadFont(fontLoadingComplete) {\r\n        (new THREE.FontLoader()).load(\r\n            'https://threejs.org//examples/fonts/helvetiker_regular.typeface.json',\r\n            fontLoadingComplete\r\n        );\r\n    }\r\n\r\n    fontLoadingComplete(font) {\r\n        this.dataContext.fontResource = font;\r\n        this.reloadScene();\r\n    }\r\n\r\n    buildScene() {\r\n        const scene = new THREE.Scene();\r\n        scene.background = new THREE.Color(\"#FFF\");\r\n        return scene;\r\n    }\r\n\r\n    buildRender(screenDimensions, canvas) {\r\n        const {\r\n            width,\r\n            height\r\n        } = screenDimensions;\r\n        const renderer = new THREE.WebGLRenderer({\r\n            canvas: canvas,\r\n            antialias: true,\r\n            alpha: true\r\n        });\r\n        const DPR = window.devicePixelRatio ? window.devicePixelRatio : 1;\r\n        renderer.setPixelRatio(DPR);\r\n        renderer.setSize(width, height);\r\n\r\n        renderer.gammaInput = true;\r\n        renderer.gammaOutput = true;\r\n\r\n        return renderer;\r\n    }\r\n\r\n    buildCamera({\r\n        width,\r\n        height\r\n    }, dataContext) {\r\n        let camera = new THREE.OrthographicCamera(width / -2, width / 2, height / -2, height / 2, 1, 1000);\r\n        camera.position.set(0, 0, -10);\r\n        camera.lookAt(dataContext.origin);\r\n        return (camera);\r\n    }\r\n\r\n    moveCamera(x, y) {\r\n        this.camera.position.x += x;\r\n        this.camera.position.y += y;\r\n        this.moveProgressBar(x, y);\r\n    }\r\n\r\n    moveProgressBar(x, y) {\r\n        let c = [\r\n            this.dataContext.progressBar.textMesh,\r\n            this.dataContext.progressBar.titleTextMesh,\r\n            this.dataContext.progressBar.bar.mesh,\r\n            this.dataContext.progressBar.progress.mesh\r\n        ];\r\n\r\n        for (let index = 0; index < c.length; index++) {\r\n            // c[index].setPosition(c[index].position.x + adjX, c[index].position.y + adjY, c[index].z);\r\n            c[index].position.x += x;\r\n            c[index].position.y += y;\r\n        }\r\n    }\r\n\r\n    registerCallbacks(dataContext, scene, reloadScene) {\r\n        dataContext.onFluxLoad = () => { };\r\n        dataContext.onLoad = () => {\r\n            if (dataContext.animationData != null) {\r\n                if (dataContext.progressBar.textMesh) {\r\n                    scene.remove(dataContext.progressBar.textMesh);\r\n                }\r\n                dataContext.progressBar.createText(dataContext.animationData[0][0]);\r\n                dataContext.progressBar.setSteps(dataContext.animationData.length);\r\n                scene.add(dataContext.progressBar.textMesh);\r\n            }\r\n        };\r\n        dataContext.registerCallback(reloadScene.bind(this));\r\n    }\r\n\r\n    reloadScene() {\r\n        this.clearScene(this.scene);\r\n        this.reloadCompartments();\r\n        this.reloadArrows();\r\n        this.buildProgressBar();\r\n    }\r\n\r\n    clearScene(scene) {\r\n        let remove = [];\r\n        scene.traverse((child) => {\r\n            if (child instanceof THREE.Mesh || child instanceof THREE.ArrowHelper) {\r\n                remove.push(child);\r\n            }\r\n        });\r\n        for (let i = 0; i < remove.length; i++) {\r\n            scene.remove(remove[i]);\r\n        }\r\n    }\r\n\r\n    reloadArrows() {\r\n        let hydratedArrows = [];\r\n        let legacyArrowIndex = 0;\r\n        this.dataContext.arrows.forEach(oldArrow => {\r\n            hydratedArrows.push(this.restoreArrow(oldArrow, legacyArrowIndex++, this.scene));\r\n        });\r\n        this.dataContext.arrows = hydratedArrows;\r\n    }\r\n\r\n    canvasToThreePos(mousePos, asIs = false) {\r\n        let rect = this.canvas.getBoundingClientRect();\r\n        let newX, newY;\r\n        newX = (rect.width / 2) - mousePos.x + this.camera.position.x;\r\n        newY = mousePos.y - (rect.height / 2) + this.camera.position.y;\r\n        if(asIs){\r\n            newX -= this.camera.position.x; \r\n            newY -= this.camera.position.y; \r\n        }\r\n        return {\r\n            x: newX,\r\n            y: newY\r\n        };\r\n    }\r\n\r\n\r\n    reloadCompartments() {\r\n        let hydratedCompartments = [];\r\n        let c = 0;\r\n        this.dataContext.compartments.forEach(oldPoint => {\r\n            if (!oldPoint.dataIndex) { // For converting legacy saves on the fly\r\n                oldPoint.dataIndex = c++;\r\n            }\r\n            let point = this.restoreCompartment(oldPoint, this.scene, this.dataContext);\r\n            hydratedCompartments.push(point);\r\n            point.moveText(point.object.mesh.position.x, point.object.mesh.position.y);\r\n        });\r\n        this.dataContext.compartments = hydratedCompartments;\r\n    }\r\n\r\n    buildProgressBar() {\r\n        let rect = this.canvas.getBoundingClientRect();\r\n        this.dataContext.progressBar = new ProgressBar(this.dataContext.fontResource, (-rect.height / 2.0) + 25);\r\n        this.scene.add(this.dataContext.progressBar.bar.mesh);\r\n        this.scene.add(this.dataContext.progressBar.progress.mesh);\r\n        if (this.dataContext.progressBar.textMesh !== null) {\r\n            this.scene.remove(this.dataContext.progressBar.textMesh)\r\n        }\r\n        this.dataContext.progressBar.createText(\"0\");\r\n        this.scene.add(this.dataContext.progressBar.textMesh);\r\n        this.dataContext.progressBar.createTitle();\r\n        this.scene.add(this.dataContext.progressBar.titleTextMesh);\r\n    }\r\n\r\n    restoreArrow(savedData, legacyIndex, scene) {\r\n        let arrow = new FluxArrow(savedData.arrowInfo, legacyIndex);\r\n        scene.add(arrow.object);\r\n        return arrow;\r\n    }\r\n\r\n    restoreCompartment(savedData, scene, dataContext) {\r\n        let compartment = new Compartment(savedData.dataIndex, savedData);\r\n        scene.add(compartment.object.mesh);\r\n        scene.add(compartment.shadow.mesh);\r\n        let labelText = savedData.textMesh ? savedData.textMesh.geometries[0].text : \" \";\r\n        if (!labelText)\r\n            labelText = \" \";\r\n        compartment.appendText(dataContext.fontResource, labelText, compartment.position.x, compartment.position.y);\r\n        scene.add(compartment.textMesh);\r\n        return compartment;\r\n    }\r\n\r\n    addCompartment(labelText, showIndex = false) {\r\n        let compartments = this.dataContext.compartments;\r\n        let compartment = new Compartment(compartments.length + 1);\r\n        this.scene.add(compartment.object.mesh);\r\n        this.scene.add(compartment.shadow.mesh);\r\n        if (showIndex) {\r\n            compartment.showIndex(this.dataContext.fontResource);\r\n            this.scene.add(compartment.indexTextMesh);\r\n        }\r\n        compartment.changeColor(this.dataContext.baseColor);\r\n        compartment.adjustScale(this.dataContext.radius);\r\n        compartment.appendText(this.dataContext.fontResource, labelText, compartment.position.x, compartment.position.y);\r\n        this.scene.add(compartment.textMesh);\r\n        compartments.push(compartment);\r\n        compartment.setPosition(0, 0, 0);\r\n        compartment.moveText(0, 0);\r\n    }\r\n\r\n    addArrow() {\r\n        let arrows = this.dataContext.arrows;\r\n        let data = this.dataContext;\r\n        let shift = false;\r\n        //Check if new arrow is between an already arrowed combination\r\n        for (var i = 0; i < arrows.length; i++) {\r\n            if (arrows[i].arrowInfo.pointIndex1 === data.arrowPoints[0] && arrows[i].arrowInfo.pointIndex2 === data.arrowPoints[1]) {\r\n                //Arrow already exists in that direction-- do nothing\r\n                return\r\n            }\r\n            if (arrows[i].arrowInfo.pointIndex1 === data.arrowPoints[1] && arrows[i].arrowInfo.pointIndex2 === data.arrowPoints[0]) {\r\n                //Arrow exists in opposite direction-- shift new arrow\r\n                shift = true;\r\n            }\r\n        }\r\n        this.addFluxArrow({\r\n            shift: shift,\r\n            len: 200,\r\n            pointIndex1: data.arrowPoints[0],\r\n            pointIndex2: data.arrowPoints[1],\r\n            point1: data.compartments[data.arrowPoints[0]].position,\r\n            point2: data.compartments[data.arrowPoints[1]].position,\r\n            dataPointRadius: data.radius,\r\n            dataIndex: data.arrows.length + 1,\r\n        }\r\n        );\r\n    }\r\n\r\n    removeFromScene(compartment) {\r\n        this.scene.remove(compartment.object.mesh);\r\n        this.scene.remove(compartment.shadow.mesh);\r\n        this.scene.remove(compartment.textMesh);\r\n    }\r\n\r\n    addFluxArrow(arrowInfo) {\r\n        let arrows = this.dataContext.arrows;\r\n\r\n        this.dataContext.arrowMode = 0;\r\n\r\n        let arrow = new FluxArrow(arrowInfo);\r\n        this.scene.add(arrow.object);\r\n        arrows.push(arrow);\r\n    }\r\n\r\n    updateArrows(deletedDataPoint) {\r\n        let arrows = this.dataContext.arrows;\r\n        for (var i = 0; i < arrows.length; i++) {\r\n            let index1 = arrows[i].arrowInfo.pointIndex1;\r\n            let index2 = arrows[i].arrowInfo.pointIndex2;\r\n            if ((index1 === deletedDataPoint) || (index2 === deletedDataPoint)) {\r\n                this.scene.remove(arrows[i].object)\r\n                arrows.splice(i, 1);\r\n                i--; //To go back and check arrow that just moved into i'th position\r\n            } else {\r\n                if ((index1 > deletedDataPoint) && (deletedDataPoint !== -1)) {\r\n                    index1--;\r\n                    arrows[i].arrowInfo.pointIndex1--;\r\n                }\r\n                if ((index2 > deletedDataPoint) && (deletedDataPoint !== -1)) {\r\n                    index2--;\r\n                    arrows[i].arrowInfo.pointIndex2--;\r\n                }\r\n                arrows[i].updatePos(this.dataContext.compartments[index1].position, this.dataContext.compartments[index2].position);\r\n                if (this.dataContext.showIndices()) {\r\n                    arrows[i].moveIndexText(arrows[i].position.x, arrows[i].position.y);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    changeColor(newColor) {\r\n        this.dataContext.color = newColor;\r\n        for (let i = 0; i < this.dataContext.compartments.length; i++) {\r\n            this.dataContext.compartments[i].changeColor(newColor);\r\n        }\r\n    }\r\n\r\n    colorPoints() {\r\n        let changePercent, diff;\r\n        let data = this.dataContext;\r\n\r\n        for (let i = 0; i < data.compartments.length; i++) {\r\n            if (data.animationData[data.step][data.compartments[i].dataIndex] > data.halfQuantity) { //i+1 because column 0 holds time info\r\n                //Darken\r\n                diff = data.animationData[data.step][data.compartments[i].dataIndex] - data.halfQuantity;\r\n                changePercent = diff / data.halfQuantity;\r\n                data.compartments[i].darkenColor(changePercent * 50); //Multiply by 50 - percent available to darken by\r\n            } else {\r\n                //Lighten\r\n                diff = data.halfQuantity - data.animationData[data.step][data.compartments[i].dataIndex];\r\n                changePercent = diff / data.halfQuantity;\r\n                data.compartments[i].lightenColor(changePercent * 50); //Multiply by 50 - percent available to lighten by\r\n            }\r\n        }\r\n        if (data.fluxData != null) {\r\n            for (let i = 0; i < data.arrows.length - 1; i++) {\r\n                if (data.fluxData[data.step][data.arrows[i].arrowInfo.dataIndex] > data.halfFlux) { //i+1 because column 0 holds time info\r\n                    //Darken\r\n                    diff = data.fluxData[data.step][data.arrows[i].arrowInfo.dataIndex] - data.halfFlux;\r\n                    changePercent = diff / data.halfFlux;\r\n                    this.scene.remove(data.arrows[i].object);\r\n                    data.arrows[i].darkenColor(changePercent * 50); //Multiply by 50 - percent available to darken by\r\n                    this.scene.add(data.arrows[i].object) //Add newly colored arrow\r\n                } else {\r\n                    //Lighten\r\n                    diff = data.halfFlux - data.fluxData[data.step][data.arrows[i].arrowInfo.dataIndex];\r\n                    changePercent = diff / data.halfFlux;\r\n                    this.scene.remove(data.arrows[i].object);\r\n                    data.arrows[i].lightenColor(changePercent * 50); //Multiply by 50 - percent available to lighten by\r\n                    this.scene.add(data.arrows[i].object) //Add newly colored arrow\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    generateCompartments(showIndex) {\r\n        let data = this.dataContext;\r\n        if (data.animationData == null) {\r\n            alert(\"Compartment data must be uploaded first\");\r\n            return;\r\n        } else if (data.compartments.length > 0) {\r\n            alert(\"Compartments already exist\");\r\n            return;\r\n        }\r\n        let rect = this.canvas.getBoundingClientRect();\r\n        let freeSpace = rect.width - ((data.animationData[0].length - 1) * (data.radius * 2)) - 2 * data.radius; // - 2*radius allocates for a radius buffer space on each end\r\n        let spaceBetween = freeSpace / (data.animationData[0].length - 2);\r\n        for (let eColumn = 1; eColumn < data.animationData[0].length; eColumn++) {\r\n            let compartmentIndex = eColumn - 1;\r\n            let xPos = -((rect.width / 2) - data.radius) + (compartmentIndex * data.radius * 2) + (compartmentIndex * spaceBetween) + data.radius; // + radius gives a radius buffer space on each end\r\n            let label = !!data.labels[eColumn] ? data.labels[eColumn] : (eColumn).toString();\r\n            this.addCompartment(label, showIndex);\r\n            //Move to appropriate location\r\n            data.compartments[compartmentIndex].setPosition(-xPos, -1, 0);\r\n            data.compartments[compartmentIndex].moveText(-xPos, 0);\r\n            if (showIndex) {\r\n                data.compartments[compartmentIndex].moveIndexText(-xPos, (3 / 4) * (data.compartments[compartmentIndex].radius));\r\n            }\r\n        }\r\n    }\r\n\r\n    changeAllRadius() {\r\n        let point;\r\n        for (let i = 0; i < this.dataContext.compartments.length; i++) {\r\n            point = this.dataContext.compartments[i];\r\n            point.adjustScale(this.dataContext.radius);\r\n            point.changeTextSize(this.dataContext.radius)\r\n            point.moveText(point.object.mesh.position.x, point.object.mesh.position.y);\r\n        }\r\n        for (let i = 0; i < this.dataContext.arrows.length; i++) {\r\n            this.dataContext.arrows[i].adjustScale(this.dataContext.radius);\r\n        }\r\n    }\r\n\r\n    update() {\r\n        this.renderer.render(this.scene, this.camera);\r\n    }\r\n\r\n}\r\n\r\nexport default SceneManager;","import * as dat from 'dat.gui';\r\n\r\nclass Interface {\r\n\r\n    constructor(controller) {\r\n        this.gui = new dat.GUI({\r\n            autoPlace: false\r\n        });\r\n        this.createHTMLElement(this.gui);\r\n        this.createMenu.bind(this)(this.gui, controller);\r\n        this.updateDisplay = this.gui.updateDisplay;\r\n    }\r\n\r\n    createHTMLElement(gui) {\r\n        document.getElementById('datGuiAnchor').appendChild(gui.domElement);\r\n        gui.domElement.id = 'datGuiAnchor';\r\n    }\r\n\r\n    createMenu(gui, controller) {\r\n        gui.add(controller.controls, 'seekHelp').name(\"Help\");\r\n        this.buildAnimationFolder(gui.addFolder(\"Animation\"), controller);\r\n        this.buildEditingFolder(gui.addFolder(\"Model Editing\"), controller);\r\n        this.buildInterpretationFolder(gui.addFolder(\"Interpretation\"), controller);\r\n    }\r\n\r\n    buildAnimationFolder(folder, controller) {\r\n        folder.add(controller.controls, 'singleStep').name(\"Step - -- -- -| \\u21E5\");\r\n        folder.add(controller.controls, 'startStepping').name(\"Start - -- -- -| \\u25B6\");\r\n        folder.add(controller.controls, 'pauseAnimation').name(\"Pause - -- -| \\u23F8\");\r\n        folder.add(controller.controls, 'resetAnimation').name(\"Reset - --- -| \\u21BB\");\r\n        folder.add(controller.controls, 'stepDelay').name(\"Delay (in ms)\")\r\n            .min(0)\r\n            .max(500)\r\n            .step(10)\r\n            .onChange(controller.stepDelayCallback);\r\n        folder.add(controller.controls, 'skipSteps').name(\"Step Size\")\r\n            .onChange(controller.skipStepsCallback);\r\n        return folder;\r\n    }\r\n\r\n    buildEditingFolder(editFolder, controller) {\r\n        editFolder.add(controller.controls, 'generateCompartments').name(\"Generate Comps.\");\r\n        editFolder.add(controller.controls, 'generateFluxArrows').name(\"Generate Flux.\");\r\n        editFolder.add(controller.controls, 'editMode').name(\"Edit Mode\")\r\n            .onChange(controller.editModeCallback);\r\n        editFolder.add(controller.controls, 'labelMode').name(\"Import Labels\")\r\n            .onChange(controller.labelModeCallback);\r\n        editFolder.add(controller.controls, 'showIndices').name(\"Show Indices\")\r\n            .onChange(controller.showIndicesCallback);\r\n        editFolder.add(controller.controls, 'compIndex').name(\"Data Index\")\r\n            .listen()\r\n            .onFinishChange(controller.compIndexCallback);\r\n        editFolder.add(controller.controls, 'label').name(\"Comp. Label\")\r\n            .listen()\r\n            .onFinishChange(controller.labelCallback);\r\n        editFolder.add(controller.controls, 'addPoint').name(\"Add Compartment\");\r\n        editFolder.add(controller.controls, 'addArrow').name(\"Add Arrow\");\r\n        editFolder.add(controller.controls, 'deletePoint').name(\"Delete Compartment\");\r\n        editFolder.add(controller.controls, 'size').name(\"Size\")\r\n            .min(10)\r\n            .max(100)\r\n            .step(1)\r\n            .onChange(controller.sizeCallback);\r\n        return editFolder;\r\n    }\r\n\r\n    buildInterpretationFolder(folder, controller) {\r\n        folder.add(controller.controls, 'valueMax').name(\"Comp. Maximum\")\r\n            .onChange(controller.valueMaxCallback);\r\n        folder.add(controller.controls, 'fluxMax').name(\"Flux Maximum\")\r\n            .onChange(controller.fluxMaxCallback);\r\n        folder.addColor(controller.controls, 'color').name(\"50% Max Color\")\r\n            .onChange(controller.colorCallback);\r\n        return folder;\r\n    }\r\n}\r\n\r\nexport default Interface;","import ActionUtilities from '../utilities/ActionUtilities';\r\n\r\nconst actionUtil = new ActionUtilities();\r\n\r\nclass Controller {\r\n\r\n    constructor(dataContext, sceneManager) {\r\n        this.dataContext = dataContext;\r\n        this.sceneManager = sceneManager;\r\n        this.controls = this.createControls.bind(this)(dataContext);\r\n        this.callbacks = this.createCallbacks(this);\r\n        this.dataContext.showIndices = () => {\r\n            return this.controls.showIndices;\r\n        };\r\n        this.dataContext.updateDisplay = (cIndex, label) => {\r\n            this.controls.compIndex = cIndex; \r\n            this.controls.label = label; \r\n        };\r\n    }\r\n\r\n    createControls(data) {\r\n        this.bindControllerFunctions(this);\r\n        return {\r\n            size: data.radius,\r\n            valueMax: data.valueMax,\r\n            fluxMax: data.fluxMax,\r\n            stepDelay: data.stepDelay,\r\n            color: data.color,\r\n            skipSteps: data.skipSteps,\r\n            generateCompartments: this.generateCompartments.bind(this),\r\n            generateFluxArrows: this.generateFluxArrows.bind(this),\r\n            seekHelp: this.seekHelp.bind(this),\r\n            singleStep: this.singleStep.bind(this),\r\n            startStepping: this.startStepping.bind(this),\r\n            pauseAnimation: this.pauseAnimation.bind(this),\r\n            resetAnimation: this.reset.bind(this),\r\n            addPoint: this.addPoint.bind(this),\r\n            addArrow: this.addArrow.bind(this),\r\n            deletePoint: this.deletePoint.bind(this),\r\n            showIndices: false,\r\n            compIndex: \"\",\r\n            label: \"\",\r\n            editMode: false,\r\n            labelMode: false\r\n        }\r\n    }\r\n\r\n    bindControllerFunctions(controller) {\r\n        controller.singleStep = controller.singleStep.bind(controller);\r\n        controller.generateCompartments = controller.generateCompartments.bind(controller);\r\n        controller.generateFluxArrows = controller.generateFluxArrows.bind(controller);\r\n        controller.startStepping = controller.startStepping.bind(controller);\r\n        controller.pauseAnimation = controller.pauseAnimation.bind(controller);\r\n        controller.resetAnimation = controller.reset.bind(controller);\r\n        controller.addPoint = controller.addPoint.bind(controller);\r\n        controller.addCompartment = controller.addCompartment.bind(controller);\r\n        controller.addArrow = controller.addArrow.bind(controller);\r\n        controller.deletePoint = controller.deletePoint.bind(controller);\r\n\r\n        controller.isDataLoaded = controller.isDataLoaded.bind(controller);\r\n        controller.applyStep = controller.applyStep.bind(controller);\r\n        controller.stepForward = controller.stepForward.bind(controller);\r\n        controller.deleteDataPoint = controller.deleteDataPoint.bind(controller);\r\n    }\r\n\r\n    createCallbacks(Controller) {\r\n        Controller.stepDelayCallback = this.stepDelayCallback.bind(this);\r\n        Controller.editModeCallback = this.editModeCallback.bind(this);\r\n        Controller.skipStepsCallback = this.skipStepsCallback.bind(this);\r\n        Controller.labelModeCallback = this.labelModeCallback.bind(this);\r\n        Controller.showIndicesCallback = this.showIndicesCallback.bind(this);\r\n        Controller.compIndexCallback = this.compIndexCallback.bind(this);\r\n        Controller.labelCallback = this.labelCallback.bind(this);\r\n        Controller.sizeCallback = this.sizeCallback.bind(this);\r\n        Controller.valueMaxCallback = this.valueMaxCallback.bind(this);\r\n        Controller.fluxMaxCallback = this.fluxMaxCallback.bind(this);\r\n        Controller.colorCallback = this.colorCallback.bind(this);\r\n    }\r\n\r\n    colorCallback(newValue) {\r\n        this.dataContext.baseColor = newValue;\r\n        this.sceneManager.changeColor(newValue);\r\n    }\r\n\r\n    fluxMaxCallback(newValue) {\r\n        this.dataContext.fluxMax = newValue;\r\n        this.dataContext.halfFlux = this.dataContext.fluxMax / 2.0;\r\n    }\r\n\r\n    valueMaxCallback(newValue) {\r\n        this.dataContext.valueMax = newValue;\r\n        this.dataContext.halfQuantity = this.dataContext.valueMax / 2.0;\r\n    }\r\n\r\n    sizeCallback(newValue) {\r\n        this.dataContext.radius = newValue;\r\n        this.sceneManager.changeAllRadius();\r\n    }\r\n\r\n    labelCallback(newValue) {\r\n        this.sceneManager.renameCompartment(this.dataContext.compartments[this.dataContext.userSelectedDataPoint], newValue);\r\n    }\r\n\r\n    compIndexCallback(newValue) {\r\n        if (this.dataContext.userSelectedDataPoint !== -1) {\r\n            if ((newValue > this.dataContext.compartments.length) || (newValue < 1)) {\r\n                alert(\"Invalid Index\");\r\n            } else {\r\n                let compartment = this.dataContext.compartments[this.dataContext.userSelectedDataPoint];\r\n                compartment.dataIndex = newValue;\r\n                this.sceneManager.updateCompartmentIndexText(compartment, this.controls.showIndices);\r\n            }\r\n        }\r\n    }\r\n\r\n    showIndicesCallback(show) {\r\n        this.revealIndices(show);\r\n        this.revealIndices = this.revealIndices.bind(this);\r\n    }\r\n\r\n    labelModeCallback(newValue) {\r\n        this.dataContext.labelMode = newValue;\r\n    }\r\n\r\n    editModeCallback(newValue) {\r\n        this.dataContext.editMode = newValue;\r\n    }\r\n\r\n    skipStepsCallback(newValue) {\r\n        this.dataContext.skipSteps = newValue;\r\n    }\r\n\r\n    stepDelayCallback(newValue) {\r\n        this.dataContext.stepDelay = newValue;\r\n    }\r\n\r\n    isDataLoaded() {\r\n        if (this.dataContext && !this.dataContext.dataLoaded()) {\r\n            alert(\"Please import data first\");\r\n        }\r\n        return this.dataContext.dataLoaded();\r\n    }\r\n\r\n    revealIndices(show) {\r\n        if (show) {\r\n            for (let i = 0; i < this.dataContext.compartments.length; i++) {\r\n                this.sceneManager.showCompartmentIndexText(this.dataContext.compartments[i]);\r\n            }\r\n            for (let i = 0; i < this.dataContext.arrows.length; i++) {\r\n                this.sceneManager.showFluxIndexText(this.dataContext.arrows[i]);\r\n            }\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < this.dataContext.compartments.length; i++) {\r\n            this.sceneManager.hideCompartmentIndexText(this.dataContext.compartments[i]);\r\n        }\r\n        for (let i = 0; i < this.dataContext.arrows.length; i++) {\r\n            this.sceneManager.hideFluxIndexText(this.dataContext.arrows[i]);\r\n        }\r\n    }\r\n\r\n\r\n    deleteDataPoint() {\r\n        let deletedPoint = this.dataContext.userSelectedDataPoint;\r\n        if (this.dataContext.userSelectedDataPoint > -1) {\r\n            this.sceneManager.removeFromScene(this.dataContext.compartments[this.dataContext.userSelectedDataPoint]);\r\n            this.dataContext.compartments.splice(this.dataContext.userSelectedDataPoint, 1);\r\n            this.dataContext.userSelectedDataPoint = -1;\r\n        }\r\n        this.sceneManager.updateArrows(deletedPoint);\r\n    }\r\n\r\n    applyStep() {\r\n        let text = this.dataContext.step < 0 ? '0' : this.dataContext.animationData[this.dataContext.step][0];\r\n        if (this.dataContext.step >= 0) {\r\n            this.sceneManager.colorPoints();\r\n        }\r\n        this.sceneManager.updateProgressBar(this.dataContext.step + 1, text);\r\n    }\r\n\r\n\r\n    reset() {\r\n        if (this.dataContext.animationData) {\r\n            this.dataContext.step = 0;\r\n            this.dataContext.paused = true;\r\n            this.sceneManager.updateProgressBar(0, this.dataContext.animationData[0][0]);\r\n            this.applyStep();\r\n        }\r\n    }\r\n\r\n    addCompartment() {\r\n        let data = this.dataContext;\r\n        let labels = data.labels;\r\n        let labelMode = data.labelMode;\r\n        let compartments = data.compartments;\r\n        let labelText;\r\n        if (labelMode && labels.length > compartments.length + 1) {\r\n            labelText = labels[compartments.length + 1]\r\n        } else {\r\n            if (labelMode && labels.length <= compartments.length) {\r\n                labelText = window.prompt(\"Imported data does not contain a column #\" + compartments.length + \".\\nPlease label your data point: \");\r\n            } else {\r\n                labelText = window.prompt(\"Label your data point: \");\r\n            }\r\n        }\r\n        if ((!labelText) || (labelText === \"\")) {\r\n            alert(\"No label entered\");\r\n            return;\r\n        }\r\n        this.sceneManager.addCompartment(labelText, this.controls.showIndices);\r\n    }\r\n\r\n\r\n    deletePoint() {\r\n        if (this.dataContext.editMode) {\r\n            this.deleteDataPoint();\r\n        }\r\n    }\r\n\r\n    addArrow() {\r\n        if (this.dataContext.editMode) {\r\n            this.dataContext.arrowMode = 1;\r\n        }\r\n    }\r\n\r\n    addPoint() {\r\n        if (this.dataContext.editMode) {\r\n            this.addCompartment();\r\n        }\r\n    }\r\n\r\n    pauseAnimation() {\r\n        this.dataContext.paused = true;\r\n    }\r\n\r\n    seekHelp() {\r\n        window.open(window.location.href + 'help.html', '_blank');\r\n    }\r\n\r\n    singleStep() {\r\n        this.startStepping(true);\r\n    }\r\n\r\n    async startStepping(singleStep = false) {\r\n        if (this.isDataLoaded()) {\r\n            this.dataContext.paused = false;\r\n            this.stepForward(singleStep);\r\n        }\r\n    }\r\n\r\n    async stepForward(singleStep = false) {\r\n        if (this.dataContext.hasNextStep()) {\r\n            if (!this.dataContext.paused) {\r\n                this.applyStep();\r\n                this.dataContext.step += this.controls.skipSteps;\r\n                await actionUtil.sleep(this.dataContext.stepDelay);\r\n                if (!singleStep)\r\n                    this.stepForward();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    generateCompartments() {\r\n        this.sceneManager.generateCompartments(this.controls.showIndices);\r\n    }\r\n\r\n    generateFluxArrows() {\r\n        let data = this.dataContext;\r\n        if (data.arrows.length > 0) {\r\n            alert(\"Flux Arrows already exist\");\r\n            return;\r\n        } else if (!data.fluxData) {\r\n            alert(\"Flux data must be uploaded first before automatic generation can take place.\");\r\n            return;\r\n        } else if (!data.fluxOriginLabels && !data.fluxDestinationLabels) {\r\n            alert(\"File Format does not support flux arrows. The first row must be the origin compartment and \" +\r\n                \"the second row must be the destination compartment.\");\r\n            return;\r\n        } else if (data.compartments.length <= 0) {\r\n            alert(\"Compartments must be created first for this operation to succeed.\");\r\n            return;\r\n        }\r\n        for (let i = 0; i < data.fluxData[0].length; i++) {\r\n            if (data.fluxDestinationLabels.length - 1 < i || data.fluxOriginLabels.length - 1 < i)\r\n                break;\r\n            if (!data.fluxDestinationLabels[i] || !data.fluxOriginLabels[i])\r\n                continue;\r\n            data.arrowPoints[0] = null;\r\n            data.arrowPoints[1] = null;\r\n            for (let j = 0; j < data.compartments.length; j++) {\r\n                const element = data.compartments[j].labelText.toLowerCase().trim();\r\n                if (element === data.fluxOriginLabels[i].toLowerCase().trim()) {\r\n                    data.arrowPoints[0] = j;\r\n                    if (data.arrowPoints[1] !== null) {\r\n                        this.sceneManager.addArrow();\r\n                        break;\r\n                    }\r\n                    continue;\r\n                }\r\n                if (element === data.fluxDestinationLabels[i].toLowerCase().trim()) {\r\n                    data.arrowPoints[1] = j;\r\n                    if (data.arrowPoints[0] !== null) {\r\n                        this.sceneManager.addArrow();\r\n                        break;\r\n                    }\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Controller;","export default class ActionUtilities  {\r\n\r\n    sleep(ms) {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n      }\r\n\r\n      \r\n}","import {\r\n    isUndefined\r\n} from 'util';\r\n\r\nclass MouseHandler {\r\n\r\n    constructor(canvas, dataContext, sceneManager) {\r\n        this.dataContext = dataContext;\r\n        this.sceneManager = sceneManager;\r\n        this.canvas = canvas;\r\n        this.mouseDown = this.mouseDown.bind(this);\r\n        this.mouseUp = this.mouseUp.bind(this);\r\n        this.mouseMove = this.mouseMove.bind(this);\r\n        this.bindLocalFunctions(this);\r\n        this.setupEventListeners(canvas, this);\r\n\r\n    }\r\n\r\n    bindLocalFunctions(handler){\r\n        handler.getMousePos = handler.getMousePos.bind(handler);\r\n        handler.isDataLoaded = handler.isDataLoaded.bind(handler); \r\n        handler.checkWithinRange = handler.checkWithinRange.bind(handler);\r\n        handler.applyStep = handler.applyStep.bind(handler);\r\n    }\r\n\r\n    mouseDown(evt) {\r\n        this.dataContext.mouseDown = true;\r\n        this.checkWithinRange(this.canvas, evt);\r\n    }\r\n\r\n    mouseUp(evt) {\r\n        let data = this.dataContext;\r\n        if (data.editMode) {\r\n            if (data.arrowMode === 1) {\r\n                data.arrowMode = 2;\r\n                this.checkWithinRange(this.canvas, evt);\r\n                if ((data.arrowPoints[0] != null) && (data.arrowPoints[1] != null)) {\r\n                    this.sceneManager.addArrow();\r\n                } else {\r\n                    alert(\"Dragged line was not between two data points\");\r\n                }\r\n                //Reset arrow points\r\n                data.arrowPoints[0] = null;\r\n                data.arrowPoints[1] = null;\r\n            }\r\n            data.mouseDown = false;\r\n            data.dataPointToMove = -1; //No current selected compartment\r\n        }\r\n        if (data.arrows.length > 0) {\r\n            this.sceneManager.updateArrows(-1);\r\n        }\r\n    }\r\n\r\n    mouseMove(evt) {\r\n        let data = this.dataContext;\r\n        if (data.editMode) {\r\n            if (data.mouseDown) {\r\n                let mousePos = this.getMousePos(this.canvas, evt);\r\n                let newMousePos = this.sceneManager.canvasToThreePos(mousePos);\r\n                if (data.dataPointToMove > -1) {\r\n                    data.compartments[data.dataPointToMove].setPosition(newMousePos.x, newMousePos.y, 0);\r\n                    data.compartments[data.dataPointToMove].moveText(newMousePos.x, newMousePos.y);\r\n                    if (data.showIndices()) {\r\n                        data.compartments[data.dataPointToMove].moveIndexText(newMousePos.x, newMousePos.y + (3 / 4) * (data.compartments[data.dataPointToMove].radius));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setupEventListeners(canvas, handler) {\r\n        canvas.addEventListener(\"mousedown\", handler.mouseDown);\r\n        canvas.addEventListener(\"mouseup\", handler.mouseUp);\r\n        canvas.addEventListener(\"mousemove\", handler.mouseMove);\r\n    }\r\n\r\n    getMousePos(canvas, evt) {\r\n        let rect = canvas.getBoundingClientRect();\r\n        return {\r\n            x: evt.clientX - rect.left,\r\n            y: evt.clientY - rect.top\r\n        };\r\n    }\r\n    \r\n    checkWithinRange(canvas, evt) {\r\n        let mousePos = this.sceneManager.canvasToThreePos(this.getMousePos(canvas, evt));\r\n        let mousePosUncorrected = this.sceneManager.canvasToThreePos(this.getMousePos(canvas, evt), true);\r\n        this.dataContext.updateDisplay(\"\", \"\");\r\n        let data = this.dataContext;\r\n        if (data.editMode) {\r\n            for (var i = 0; i < data.compartments.length; i++) {\r\n                let selected = data.compartments[i].withinCircle(mousePos.x, mousePos.y);\r\n                if (selected && data.arrowMode === 1) {\r\n                    data.compartments[i].shadow.mesh.material.color.set(\"#ffff00\");\r\n                    data.arrowPoints[0] = i\r\n                } else if (selected && data.arrowMode === 2) {\r\n                    data.compartments[i].shadow.mesh.material.color.set(\"#ffff00\");\r\n                    data.arrowPoints[1] = i\r\n                } else if (selected) {\r\n                    if (data.userSelectedDataPoint !== -1) {\r\n                        data.compartments[data.userSelectedDataPoint].shadow.mesh.material.color.set(\"#cccccc\");\r\n                    }\r\n                    data.compartments[i].shadow.mesh.material.color.set(\"#ffff00\");\r\n                    data.dataPointToMove = i;\r\n                    data.updateDisplay(data.compartments[i].dataIndex, data.compartments[i].labelText);\r\n                    data.userSelectedDataPoint = i;\r\n                    break;\r\n                } else if (!isUndefined(data.compartments[i])) {\r\n                    data.compartments[i].shadow.mesh.material.color.set(\"#cccccc\");\r\n                }\r\n            }\r\n        }\r\n        if (data.dataPointToMove === -1 && data.progressBar) { //Click was not on a dataPoint\r\n            data.userSelectedDataPoint = -1; //Deselect previous selection\r\n            if (data.animationData && !this.isDataLoaded()) {\r\n                alert(\"Please import data first\");\r\n                return;\r\n            }\r\n\r\n            //Check if click was on progress bar\r\n            if (data.progressBar.withinBar(mousePosUncorrected.x, mousePosUncorrected.y) && data.animationData) {\r\n                let clickedStep = data.progressBar.getStep(mousePosUncorrected.x);\r\n                let text = data.animationData[clickedStep - 1];\r\n                this.sceneManager.updateProgressBar(clickedStep, text ? text[0] : \"0\");\r\n                data.step = clickedStep - 1;\r\n                this.applyStep();\r\n            }\r\n        }\r\n    }\r\n\r\n    isDataLoaded() {\r\n        let data = this.dataContext;\r\n        if (data && !data.dataLoaded()) {\r\n            alert(\"Please import data first\");\r\n        }\r\n        return data.dataLoaded();\r\n    }\r\n\r\n    applyStep() {\r\n        let text = this.dataContext.step < 0 ? '0' : this.dataContext.animationData[this.dataContext.step][0];\r\n        if (this.dataContext.step >= 0) {\r\n            this.sceneManager.colorPoints();\r\n        }\r\n        this.sceneManager.updateProgressBar(this.dataContext.step + 1, text);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default MouseHandler;","class keyboardHandler {\r\n\r\n    constructor(dataContext, sceneManager) {\r\n        this.dataContext = dataContext;\r\n        this.sceneManager = sceneManager;\r\n        this.keyPress = this.keyPress.bind(this);\r\n        this.bindLocalFunctions(this);\r\n        this.setupEventListeners(this);\r\n\r\n    }\r\n\r\n    bindLocalFunctions(handler) {\r\n        handler.keyPress = handler.keyPress.bind(handler);\r\n        handler.moveScene = handler.moveScene.bind(handler);\r\n    }\r\n\r\n    setupEventListeners(handler) {\r\n        document.addEventListener(\"keydown\", handler.keyPress);\r\n    }\r\n\r\n    moveScene(up, left) {\r\n        const moveAmount = 40;\r\n        this.sceneManager.moveCamera(left * moveAmount, up * moveAmount);\r\n        this.sceneManager.update();\r\n    }\r\n\r\n    keyPress(event) {\r\n        let preventDefault = true;\r\n        switch (event.code) {\r\n            case \"ArrowUp\":\r\n                this.moveScene(-1, 0);\r\n                break;\r\n            case \"ArrowLeft\":\r\n                this.moveScene(0, 1);\r\n                break;\r\n            case \"ArrowRight\":\r\n                this.moveScene(0, -1);\r\n                break;\r\n            case \"ArrowDown\":\r\n                this.moveScene(1, 0);\r\n                break;\r\n            default:\r\n                preventDefault = false; \r\n                break;\r\n        }\r\n        if(preventDefault){\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default keyboardHandler;","import React, {\r\n  Component\r\n} from 'react';\r\nimport threeEntryPoint from '../lib/threejs/threeEntryPoint';\r\n\r\n/* Imported From: https://itnext.io/how-to-use-plain-three-js-in-your-react-apps-417a79d926e0 */\r\nexport default class ThreeContainer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.dataContext = this.props.dataContext;\r\n  }\r\n\r\n  componentDidMount() {\r\n    threeEntryPoint(this.threeRootElement, this.dataContext);\r\n  }\r\n\r\n  render() {\r\n    return ( <div  className='canvas' ref={element => this.threeRootElement = element} > </div>);\r\n  }\r\n}","import SceneManager from './SceneManager';\r\nimport Interface from '../datGui/Interface';\r\nimport Controller from '../datGui/Controller';\r\nimport MouseHandler from '../MouseHandler';\r\nimport KeyboardHandler from '../KeyboardHandler';\r\n\r\nexport default (container, dataContext) => {\r\n    const canvas = createCanvas(document, container);\r\n    ensureDefaults(dataContext, canvas);\r\n    const sceneManager = new SceneManager(canvas, dataContext);\r\n    new MouseHandler(canvas, dataContext, sceneManager);\r\n    new KeyboardHandler(dataContext, sceneManager);\r\n    const controller = new Controller(dataContext, sceneManager);\r\n    const menu = new Interface(controller);\r\n\r\n    dataContext.registerCallback(() => {\r\n        updatePanel(menu, controller, dataContext);\r\n    });\r\n\r\n    render();\r\n\r\n    function createCanvas(document, container) {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = container.scrollWidth;\r\n        canvas.height = container.scrollHeight;\r\n        container.appendChild(canvas);\r\n        return canvas;\r\n    }\r\n\r\n    function render() {\r\n        requestAnimationFrame(render);\r\n        sceneManager.update();\r\n    }\r\n\r\n    function ensureDefaults(dataContext, canvas) {\r\n        dataContext.screenDimensions = {\r\n            width: canvas.width,\r\n            height: canvas.height\r\n        }\r\n        dataContext.origRadius = 40;\r\n        dataContext.paused = true;\r\n        dataContext.stepInc = 1;\r\n        dataContext.color = dataContext.color || [70, 156, 150, 1];\r\n        dataContext.stepDelay = dataContext.stepDelay || 300;\r\n        dataContext.valueMax = dataContext.valueMax || 1;\r\n        dataContext.fluxMax = dataContext.fluxMax || 1;\r\n        dataContext.skipSteps = dataContext.skipSteps || 1;\r\n        dataContext.radius = dataContext.radius || dataContext.origRadius;\r\n        dataContext.halfQuantity = dataContext.valueMax / 2.0;\r\n        dataContext.halfFlux = dataContext.fluxMax / 2.0;\r\n        dataContext.baseColor = [170, 0, 255, 1];\r\n        dataContext.radius = dataContext.radius || dataContext.origRadius;\r\n        dataContext.mouseDown = false;\r\n        dataContext.dataPointToMove = -1;\r\n        dataContext.userSelectedDataPoint = -1;\r\n        dataContext.progressBar = null;\r\n        dataContext.editMode = false;\r\n        dataContext.arrowMode = 0; //0 = Off, 1 = Waiting for 1st point, 2 = Waiting for 2nd point\r\n        dataContext.arrowPoints = []; //After `Add Arrow`, [0] holds FROM data point's index, [1] holds TO data point's index\r\n        dataContext.fontResource = null;\r\n    }\r\n\r\n    function updatePanel(gui, controller, data) {\r\n        data.userSelectedDataPoint = -1;\r\n        data.skipSteps = data.skipSteps || 1;\r\n        data.stepDelay = data.stepDelay || 300;\r\n        data.valueMax = data.valueMax || 1;\r\n        data.fluxMax = data.fluxMax || 1;\r\n        data.color = data.color || [70, 156, 150, 1];\r\n        data.radius = data.radius || data.origRadius;\r\n        data.halfQuantity = data.valueMax / 2.0;\r\n        data.halfFlux = data.fluxMax / 2.0;\r\n        controller.controls.size = data.radius;\r\n        controller.controls.skipSteps = data.skipSteps;\r\n        controller.controls.valueMax = data.valueMax;\r\n        controller.controls.fluxMax = data.fluxMax;\r\n        controller.controls.stepDelay = data.stepDelay;\r\n        controller.controls.color = data.color;\r\n        gui.updateDisplay();\r\n    }\r\n\r\n}","export default class FileUtilities {\r\n\r\n  processXLSXIntoCSV(xlsxFile, onComplete) {\r\n    var reader = new FileReader();\r\n    reader.readAsBinaryString(xlsxFile);\r\n    reader.onload = () => {\r\n      var csvSheetStrings = this.transformXLXSIntoCsvStrings(reader.result);\r\n      onComplete(this.parseSingleCSV(csvSheetStrings[0]));\r\n    }\r\n  }\r\n\r\n  processPlotsData(file, onComplete){\r\n    var reader = new FileReader();\r\n    reader.readAsText(file);\r\n    reader.onload = () => {\r\n      let text = reader.result;\r\n      onComplete(JSON.parse(text));\r\n    }\r\n  }\r\n\r\n  transformXLXSIntoCsvStrings(binaryContents) {\r\n    const XLSX = require('xlsx')\r\n    const binaryType = {\r\n      type: 'binary'\r\n    };\r\n    var csvStrings = [];\r\n    var workbook = XLSX.read(binaryContents, binaryType);\r\n    workbook.SheetNames.forEach(name => {\r\n      csvStrings.push(XLSX.utils.sheet_to_csv(workbook.Sheets[name]));\r\n    });\r\n\r\n    return csvStrings;\r\n  }\r\n\r\n  parseSingleCSV(csvString) {\r\n    var numOfRows = 0;\r\n    var numOfColumns = 1;\r\n    var ch, i;\r\n    //Count rows\r\n    for (i = 0; i < csvString.length; i++) {\r\n      ch = csvString.charAt(i);\r\n      if (ch === '\\n') {\r\n        numOfRows++\r\n      }\r\n    }\r\n    //Count columns\r\n    ch = '';\r\n    i = 0;\r\n    while (ch !== '\\n') {\r\n      ch = csvString.charAt(i);\r\n      if (ch === ',') {\r\n        numOfColumns++;\r\n      }\r\n      i++;\r\n    }\r\n    //Create 2D array to hold xlsx data\r\n    this.data = new Array(numOfRows);\r\n    for (i = 0; i < numOfRows; i++) {\r\n      this.data[i] = new Array(numOfColumns);\r\n    }\r\n    //Fill array\r\n    for (i = 0; i < this.data.length; i++) {\r\n      var rows = csvString.split(\"\\n\");\r\n      this.data[i] = rows[i].split(\",\");\r\n    }\r\n    //Remove multiple label rows, starting at 1 (after first label row)\r\n    for (i = 1; i < this.data.length; i++){\r\n      if ((this.data[i][0] === \"t\") || (this.data[i][1] === \"-\")) {\r\n        this.data.splice(i, 1);\r\n      }\r\n    }\r\n    return this.data;\r\n  }\r\n}","import React from 'react';\r\nimport FormGroup from 'react-bootstrap/lib/FormGroup';\r\nimport FormControl from 'react-bootstrap/lib/FormControl';\r\nimport ControlLabel from 'react-bootstrap/lib/ControlLabel';\r\nimport FileUtilities from '../lib/utilities/FileUtilities';\r\nimport NavItem from 'react-bootstrap/lib/NavItem';\r\n\r\nexport default class FileInput extends NavItem {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.title = this.props.title || \"Upload file\";\r\n    this.processUpload = this.processUpload.bind(this);\r\n    this.state = { callback: this.props.onDone, accept: this.props.accept, plot: this.props.isPlot };\r\n  }\r\n\r\n  hasNoFiles(files){\r\n    return files.length === 0;\r\n  }\r\n\r\n  processUpload(e){\r\n    if(this.state.plot)\r\n      this.readPlots(e.target.files, this.state.callback);\r\n    else\r\n      this.readXLSX(e.target.files, this.state.callback);\r\n  }\r\n\r\n  readPlots(files, callback){\r\n    const call = callback;\r\n    let fileUtil = new FileUtilities();\r\n    if(files.length === 0)\r\n      return;\r\n    fileUtil.processPlotsData(files[0], function(dataString){\r\n       call(dataString);\r\n    });\r\n  }\r\n\r\n  readXLSX(files, callback){\r\n    const call = callback;\r\n    let fileUtil = new FileUtilities();\r\n    if(this.hasNoFiles(files))\r\n      return;\r\n    fileUtil.processXLSXIntoCSV(files[0], function(dataString){\r\n       call(dataString);\r\n    });\r\n  }\r\n\r\n  render () {\r\n      return (\r\n        <FormGroup>\r\n         <ControlLabel htmlFor={this.title} style={{ cursor: \"pointer\" }}>\r\n              {this.title}\r\n              <FormControl id={this.title}\r\n                           type=\"file\" \r\n                           accept={this.accept}\r\n                           onChange={this.processUpload} \r\n                           ref={input => {this.fileInput = input;}} \r\n                           style={{ display: \"none\" }} />\r\n          </ControlLabel>\r\n        </FormGroup>\r\n      );\r\n  }\r\n}\r\n        ","export class Model {\r\n    constructor(id = \"untracked\") {\r\n        this.id = id;\r\n        this.compartments = [];\r\n        this.labels = [];\r\n        this.arrows = [];\r\n        this.step = 0;\r\n        this.fluxMax = 1;\r\n        this.valueMax = 1;\r\n        this.stepDelay = 300;\r\n        this.radius = 40;\r\n        this.color = [70, 156, 150, 1];\r\n        this.skipSteps = 1;\r\n    }\r\n}\r\n\r\nexport default Model;","import Model from './Model';\r\nimport localforage from 'localforage';\r\n\r\nconst WEB_STORAGE_KEY = \"plots\";\r\n\r\nexport default class LocalStorage {\r\n\r\n    async addNewModelToLocal(modelName){\r\n        let model = this.newModelTemplate(modelName);\r\n        let models = await this.loadModelsFromDefaultContainer();\r\n        models.push(model);\r\n        await this.saveToStore(WEB_STORAGE_KEY, models, \"Failed to add a new model\").catch(() => {return model}); \r\n        return model;\r\n    }\r\n\r\n    async saveToStore(key, value, failureMsg = \"Failed to write to storage\"){\r\n        try {\r\n            await localforage.setItem(key, \"!\" + JSON.stringify(value));\r\n        } catch (error) {\r\n            alert(failureMsg + String(error));\r\n        }\r\n    }\r\n\r\n    async fetchFromStore(key, failureMsg = \"Failed to fetch from storage\"){\r\n        try {\r\n            let result = await localforage.getItem(key);\r\n            if(!result)\r\n                return null;\r\n            return JSON.parse(result.substring(1));\r\n        } catch (error) {\r\n            alert(failureMsg + \": \" + String(error));            \r\n        }\r\n    }\r\n\r\n    //  item must have name of plot\r\n    //  addition must be Model\r\n    async updateStorage(name, addition){\r\n        let models = await this.loadModelsFromDefaultContainer();\r\n        for (const modelId in models) {\r\n            if (models.hasOwnProperty(modelId) && models[modelId].name === name) {\r\n                const element = models[modelId];\r\n                let id = element.versions.length + 1;\r\n                addition.id = name + id;\r\n                element.versions = [this.newModelVersion(addition)];\r\n            }\r\n        }\r\n        this.saveToStore(WEB_STORAGE_KEY, models, \"Failed to save the models\");\r\n    }\r\n    \r\n    async removeFromStorage(name){\r\n        let models = await this.loadModelsFromDefaultContainer();\r\n        let reducedList = [];\r\n        for (const modelId in models) {\r\n            if (models.hasOwnProperty(modelId)) {\r\n                if(models[modelId].name !== name){\r\n                    reducedList.push(models[modelId]);\r\n                }\r\n            }\r\n        }\r\n        this.saveToStore(WEB_STORAGE_KEY, reducedList, \"Failed to save the models\");\r\n    }\r\n\r\n    async loadFromStorage() {\r\n        let models = await this.loadModelsFromDefaultContainer();\r\n        if(models.length === 0){\r\n            models.push(this.newModelTemplate());\r\n            this.saveToStore(WEB_STORAGE_KEY, models, \"Failed to save the models\");\r\n        }\r\n        return models;\r\n    }\r\n\r\n    async loadModelsFromDefaultContainer(){\r\n        let models = await this.fetchFromStore(WEB_STORAGE_KEY, \"Failed to Access Memory\").catch();\r\n        if (!models || !models.length) {\r\n            models = [];\r\n        }\r\n        return models;\r\n    }\r\n    \r\n    async writeToLocalStorage(dataArray){\r\n        if (!dataArray || !dataArray.length) {\r\n            dataArray = [];\r\n        }\r\n        await this.saveToStore(WEB_STORAGE_KEY, dataArray);\r\n    }\r\n\r\n    newModelTemplate(name = \"Default Storage\") {\r\n       return {\r\n                name: name,\r\n                versions: [this.newModelVersion(new Model(name + \".\" + 1))]\r\n            };\r\n    }\r\n\r\n    newModelVersion(model){\r\n        return {\r\n            plot: model\r\n        }\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport Navbar from 'react-bootstrap/lib/Navbar';\r\nimport FormGroup from 'react-bootstrap/lib/FormGroup';\r\nimport ControlLabel from 'react-bootstrap/lib/ControlLabel';\r\nimport Form from 'react-bootstrap/lib/Form';\r\nimport FileInput from './FileInput';\r\nimport localStorage from '../lib/LocalStorage';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nclass Navigation extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.IController = this.props.IController;\r\n    this.dataContext = this.props.dataContext;\r\n\r\n    this.uploadPoints = this.uploadDataPoints.bind(this);\r\n    this.uploadFlux = this.uploadFluxData.bind(this);\r\n    this.processUpload = this.processUpload.bind(this);\r\n  }\r\n\r\n  async downloadLocalStorage(){\r\n    toast(\"Prepping Download\", { \r\n      position: toast.POSITION.TOP_LEFT\r\n    });\r\n    let data = JSON.stringify(await (new localStorage()).loadModelsFromDefaultContainer());\r\n    var blobData = new Blob([data], {type: 'text/plain'});\r\n    let textFile = window.URL.createObjectURL(blobData);\r\n    let downloadAnchorNode = document.createElement('a');\r\n    downloadAnchorNode.setAttribute(\"href\", textFile);\r\n    downloadAnchorNode.setAttribute(\"download\", \"plots.json\");\r\n    document.body.appendChild(downloadAnchorNode);\r\n    downloadAnchorNode.click();\r\n    downloadAnchorNode.remove();\r\n  }\r\n\r\n  processUpload(e){\r\n    this.readPlots(e.target.files);\r\n  }\r\n\r\n  uploadDataPoints(data){\r\n      toast(\"Upload Point Data Complete\", { \r\n        position: toast.POSITION.TOP_LEFT\r\n      });\r\n      this.dataContext.injectCompartmentList(data);\r\n  }\r\n\r\n  uploadFluxData(data) {\r\n    toast(\"Upload Flux Data Complete\", { \r\n      position: toast.POSITION.TOP_LEFT\r\n    });\r\n    this.dataContext.injectFluxList(data);\r\n  }\r\n\r\n  async  uploadModels(data) {\r\n    if(data && window.confirm(\"Warning! This will replace all of your models with the uploaded models. Continue?\")){\r\n      await (new localStorage()).writeToLocalStorage(data);\r\n      window.location.reload();\r\n      return;\r\n    }\r\n    toast(\"No Models Uploaded\", { \r\n      position: toast.POSITION.TOP_LEFT\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    let preventRedirect = e => {\r\n      e.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <Navbar inverse id='mainNav'>\r\n          <Navbar.Header>\r\n            <Navbar.Brand className='nav-brand'>\r\n              <a href=\"https://github.com/staujd02/time_machine\">Compartmental Visualizer</a>\r\n            </Navbar.Brand>\r\n          </Navbar.Header>\r\n          <Form inline>\r\n            <FileInput className='nav-item' onDone={this.uploadPoints} isPlot={false} accept=\".xlsx\" onClick={preventRedirect} title={\"Upload Compartment Data\"}/>\r\n            <FileInput className='nav-item' onDone={this.uploadFlux} isPlot={false} accept=\".xlsx\" onClick={preventRedirect} title={\"Upload Flux Data\"}/>\r\n            <FileInput className='nav-item' onDone={this.uploadModels} isPlot={true} accept=\".json\" onClick={preventRedirect} title={\"Upload Models\"}/>\r\n            <FormGroup className='nav-item'>\r\n              <ControlLabel htmlFor=\"Export Models\" style={{ cursor: \"pointer\" }} onClick={this.downloadLocalStorage}>\r\n                    {\"Export Models\"}\r\n                    <ToastContainer autoClose={1500} />\r\n              </ControlLabel>\r\n            </FormGroup>\r\n          </Form>\r\n        </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;","import React, { Component } from 'react';\r\nexport default class SavedPlot extends Component {\r\n\r\n  constructor(param){\r\n    super(param);\r\n    this.dataCapsule = this.props.dataCapsule;\r\n    this.name = this.dataCapsule.name;\r\n    this.className = this.props.className;\r\n  }\r\n\r\n  render() {\r\n    return ( \r\n        <div className={this.className}>{this.name}</div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport SavedPlot from './SavedPlot';\r\nimport Button from 'react-bootstrap/lib/Button';\r\nimport LocalStorage from '../lib/LocalStorage';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default class StorageList extends Component {\r\n\r\n  constructor(param){\r\n    super(param);\r\n    const parent = this;\r\n    this.entries = [];\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.addToLocal = this.addToLocal.bind(this);\r\n    this.removeFromLocal = this.removeFromLocal.bind(this);\r\n    this.loadSaves = this.loadSaves.bind(this);\r\n    this.createButtonEntry = this.createButtonEntry.bind(this);\r\n    this.createEntryName = this.createEntryName.bind(this);\r\n    this.createGrid = this.createGrid.bind(this);\r\n    this.activeModelName = this.activeModelName.bind(this);\r\n    this.state = {dataContext: parent.props.dataContext};\r\n    this.loadSaves();\r\n  }\r\n\r\n  isActive(capsule){\r\n    return this.state.dataContext.currentPlot().id === capsule.versions[capsule.versions.length - 1].plot.id;\r\n  }\r\n\r\n  applyName(capsule){\r\n    return this.isActive(capsule) ? \"Save\" : \"Load\";\r\n  }\r\n\r\n  createButtonEntry(save){\r\n      return <Button key={this.entries.length} className=\"grid-item\" onClick={() => this.handleClick(save)}>{this.applyName(save)}</Button>;\r\n  }\r\n\r\n  createEntryName(save){\r\n      return <SavedPlot key={this.entries.length} className=\"grid-item\" dataCapsule={save}/>;\r\n  }\r\n\r\n  activeModelName(){\r\n    let model = \"\";\r\n    if(this.state.models){\r\n    this.state.models.forEach(s => {\r\n      if(this.isActive(s)){\r\n          model = s.name;\r\n      }\r\n    });\r\n    }\r\n    return \" \" + model;\r\n  }\r\n\r\n  async addToLocal(){\r\n    let resp = this.solictStorageName('you would like to add.');\r\n    if(!!resp){\r\n      await (new LocalStorage()).addNewModelToLocal(resp);\r\n      await this.loadSaves();\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n  \r\n  async removeFromLocal(){\r\n    let resp = this.solictStorageName('you would like to permanently delete.');\r\n    if(!!resp){\r\n      await (new LocalStorage()).removeFromStorage(resp);\r\n      await this.loadSaves();\r\n      this.forceUpdate();\r\n      toast.success(\"Model Removed\");\r\n    }\r\n  }\r\n\r\n  solictStorageName(extension) {\r\n    return window.prompt('Please enter the name of Model ' + extension);\r\n  }\r\n\r\n  async handleClick(s) {\r\n    if(this.isActive(s)){\r\n      let plot = this.state.dataContext.currentPlot();\r\n      await (new LocalStorage()).updateStorage(s.name, plot);\r\n      toast.success(\"Model Saved\");\r\n    } else {\r\n      await this.loadSaves();\r\n      this.state.dataContext.currentPlot(s);\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  async loadSaves(){\r\n    this.entries = [];\r\n    let models = await (new LocalStorage()).loadFromStorage(this.ThreeController);\r\n    let dataContext = this.state.dataContext;\r\n    this.setState({\r\n        dataContext: dataContext,\r\n        models: models\r\n    });\r\n  }\r\n\r\n  createGrid(){\r\n    if(this.state.models){\r\n      this.entries = [];\r\n      this.state.models.forEach(s => {\r\n        this.entries.push(this.createEntryName(s));\r\n        this.entries.push(this.createButtonEntry(s));\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    this.createGrid();\r\n\r\n    return ( \r\n        <div>\r\n          <h4 className=\"model-list-banner\">Models</h4>\r\n          <h5 className=\"active-banner\"><span>Loaded Model: </span>{this.activeModelName()}</h5>\r\n          <div className=\"grid-container\">\r\n            {this.entries}\r\n          </div>\r\n          <div className=\"grid-container\">\r\n            <Button id=\"new-plot\" onClick={this.addToLocal}>New Model</Button>\r\n            <Button id=\"delete-plot\" onClick={this.removeFromLocal}>Delete Model</Button>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}","class DataContext {\r\n\r\n    constructor(model) {\r\n        this.plot_id = model.id;\r\n        this.callbacks = [];\r\n        this.labelMode = false;\r\n        this.onLoad = null;\r\n        this.animationData = null;\r\n        this.fluxData = null;\r\n\r\n        // This is for updating legacy saves\r\n        if(model.dataPoints){\r\n            model.compartments = model.dataPoints;\r\n            model.dataPoints = undefined;\r\n        }\r\n\r\n        Object.assign(this, model);\r\n\r\n        this.callObservers = this.callObservers.bind(this);\r\n        this.registerCallback = this.registerCallback.bind(this);\r\n        this.currentPlot = this.currentPlot.bind(this);\r\n        this.currentPlotDetails = this.currentPlotDetails.bind(this);\r\n        this.loadPlot = this.loadPlot.bind(this);\r\n        this.injectCompartmentList = this.loadCompartmentData.bind(this);\r\n        this.injectFluxList = this.loadFluxData.bind(this);\r\n        this.dataLoaded = this.dataLoaded.bind(this);\r\n        this.hasNextStep = this.hasNextStep.bind(this);\r\n    }\r\n\r\n    dataLoaded() {\r\n        return this.animationData != null;\r\n    }\r\n\r\n    hasNextStep() {\r\n        return this.dataLoaded() && this.step < this.animationData.length;\r\n    }\r\n\r\n    registerCallback(call) {\r\n        this.callbacks.push(call);\r\n    }\r\n\r\n    currentPlot(plot = null) {\r\n        if (plot) {\r\n            return this.loadPlot(plot.versions[plot.versions.length - 1].plot);\r\n        } else {\r\n            return this.currentPlotDetails();\r\n        }\r\n    }\r\n\r\n    currentPlotDetails() {\r\n        if(this.dataPoints){\r\n            this.compartments = this.dataPoints;\r\n        }\r\n        return {\r\n            id: this.plot_id,\r\n            compartments: this.compartments,\r\n            labels: this.labels,\r\n            arrows: this.arrows,\r\n            step: this.step,\r\n            valueMax: this.valueMax,\r\n            fluxMax: this.fluxMax,\r\n            stepDelay: this.stepDelay,\r\n            color: this.color,\r\n            skipSteps: this.skipSteps,\r\n            radius: this.radius\r\n        };\r\n    }\r\n\r\n    callObservers() {\r\n        this.callbacks.forEach(call => {\r\n            call();\r\n        });\r\n    }\r\n\r\n    loadFluxData(xlsxData) {\r\n        if (xlsxData.length > 1 && isNaN(xlsxData[1][1])) {\r\n            this.fluxOriginLabels = xlsxData[0];\r\n            this.fluxDestinationLabels = xlsxData[1];\r\n            this.fluxOriginLabels.splice(0, 1);\r\n            this.fluxDestinationLabels.splice(0, 1);\r\n            xlsxData.splice(0, 1); //Remove extra label column\r\n        }\r\n        xlsxData.splice(0, 1); //Remove label column\r\n        this.fluxData = xlsxData;\r\n        if (this.onLoad && typeof this.onLoad === \"function\")\r\n            this.onLoad();\r\n    }\r\n\r\n    loadPlot(plot) {\r\n        if(plot.dataPoints){\r\n            plot.compartments = plot.dataPoints;\r\n        }\r\n        Object.assign(this, plot);\r\n        this.plot_id = plot.id;\r\n        this.callObservers();\r\n        return plot;\r\n    }\r\n\r\n    loadCompartmentData(xlsxData) {\r\n        this.labels = xlsxData[0];\r\n        xlsxData.splice(0, 1); //Remove label column\r\n        this.animationData = xlsxData;\r\n        if (this.onLoad && typeof this.onLoad === \"function\")\r\n            this.onLoad();\r\n    }\r\n}\r\n\r\nexport default DataContext;","import React, { Component } from 'react';\r\nimport './css/App.css';\r\nimport ThreeContainer from './components/ThreeContainer';\r\nimport Navigation from './components/Navigation';\r\nimport StorageList from './components/StorageList.js';\r\nimport LocalStorage from './lib/LocalStorage.js';\r\nimport Grid from 'react-bootstrap/lib/Grid';\r\nimport Row from 'react-bootstrap/lib/Row';\r\nimport Col from 'react-bootstrap/lib/Col';\r\nimport Image from 'react-bootstrap/lib/Image';\r\nimport DataContext from './lib/DataContext';\r\n\r\nclass App extends Component {\r\n \r\n  constructor(props){\r\n    super(props);\r\n    this.ThreeController = {\r\n      resetDataAnimation: function() {},\r\n      onLoad: function() {},\r\n      onFluxLoad: function() {}\r\n    };\r\n    this.fetchSaves()\r\n  }\r\n\r\n  async fetchSaves(){\r\n    let saves = await ((new LocalStorage()).loadFromStorage(this.ThreeController));\r\n    console.log(saves);\r\n    let currentPlot = saves[0].versions[saves[0].versions.length - 1].plot;\r\n    let currentContext = new DataContext(currentPlot);\r\n    this.setState({\r\n      saves: saves,\r\n      currentPlot: currentPlot,\r\n      currentContext: currentContext\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if(!this.state || !this.state.currentContext)\r\n      return (<div>Loading From Storage</div>);\r\n\r\n    return (\r\n      <div className=\"app\">\r\n            <Grid fluid={true} className='fill'>\r\n              <Row>\r\n                  <Navigation dataContext={this.state.currentContext} IController={this.ThreeController} />\r\n              </Row>\r\n              <Row className='fill'>\r\n                <Col sm={2} md={2} className='sidebar'>\r\n                  <Row sm={2} md={2}>\r\n                    <div className='dat-style' id=\"datGuiAnchor\"></div>\r\n                  </Row>\r\n                  <Row sm={2} md={2}>\r\n                    <StorageList dataContext={this.state.currentContext} saves={this.saves}></StorageList>\r\n                  </Row>\r\n                  <Image className=\"logo\" src=\"./pfw-white.png\"></Image>\r\n                </Col>\r\n                <Col sm={10} md={10} className='threeContainer'> \r\n                  <ThreeContainer dataContext={this.state.currentContext} IController={this.ThreeController}/> \r\n                </Col>\r\n              </Row>\r\n            </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport './css/bootstrap.min.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}